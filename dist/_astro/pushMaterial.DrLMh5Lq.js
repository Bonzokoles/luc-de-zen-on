import{V as M,O as m,E,M as T}from"./math.vector.C8FsJn6B.js";import{a as h,p as F,S as D,s as c,L as P}from"./decorators.serialization.DTWIlLMH.js";import{T as I}from"./tools.kgQOdK5j.js";import{D as w,V as L}from"./postProcess.BhJOrjOy.js";import{B as C,a as W}from"./scene.C9ljXyY7.js";import{U as B}from"./light.Tpw1S7gS.js";import{P as R}from"./math.plane.DogzNArm.js";import{I as U}from"./engine.Bhq7AZzW.js";class O{constructor(e,t,i){this.bu=e,this.bv=t,this.distance=i,this.faceId=0,this.subMeshId=0,this._internalSubMeshId=0}}class A{static extractMinAndMaxIndexed(e,t,i,r,n,a){for(let l=i;l<i+r;l++){const o=t[l]*3,p=e[o],f=e[o+1],d=e[o+2];n.minimizeInPlaceFromFloats(p,f,d),a.maximizeInPlaceFromFloats(p,f,d)}}static extractMinAndMax(e,t,i,r,n,a){for(let l=t,o=t*r;l<t+i;l++,o+=r){const p=e[o],f=e[o+1],d=e[o+2];n.minimizeInPlaceFromFloats(p,f,d),a.maximizeInPlaceFromFloats(p,f,d)}}}h([F.filter((...[u,e])=>!Array.isArray(u)&&!Array.isArray(e))],A,"extractMinAndMaxIndexed",null);h([F.filter((...[u])=>!Array.isArray(u))],A,"extractMinAndMax",null);function V(u,e,t,i,r=null){const n=new M(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),a=new M(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return A.extractMinAndMaxIndexed(u,e,t,i,n,a),r&&(n.x-=n.x*r.x+r.y,n.y-=n.y*r.x+r.y,n.z-=n.z*r.x+r.y,a.x+=a.x*r.x+r.y,a.y+=a.y*r.x+r.y,a.z+=a.z*r.x+r.y),{minimum:n,maximum:a}}function Q(u,e,t,i=null,r){const n=new M(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),a=new M(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return r||(r=3),A.extractMinAndMax(u,e,t,r,n,a),i&&(n.x-=n.x*i.x+i.y,n.y-=n.y*i.x+i.y,n.z-=n.z*i.x+i.y,a.x+=a.x*i.x+i.y,a.y+=a.y*i.x+i.y,a.z+=a.z*i.x+i.y),{minimum:n,maximum:a}}class b{get materialDefines(){return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:this._getDrawWrapper()?.defines}set materialDefines(e){const t=this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0);t.defines=e}_getDrawWrapper(e,t=!1){e=e??this._engine.currentRenderPassId;let i=this._drawWrappers[e];return!i&&t&&(this._drawWrappers[e]=i=new w(this._mesh.getScene().getEngine())),i}_removeDrawWrapper(e,t=!0,i=!1){t&&this._drawWrappers[e]?.dispose(i),this._drawWrappers[e]=void 0}get effect(){return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:this._getDrawWrapper()?.effect??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(e){this._mainDrawWrapperOverride=e}setEffect(e,t=null,i,r=!0){const n=this._drawWrapper;n.setEffect(e,t,r),i!==void 0&&(n.materialContext=i),e||(n.defines=null,n.materialContext=void 0)}resetDrawCache(e,t=!1){if(this._drawWrappers)if(e!==void 0){this._removeDrawWrapper(e,!0,t);return}else for(const i of this._drawWrappers)i?.dispose(t);this._drawWrappers=[]}static AddToMesh(e,t,i,r,n,a,l,o=!0){return new b(e,t,i,r,n,a,l,o)}constructor(e,t,i,r,n,a,l,o=!0,p=!0){this.materialIndex=e,this.verticesStart=t,this.verticesCount=i,this.indexStart=r,this.indexCount=n,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=a,this._renderingMesh=l||a,p&&a.subMeshes.push(this),this._engine=this._mesh.getScene().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=a.subMeshes.length-1,o&&(this.refreshBoundingInfo(),a.computeWorldMatrix(!0))}get IsGlobal(){return this.verticesStart===0&&this.verticesCount===this._mesh.getTotalVertices()&&this.indexStart===0&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(e){return this._boundingInfo=e,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const e=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return e||this._renderingMesh}getMaterial(e=!0){const t=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(t){if(this._isMultiMaterial(t)){const i=t.getSubMaterial(this.materialIndex);return this._currentMaterial!==i&&(this._currentMaterial=i,this.resetDrawCache()),i}}else return e&&this._mesh.getScene()._hasDefaultMaterial?this._mesh.getScene().defaultMaterial:null;return t}_isMultiMaterial(e){return e.getSubMaterial!==void 0}refreshBoundingInfo(e=null){if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.geometry)return this;if(e||(e=this._renderingMesh.getVerticesData(L.PositionKind)),!e)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const t=this._renderingMesh.getIndices();let i;if(this.indexStart===0&&this.indexCount===t.length){const r=this._renderingMesh.getBoundingInfo();i={minimum:r.minimum.clone(),maximum:r.maximum.clone()}}else i=V(e,t,this.indexStart,this.indexCount,this._renderingMesh.geometry.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(i.minimum,i.maximum):this._boundingInfo=new C(i.minimum,i.maximum),this}_checkCollision(e){return this.getBoundingInfo()._checkCollision(e)}updateBoundingInfo(e){let t=this.getBoundingInfo();return t||(this.refreshBoundingInfo(),t=this.getBoundingInfo()),t&&t.update(e),this}isInFrustum(e){const t=this.getBoundingInfo();return t?t.isInFrustum(e,this._mesh.cullingStrategy):!1}isCompletelyInFrustum(e){const t=this.getBoundingInfo();return t?t.isCompletelyInFrustum(e):!1}render(e){return this._renderingMesh.render(this,e,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(e,t){if(!this._linesIndexBuffer){const i=Math.floor(this.indexCount/3)*6,n=this.verticesStart+this.verticesCount>65535?new Uint32Array(i):new Uint16Array(i);let a=0;if(e.length===0)for(let l=this.indexStart;l<this.indexStart+this.indexCount;l+=3)n[a++]=l,n[a++]=l+1,n[a++]=l+1,n[a++]=l+2,n[a++]=l+2,n[a++]=l;else for(let l=this.indexStart;l<this.indexStart+this.indexCount;l+=3)n[a++]=e[l],n[a++]=e[l+1],n[a++]=e[l+1],n[a++]=e[l+2],n[a++]=e[l+2],n[a++]=e[l];this._linesIndexBuffer=t.createIndexBuffer(n),this._linesIndexCount=n.length}return this._linesIndexBuffer}canIntersects(e){const t=this.getBoundingInfo();return t?e.intersectsBox(t.boundingBox):!1}intersects(e,t,i,r,n){const a=this.getMaterial();if(!a)return null;let l=3,o=!1;switch(a.fillMode){case 3:case 5:case 6:case 8:return null;case 7:l=1,o=!0;break}return a.fillMode===4?i.length?this._intersectLines(e,t,i,this._mesh.intersectionThreshold,r):this._intersectUnIndexedLines(e,t,i,this._mesh.intersectionThreshold,r):!i.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(e,t,i,r,n):this._intersectTriangles(e,t,i,l,o,r,n)}_intersectLines(e,t,i,r,n){let a=null;for(let l=this.indexStart;l<this.indexStart+this.indexCount;l+=2){const o=t[i[l]],p=t[i[l+1]],f=e.intersectionSegment(o,p,r);if(!(f<0)&&(n||!a||f<a.distance)&&(a=new O(null,null,f),a.faceId=l/2,n))break}return a}_intersectUnIndexedLines(e,t,i,r,n){let a=null;for(let l=this.verticesStart;l<this.verticesStart+this.verticesCount;l+=2){const o=t[l],p=t[l+1],f=e.intersectionSegment(o,p,r);if(!(f<0)&&(n||!a||f<a.distance)&&(a=new O(null,null,f),a.faceId=l/2,n))break}return a}_intersectTriangles(e,t,i,r,n,a,l){let o=null,p=-1;for(let f=this.indexStart;f<this.indexStart+this.indexCount-(3-r);f+=r){p++;const d=i[f],_=i[f+1],k=i[f+2];if(n&&k===4294967295){f+=2;continue}const x=t[d],S=t[_],v=t[k];if(!x||!S||!v||l&&!l(x,S,v,e,d,_,k))continue;const y=e.intersectsTriangle(x,S,v);if(y){if(y.distance<0)continue;if((a||!o||y.distance<o.distance)&&(o=y,o.faceId=p,a))break}}return o}_intersectUnIndexedTriangles(e,t,i,r,n){let a=null;for(let l=this.verticesStart;l<this.verticesStart+this.verticesCount;l+=3){const o=t[l],p=t[l+1],f=t[l+2];if(n&&!n(o,p,f,e,-1,-1,-1))continue;const d=e.intersectsTriangle(o,p,f);if(d){if(d.distance<0)continue;if((r||!a||d.distance<a.distance)&&(a=d,a.faceId=l/3,r))break}}return a}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(e,t){const i=new b(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,e,t,!1);if(!this.IsGlobal){const r=this.getBoundingInfo();if(!r)return i;i._boundingInfo=new C(r.minimum,r.maximum)}return i}dispose(e=!1){this._linesIndexBuffer&&(this._mesh.getScene().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const t=this._mesh.subMeshes.indexOf(this);this._mesh.subMeshes.splice(t,1),this.resetDrawCache(void 0,e)}getClassName(){return"SubMesh"}static CreateFromIndices(e,t,i,r,n,a=!0){let l=Number.MAX_VALUE,o=-Number.MAX_VALUE;const f=(n||r).getIndices();for(let d=t;d<t+i;d++){const _=f[d];_<l&&(l=_),_>o&&(o=_)}return new b(e,l,o-l+1,t,i,r,n,a)}}class g{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.funcRef=1,this.funcMask=255,this.func=519,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681,this.backFunc=519,this.backOpStencilFail=7680,this.backOpDepthFail=7680,this.backOpStencilDepthPass=7681}get func(){return this._func}set func(e){this._func=e}get backFunc(){return this._backFunc}set backFunc(e){this._backFunc=e}get funcRef(){return this._funcRef}set funcRef(e){this._funcRef=e}get funcMask(){return this._funcMask}set funcMask(e){this._funcMask=e}get opStencilFail(){return this._opStencilFail}set opStencilFail(e){this._opStencilFail=e}get opDepthFail(){return this._opDepthFail}set opDepthFail(e){this._opDepthFail=e}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(e){this._opStencilDepthPass=e}get backOpStencilFail(){return this._backOpStencilFail}set backOpStencilFail(e){this._backOpStencilFail=e}get backOpDepthFail(){return this._backOpDepthFail}set backOpDepthFail(e){this._backOpDepthFail=e}get backOpStencilDepthPass(){return this._backOpStencilDepthPass}set backOpStencilDepthPass(e){this._backOpStencilDepthPass=e}get mask(){return this._mask}set mask(e){this._mask=e}get enabled(){return this._enabled}set enabled(e){this._enabled=e}getClassName(){return"MaterialStencilState"}copyTo(e){D.Clone(()=>e,this)}serialize(){return D.Serialize(this)}parse(e,t,i){D.Parse(()=>this,e,t,i)}}h([c()],g.prototype,"func",null);h([c()],g.prototype,"backFunc",null);h([c()],g.prototype,"funcRef",null);h([c()],g.prototype,"funcMask",null);h([c()],g.prototype,"opStencilFail",null);h([c()],g.prototype,"opDepthFail",null);h([c()],g.prototype,"opStencilDepthPass",null);h([c()],g.prototype,"backOpStencilFail",null);h([c()],g.prototype,"backOpDepthFail",null);h([c()],g.prototype,"backOpStencilDepthPass",null);h([c()],g.prototype,"mask",null);h([c()],g.prototype,"enabled",null);class s{get useVertexPulling(){return this._useVertexPulling}set useVertexPulling(e){this._useVertexPulling!==e&&(this._useVertexPulling=e,this.markAsDirty(s.MiscDirtyFlag))}get _supportGlowLayer(){return!1}set _glowModeEnabled(e){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(e){if(this._alpha===e)return;const t=this._alpha;this._alpha=e,(t===1||e===1)&&this.markAsDirty(s.MiscDirtyFlag+s.PrePassDirtyFlag)}get alpha(){return this._alpha}set backFaceCulling(e){this._backFaceCulling!==e&&(this._backFaceCulling=e,this.markAsDirty(s.TextureDirtyFlag))}get backFaceCulling(){return this._backFaceCulling}set cullBackFaces(e){this._cullBackFaces!==e&&(this._cullBackFaces=e,this.markAsDirty(s.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(e){this._blockDirtyMechanism!==e&&(this._blockDirtyMechanism=e,e||this.markDirty())}atomicMaterialsUpdate(e){this.blockDirtyMechanism=!0;try{e(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(e){this._onDisposeObserver&&this.onDisposeObservable.remove(this._onDisposeObserver),this._onDisposeObserver=this.onDisposeObservable.add(e)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new m),this._onBindObservable}set onBind(e){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(e)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new m),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new m),this._onEffectCreatedObservable}set alphaMode(e){this._alphaMode[0]!==e&&(this._alphaMode[0]=e,this.markAsDirty(s.TextureDirtyFlag))}get alphaMode(){return this._alphaMode[0]}get alphaModes(){return this._alphaMode}setAlphaMode(e,t=0){this._alphaMode[t]!==e&&(this._alphaMode[t]=e,this.markAsDirty(s.TextureDirtyFlag))}set needDepthPrePass(e){this._needDepthPrePass!==e&&(this._needDepthPrePass=e,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(e){this._fogEnabled!==e&&(this._fogEnabled=e,this.markAsDirty(s.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case s.WireFrameFillMode:case s.LineListDrawMode:case s.LineLoopDrawMode:case s.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(e){this.fillMode=e?s.WireFrameFillMode:s.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case s.PointFillMode:case s.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(e){this.fillMode=e?s.PointFillMode:s.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(e){this._fillMode!==e&&(this._fillMode=e,this.markAsDirty(s.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(e){const t=this.getScene().getEngine().getCaps().fragmentDepthSupported;e&&!t&&P.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=e&&t,this._markAllSubMeshesAsMiscDirty()}get setVertexOutputInvariant(){return this._setVertexOutputInvariant}set setVertexOutputInvariant(e){this._setVertexOutputInvariant!==e&&(this._setVertexOutputInvariant=e,this._markAllSubMeshesAsMiscDirty())}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(e){this._drawWrapper=e}constructor(e,t,i,r=!1){this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this._useVertexPulling=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.onDisposeObservable=new m,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=[2],this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new g,this._setVertexOutputInvariant=!1,this._useUBO=!1,this._fillMode=s.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=e;const n=t||E.LastCreatedScene;n&&(this._scene=n,this._dirtyCallbacks={},this._forceGLSL=r,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=e||I.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new w(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new B(this._scene.getEngine(),void 0,void 0,e),this._useUBO=this.getScene().getEngine().supportsUniformBuffers,this._createUniformBuffer(),i||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),s.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){const e=this.getScene().getEngine();this._uniformBuffer?.dispose(),e.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new B(e,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new B(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(e){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.markDirty(),this.checkReadyOnlyOnce=!0}unfreeze(){this.markDirty(),this.checkReadyOnlyOnce=!1}isReady(e,t){return!0}isReadyForSubMesh(e,t,i){const r=t.materialDefines;return r?(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=r,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh):!1}getEffect(){return this._drawWrapper.effect}getScene(){return this._scene}_getEffectiveOrientation(e){return this.sideOrientation!==null?this.sideOrientation:e.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(e){this._transparencyMode!==e&&(this._transparencyMode=e,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return this._transparencyMode!=null}get _transparencyModeIsBlend(){return this._transparencyMode===s.MATERIAL_ALPHABLEND||this._transparencyMode===s.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===s.MATERIAL_ALPHATEST||this._transparencyMode===s.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===s.MATERIAL_OPAQUE||this._transparencyMode===s.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:this._disableAlphaBlending?!1:this.alpha<1}needAlphaBlendingForMesh(e){return this._hasTransparencyMode?this._transparencyModeIsBlend:e.visibility<1?!0:this._disableAlphaBlending?!1:e.hasVertexAlpha||this.needAlphaBlending()}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:!1}needAlphaTestingForMesh(e){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(e)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}markDirty(e=!1){const t=this.getScene().meshes;for(const i of t)if(i.subMeshes){for(const r of i.subMeshes)if(r.getMaterial()===this)for(const n of r._drawWrappers)n&&this._materialContext===n.materialContext&&(n._wasPreviouslyReady=!1,n._wasPreviouslyUsingInstances=null,n._forceRebindOnNextCall=e)}e&&this.markAsDirty(s.AllDirtyFlag)}_preBind(e,t=null){const i=this._scene.getEngine(),n=(t??this.sideOrientation)===s.ClockWiseSideOrientation,a=e||this._getDrawWrapper();return U(a)&&a.materialContext&&(a.materialContext.useVertexPulling=this.useVertexPulling),i.enableEffect(a),i.setState(this.backFaceCulling,this.zOffset,!1,n,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),n}bind(e,t){}buildUniformLayout(){const e=this._uniformBuffer;this._eventInfo.ubo=e,this._callbackPluginEventGeneric(8,this._eventInfo),e.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(e,t,i){const r=i._drawWrapper;this._eventInfo.subMesh=i,this._callbackPluginEventBindForSubMesh(this._eventInfo),r._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(e){}bindView(e){this._useUBO?this._needToBindSceneUbo=!0:e.setMatrix("view",this.getScene().getViewMatrix())}bindViewProjection(e){this._useUBO?this._needToBindSceneUbo=!0:(e.setMatrix("viewProjection",this.getScene().getTransformMatrix()),e.setMatrix("projection",this.getScene().getProjectionMatrix()))}bindEyePosition(e,t){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(e,t)}_afterBind(e,t=null,i){if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&t&&(this._needToBindSceneUbo=!1,W(t,this.getScene().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),e?this._scene._cachedVisibility=e.visibility:this._scene._cachedVisibility=1,this._onBindObservable&&e&&this._onBindObservable.notifyObservers(e),this.disableDepthWrite){const r=this._scene.getEngine();this._cachedDepthWriteState=r.getDepthWrite(),r.setDepthWrite(!1)}if(this.disableColorWrite){const r=this._scene.getEngine();this._cachedColorWriteState=r.getColorWrite(),r.setColorWrite(!1)}if(this.depthFunction!==0){const r=this._scene.getEngine();this._cachedDepthFunctionState=r.getDepthFunction()||0,r.setDepthFunction(this.depthFunction)}}unbind(){this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),this.depthFunction!==0&&this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState),this.disableDepthWrite&&this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState),this.disableColorWrite&&this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(e){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=e,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(e){return null}_clonePlugins(e,t){const i={};if(this._serializePlugins(i),s._ParsePlugins(i,e,this._scene,t),this.pluginManager)for(const r of this.pluginManager._plugins){const n=e.pluginManager.getPlugin(r.name);n&&r.copyTo(n)}}getBindedMeshes(){if(this.meshMap){const e=[];for(const t in this.meshMap){const i=this.meshMap[t];i&&e.push(i)}return e}else return this._scene.meshes.filter(t=>t.material===this)}forceCompilation(e,t,i,r){const n={clipPlane:!1,useInstances:!1,...i},a=this.getScene(),l=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const o=()=>{if(!this._scene||!this._scene.getEngine())return;const p=a.clipPlane;if(n.clipPlane&&(a.clipPlane=new R(0,0,0,1)),this._storeEffectOnSubMeshes){let f=!0,d=null;if(e.subMeshes){const _=new b(0,0,0,0,0,e,void 0,!1,!1);_.materialDefines&&(_.materialDefines._renderId=-1),this.isReadyForSubMesh(e,_,n.useInstances)||(_.effect&&_.effect.getCompilationError()&&_.effect.allFallbacksProcessed()?d=_.effect.getCompilationError():(f=!1,setTimeout(o,16)))}f&&(this.allowShaderHotSwapping=l,d&&r&&r(d),t&&t(this))}else this.isReady()?(this.allowShaderHotSwapping=l,t&&t(this)):setTimeout(o,16);n.clipPlane&&(a.clipPlane=p)};o()}async forceCompilationAsync(e,t){return await new Promise((i,r)=>{this.forceCompilation(e,()=>{i()},t,n=>{r(n)})})}markAsDirty(e){this.getScene().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(s._DirtyCallbackArray.length=0,e&s.ImageProcessingDirtyFlag&&s._DirtyCallbackArray.push(s._ImageProcessingDirtyCallBack),e&s.TextureDirtyFlag&&s._DirtyCallbackArray.push(s._TextureDirtyCallBack),e&s.LightDirtyFlag&&s._DirtyCallbackArray.push(s._LightsDirtyCallBack),e&s.FresnelDirtyFlag&&s._DirtyCallbackArray.push(s._FresnelDirtyCallBack),e&s.AttributesDirtyFlag&&s._DirtyCallbackArray.push(s._AttributeDirtyCallBack),e&s.MiscDirtyFlag&&s._DirtyCallbackArray.push(s._MiscDirtyCallBack),e&s.PrePassDirtyFlag&&s._DirtyCallbackArray.push(s._PrePassDirtyCallBack),s._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(s._RunDirtyCallBacks),this.getScene().resetCachedMaterial())}resetDrawCache(){const e=this.getScene().meshes;for(const t of e)if(t.subMeshes)for(const i of t.subMeshes)i.getMaterial()===this&&i.resetDrawCache()}_markAllSubMeshesAsDirty(e){const t=this.getScene();if(t.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const i=t.meshes;for(const r of i)if(r.subMeshes){for(const n of r.subMeshes)if((n.getMaterial()||(t._hasDefaultMaterial?t.defaultMaterial:null))===this)for(const l of n._drawWrappers)!l||!l.defines||!l.defines.markAllAsDirty||this._materialContext===l.materialContext&&e(l.defines)}}_markScenePrePassDirty(){if(this.getScene().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const e=this.getScene().enablePrePassRenderer();e&&e.markAsDirty()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(s._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(s._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(s._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(s._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(s._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(s._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(s._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(s._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(s._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(s._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(this._scene.performancePriority!==0){this.checkReadyOnlyOnce=!0;const e=this._scene.onScenePerformancePriorityChangedObservable.addOnce(()=>{this.checkReadyOnlyOnce=!1});this.onDisposeObservable.add(()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(e)})}}setPrePassRenderer(e){return!1}dispose(e,t,i){const r=this.getScene();if(r.stopAnimation(this),r.freeProcessedMaterials(),r.removeMaterial(this),this._eventInfo.forceDisposeTextures=t,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const n=this._parentContainer.materials.indexOf(this);n>-1&&this._parentContainer.materials.splice(n,1),this._parentContainer=null}if(i!==!0)if(this.meshMap)for(const n in this.meshMap){const a=this.meshMap[n];this._disposeMeshResources(a)}else{const n=r.meshes;for(const a of n)this._disposeMeshResources(a)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.onDisposeObservable.notifyObservers(this),this.onDisposeObservable.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(e){if(!e)return;const t=e.geometry,i=e._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(e.subMeshes&&i)for(const r of e.subMeshes){const n=r._drawWrappers;for(let a=0;a<n.length;a++){const l=n[a]?.effect;if(!l)continue;i[a]===this&&(t?._releaseVertexArrayObject(l),r._removeDrawWrapper(a,!0,!0))}}}else t?._releaseVertexArrayObject(this._drawWrapper.effect);e.material===this&&!e.sourceMesh&&(e.material=null)}serialize(){const e=D.Serialize(this);return e.stencil=this.stencil.serialize(),e.uniqueId=this.uniqueId,this._serializePlugins(e),e}_serializePlugins(e){if(e.plugins={},this.pluginManager)for(const t of this.pluginManager._plugins)t.doNotSerialize||(e.plugins[t.getClassName()]=t.serialize())}static ParseAlphaMode(e,t){e._alphaMode!==void 0?t._alphaMode=Array.isArray(e._alphaMode)?e._alphaMode:[e._alphaMode]:e.alphaMode!==void 0?t._alphaMode=Array.isArray(e.alphaMode)?e.alphaMode:[e.alphaMode]:t._alphaMode=[2]}static Parse(e,t,i){if(!e.customType)e.customType="BABYLON.StandardMaterial";else if(e.customType==="BABYLON.PBRMaterial"&&e.overloadedAlbedo&&(e.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return P.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null;const n=I.Instantiate(e.customType).Parse(e,t,i);return n._loadedUniqueId=e.uniqueId,s.ParseAlphaMode(e,n),n}static _ParsePlugins(e,t,i,r){if(e.plugins)for(const n in e.plugins){const a=e.plugins[n];let l=t.pluginManager?.getPlugin(a.name);if(!l){const o=I.Instantiate("BABYLON."+n);o&&(l=new o(t))}l?.parse(a,i,r)}}}s.TriangleFillMode=0;s.WireFrameFillMode=1;s.PointFillMode=2;s.PointListDrawMode=3;s.LineListDrawMode=4;s.LineLoopDrawMode=5;s.LineStripDrawMode=6;s.TriangleStripDrawMode=7;s.TriangleFanDrawMode=8;s.ClockWiseSideOrientation=0;s.CounterClockWiseSideOrientation=1;s.ImageProcessingDirtyFlag=64;s.TextureDirtyFlag=1;s.LightDirtyFlag=2;s.FresnelDirtyFlag=4;s.AttributesDirtyFlag=8;s.MiscDirtyFlag=16;s.PrePassDirtyFlag=32;s.AllDirtyFlag=127;s.MATERIAL_OPAQUE=0;s.MATERIAL_ALPHATEST=1;s.MATERIAL_ALPHABLEND=2;s.MATERIAL_ALPHATESTANDBLEND=3;s.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0;s.MATERIAL_NORMALBLENDMETHOD_RNM=1;s.OnEventObservable=new m;s._AllDirtyCallBack=u=>u.markAllAsDirty();s._ImageProcessingDirtyCallBack=u=>u.markAsImageProcessingDirty();s._TextureDirtyCallBack=u=>u.markAsTexturesDirty();s._FresnelDirtyCallBack=u=>u.markAsFresnelDirty();s._MiscDirtyCallBack=u=>u.markAsMiscDirty();s._PrePassDirtyCallBack=u=>u.markAsPrePassDirty();s._LightsDirtyCallBack=u=>u.markAsLightDirty();s._AttributeDirtyCallBack=u=>u.markAsAttributesDirty();s._FresnelAndMiscDirtyCallBack=u=>{s._FresnelDirtyCallBack(u),s._MiscDirtyCallBack(u)};s._TextureAndMiscDirtyCallBack=u=>{s._TextureDirtyCallBack(u),s._MiscDirtyCallBack(u)};s._DirtyCallbackArray=[];s._RunDirtyCallBacks=u=>{for(const e of s._DirtyCallbackArray)e(u)};h([c()],s.prototype,"id",void 0);h([c()],s.prototype,"uniqueId",void 0);h([c()],s.prototype,"name",void 0);h([c()],s.prototype,"metadata",void 0);h([c()],s.prototype,"checkReadyOnEveryCall",void 0);h([c()],s.prototype,"checkReadyOnlyOnce",void 0);h([c()],s.prototype,"state",void 0);h([c("alpha")],s.prototype,"_alpha",void 0);h([c("backFaceCulling")],s.prototype,"_backFaceCulling",void 0);h([c("cullBackFaces")],s.prototype,"_cullBackFaces",void 0);h([c()],s.prototype,"sideOrientation",void 0);h([c()],s.prototype,"_alphaMode",void 0);h([c()],s.prototype,"_needDepthPrePass",void 0);h([c()],s.prototype,"disableDepthWrite",void 0);h([c()],s.prototype,"disableColorWrite",void 0);h([c()],s.prototype,"forceDepthWrite",void 0);h([c()],s.prototype,"depthFunction",void 0);h([c()],s.prototype,"separateCullingPass",void 0);h([c("fogEnabled")],s.prototype,"_fogEnabled",void 0);h([c()],s.prototype,"pointSize",void 0);h([c()],s.prototype,"zOffset",void 0);h([c()],s.prototype,"zOffsetUnits",void 0);h([c()],s.prototype,"pointsCloud",null);h([c()],s.prototype,"fillMode",null);h([c()],s.prototype,"useLogarithmicDepth",null);h([c()],s.prototype,"_setVertexOutputInvariant",void 0);h([c()],s.prototype,"transparencyMode",null);class K extends s{constructor(e,t,i=!0,r=!1){super(e,t,void 0,r),this._normalMatrix=new T,this._storeEffectOnSubMeshes=i}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(e,t){return e?!this._storeEffectOnSubMeshes||!e.subMeshes||e.subMeshes.length===0?!0:this.isReadyForSubMesh(e,e.subMeshes[0],t):!1}_isReadyForSubMesh(e){const t=e.materialDefines;return!!(!this.checkReadyOnEveryCall&&e.effect&&t&&t._renderId===this.getScene().getRenderId())}bindOnlyWorldMatrix(e){this._activeEffect.setMatrix("world",e)}bindOnlyNormalMatrix(e){this._activeEffect.setMatrix("normalMatrix",e)}bind(e,t){t&&this.bindForSubMesh(e,t,t.subMeshes[0])}_afterBind(e,t=null,i){super._afterBind(e,t,i),this.getScene()._cachedEffect=t,i?i._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(e,t,i,r=1){return i._drawWrapper._forceRebindOnNextCall||e.isCachedMaterialInvalid(this,t,r)}dispose(e,t,i){this._activeEffect=void 0,super.dispose(e,t,i)}}export{s as M,K as P,b as S,Q as e};
