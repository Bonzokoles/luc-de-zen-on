if(typeof MessageChannel>"u"){class i{constructor(){this.onmessage=null}postMessage(t){const s={data:t};(typeof queueMicrotask=="function"?queueMicrotask:o=>setTimeout(o,0))(()=>this.onmessage&&this.onmessage(s))}start(){}close(){}}class e{constructor(){this.port1=new i,this.port2=new i;const t=(s,o)=>{const a={data:o};(typeof queueMicrotask=="function"?queueMicrotask:r=>setTimeout(r,0))(()=>s.onmessage&&s.onmessage(a))};this.port1.postMessage=s=>t(this.port2,s),this.port2.postMessage=s=>t(this.port1,s)}}globalThis.MessageChannel=e}class l{constructor(){this.isLoading=!1,this.initializeElements(),this.bindEvents(),this.updateTemperatureValue()}initializeElements(){this.elements={modelSelect:document.getElementById("modelSelect"),temperatureSlider:document.getElementById("temperatureSlider"),temperatureValue:document.getElementById("temperatureValue"),maxTokensInput:document.getElementById("maxTokensInput"),promptInput:document.getElementById("promptInput"),sendPrompt:document.getElementById("sendPrompt"),testConnection:document.getElementById("testConnection"),clearChat:document.getElementById("clearChat"),responseContainer:document.getElementById("responseContainer"),responseMetadata:document.getElementById("responseMetadata"),usedModel:document.getElementById("usedModel"),tokenUsage:document.getElementById("tokenUsage"),responseTime:document.getElementById("responseTime"),workerStatus:document.getElementById("workerStatus")}}bindEvents(){this.elements.temperatureSlider.addEventListener("input",()=>this.updateTemperatureValue()),this.elements.sendPrompt.addEventListener("click",()=>this.sendPrompt()),this.elements.testConnection.addEventListener("click",()=>this.testConnection()),this.elements.clearChat.addEventListener("click",()=>this.clearChat()),this.elements.promptInput.addEventListener("keydown",e=>{e.key==="Enter"&&e.ctrlKey&&(e.preventDefault(),this.sendPrompt())})}updateTemperatureValue(){const e=this.elements.temperatureSlider.value;this.elements.temperatureValue.textContent=e}async sendPrompt(){if(this.isLoading)return;const e=this.elements.promptInput.value.trim();if(!e){this.showError("Wprowadź prompt przed wysłaniem!");return}this.setLoading(!0);const n=Date.now();try{const t={prompt:e,model:this.elements.modelSelect.value,temperature:parseFloat(this.elements.temperatureSlider.value),max_tokens:parseInt(this.elements.maxTokensInput.value)};console.log("Wysyłanie requestu do BIELIK API:",t);const s=await fetch("/api/bielik-chat",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),o=Date.now()-n;if(!s.ok)throw new Error(`HTTP ${s.status}: ${s.statusText}`);const a=await s.json();console.log("Odpowiedź z BIELIK API:",a),this.showResponse(a,o)}catch(t){console.error("Błąd podczas komunikacji z BIELIK API:",t),this.showError(`Błąd: ${t.message}`)}finally{this.setLoading(!1)}}async testConnection(){if(this.isLoading)return;this.setLoading(!0);const e=Date.now();try{console.log("Testowanie połączenia z BIELIK API...");const n=await fetch("/api/bielik-analytics"),t=await n.json(),s=await fetch("/api/bielik-chat",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:"Test połączenia",model:"bielik-7b-instruct",temperature:.7,max_tokens:50})}),o=await s.json(),a=Date.now()-e,r={text:`✅ Test połączenia pomyślny!

Analytics API: ${n.ok?"OK":"BŁĄD"}
Chat API: ${s.ok?"OK":"BŁĄD"}
Cloudflare Worker: ${o.worker_used?"Aktywny":"Fallback"}

Statystyki użycia:
- Całkowite zapytania: ${t.total_requests}
- Ostatnie 24h: ${t.requests_last_24h}
- Średni czas odpowiedzi: ${t.avg_response_time}ms`,model:"Test systemu",tokens:t.total_tokens||0,worker_used:o.worker_used,worker_response_time:o.worker_response_time};this.showResponse(r,a)}catch(n){console.error("Błąd podczas testu połączenia:",n),this.showError(`Test nie powiódł się: ${n.message}`)}finally{this.setLoading(!1)}}clearChat(){this.elements.responseContainer.innerHTML='<div class="placeholder">Wyślij prompt aby zobaczyć odpowiedź BIELIK...</div>',this.elements.responseMetadata.style.display="none",this.elements.promptInput.value=""}setLoading(e){this.isLoading=e,this.elements.sendPrompt.disabled=e,this.elements.testConnection.disabled=e,e&&(this.elements.responseContainer.innerHTML='<div class="loading">⏳ Wysyłanie do BIELIK...</div>',this.elements.responseMetadata.style.display="none")}showResponse(e,n){this.elements.responseContainer.innerHTML=`<div class="success">${e.text||"Brak odpowiedzi"}</div>`,this.elements.usedModel.textContent=e.model||"Nieznany",this.elements.tokenUsage.textContent=e.tokens||"0",this.elements.responseTime.textContent=`${n}ms`,this.elements.workerStatus.textContent=e.worker_used?`Worker (${e.worker_response_time}ms)`:"Fallback",this.elements.responseMetadata.style.display="grid"}showError(e){this.elements.responseContainer.innerHTML=`<div class="error">${e}</div>`,this.elements.responseMetadata.style.display="none"}}function d(){const i=document.getElementById("helpModal"),e=document.getElementById("helpButton"),n=document.getElementById("closeModal");e.addEventListener("click",()=>{i.style.display="block"}),n.addEventListener("click",()=>{i.style.display="none"}),window.addEventListener("click",t=>{t.target===i&&(i.style.display="none")})}document.addEventListener("DOMContentLoaded",()=>{console.log("Inicjalizacja BIELIK API Tester..."),window.bielikTester=new l,d()});
