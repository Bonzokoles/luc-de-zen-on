import{a as b,V as l,O as g,M as _,Q as I}from"./math.vector.C8FsJn6B.js";import{L as T,_ as p,S as m,a as h,c as v,s as c}from"./decorators.serialization.DTWIlLMH.js";import{S as y}from"./smartArray.BsIpkRz3.js";import{T as P}from"./tools.kgQOdK5j.js";import{N as f}from"./node.B7U3vf9R.js";import{G as A}from"./math.color.BvxHr_bk.js";import{V as S}from"./math.viewport.CgkTt1RS.js";import{F as M}from"./math.frustum.0quBJc8n.js";class u{}u.POINTERDOWN=1;u.POINTERUP=2;u.POINTERMOVE=4;u.POINTERWHEEL=8;u.POINTERPICK=16;u.POINTERTAP=32;u.POINTERDOUBLETAP=64;class C{constructor(t,e){this.type=t,this.event=e}}class q extends C{constructor(t,e,i,s){super(t,e),this.ray=null,this.originalPickingInfo=null,this.skipOnPointerObservable=!1,this.localPosition=new b(i,s)}}class k extends C{get pickInfo(){return this._pickInfo||this._generatePickInfo(),this._pickInfo}constructor(t,e,i,s=null){super(t,e),this._pickInfo=i,this._inputManager=s}_generatePickInfo(){this._inputManager&&(this._pickInfo=this._inputManager._pickMove(this.event),this._inputManager._setRayOnPointerInfo(this._pickInfo,this.event),this._inputManager=null)}}class E{}E.KEYDOWN=1;E.KEYUP=2;class V{constructor(t,e){this.type=t,this.event=e}}class B extends V{get skipOnPointerObservable(){return this.skipOnKeyboardObservable}set skipOnPointerObservable(t){this.skipOnKeyboardObservable=t}constructor(t,e){super(t,e),this.type=t,this.event=e,this.skipOnKeyboardObservable=!1}}var x;(function(n){n[n.PointerMove=0]="PointerMove",n[n.PointerDown=1]="PointerDown",n[n.PointerUp=2]="PointerUp"})(x||(x={}));class d{}d.DOM_DELTA_PIXEL=0;d.DOM_DELTA_LINE=1;d.DOM_DELTA_PAGE=2;class r extends f{get position(){return this._position}set position(t){this._position=t}set upVector(t){this._upVector=t}get upVector(){return this._upVector}get screenArea(){let t=0,e=0;if(this.mode===r.PERSPECTIVE_CAMERA)this.fovMode===r.FOVMODE_VERTICAL_FIXED?(e=this.minZ*2*Math.tan(this.fov/2),t=this.getEngine().getAspectRatio(this)*e):(t=this.minZ*2*Math.tan(this.fov/2),e=t/this.getEngine().getAspectRatio(this));else{const i=this.getEngine().getRenderWidth()/2,s=this.getEngine().getRenderHeight()/2;t=(this.orthoRight??i)-(this.orthoLeft??-i),e=(this.orthoTop??s)-(this.orthoBottom??-s)}return t*e}set orthoLeft(t){this._orthoLeft=t;for(const e of this._rigCameras)e.orthoLeft=t}get orthoLeft(){return this._orthoLeft}set orthoRight(t){this._orthoRight=t;for(const e of this._rigCameras)e.orthoRight=t}get orthoRight(){return this._orthoRight}set orthoBottom(t){this._orthoBottom=t;for(const e of this._rigCameras)e.orthoBottom=t}get orthoBottom(){return this._orthoBottom}set orthoTop(t){this._orthoTop=t;for(const e of this._rigCameras)e.orthoTop=t}get orthoTop(){return this._orthoTop}setFocalLength(t,e=36){this.fov=2*Math.atan(e/(2*t))}set mode(t){this._mode=t;for(const e of this._rigCameras)e.mode=t}get mode(){return this._mode}get hasMoved(){return this._hasMoved}constructor(t,e,i,s=!0){super(t,i,!1),this._position=l.Zero(),this._upVector=l.Up(),this.oblique=null,this._orthoLeft=null,this._orthoRight=null,this._orthoBottom=null,this._orthoTop=null,this.fov=.8,this.projectionPlaneTilt=0,this.minZ=1,this.maxZ=1e4,this.inertia=.9,this._mode=r.PERSPECTIVE_CAMERA,this.isIntermediate=!1,this.viewport=new S(0,0,1,1),this.layerMask=268435455,this.fovMode=r.FOVMODE_VERTICAL_FIXED,this.cameraRigMode=r.RIG_MODE_NONE,this.customRenderTargets=[],this.outputRenderTarget=null,this.onViewMatrixChangedObservable=new g,this.onProjectionMatrixChangedObservable=new g,this.onAfterCheckInputsObservable=new g,this.onRestoreStateObservable=new g,this.isRigCamera=!1,this._hasMoved=!1,this._rigCameras=new Array,this._skipRendering=!1,this._projectionMatrix=new _,this._postProcesses=new Array,this._activeMeshes=new y(256),this._globalPosition=l.Zero(),this._computedViewMatrix=_.Identity(),this._doNotComputeProjectionMatrix=!1,this._transformMatrix=_.Zero(),this._refreshFrustumPlanes=!0,this._absoluteRotation=I.Identity(),this._isCamera=!0,this._isLeftCamera=!1,this._isRightCamera=!1,this.getScene().addCamera(this),s&&!this.getScene().activeCamera&&(this.getScene().activeCamera=this),this.position=e,this.renderPassId=this.getScene().getEngine().createRenderPassId(`Camera ${t}`)}storeState(){return this._stateStored=!0,this._storedFov=this.fov,this}hasStateStored(){return!!this._stateStored}_restoreStateValues(){return this._stateStored?(this.fov=this._storedFov,!0):!1}restoreState(){return this._restoreStateValues()?(this.onRestoreStateObservable.notifyObservers(this),!0):!1}getClassName(){return"Camera"}toString(t){let e="Name: "+this.name;if(e+=", type: "+this.getClassName(),this.animations)for(let i=0;i<this.animations.length;i++)e+=", animation[0]: "+this.animations[i].toString(t);return e}applyVerticalCorrection(){const t=this.absoluteRotation.toEulerAngles();this.projectionPlaneTilt=this._scene.useRightHandedSystem?-t.x:t.x}get globalPosition(){return this._globalPosition}getActiveMeshes(){return this._activeMeshes}isActiveMesh(t){return this._activeMeshes.indexOf(t)!==-1}isReady(t=!1){if(t){for(const e of this._postProcesses)if(e&&!e.isReady())return!1}return super.isReady(t)}_initCache(){super._initCache(),this._cache.position=new l(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cache.upVector=new l(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cache.mode=void 0,this._cache.minZ=void 0,this._cache.maxZ=void 0,this._cache.fov=void 0,this._cache.fovMode=void 0,this._cache.aspectRatio=void 0,this._cache.orthoLeft=void 0,this._cache.orthoRight=void 0,this._cache.orthoBottom=void 0,this._cache.orthoTop=void 0,this._cache.obliqueAngle=void 0,this._cache.obliqueLength=void 0,this._cache.obliqueOffset=void 0,this._cache.renderWidth=void 0,this._cache.renderHeight=void 0}_updateCache(t){t||super._updateCache(),this._cache.position.copyFrom(this.position),this._cache.upVector.copyFrom(this.upVector)}_isSynchronized(){return this._isSynchronizedViewMatrix()&&this._isSynchronizedProjectionMatrix()}_isSynchronizedViewMatrix(){return super._isSynchronized()?this._cache.position.equals(this.position)&&this._cache.upVector.equals(this.upVector)&&this.isSynchronizedWithParent():!1}_isSynchronizedProjectionMatrix(){let t=this._cache.mode===this.mode&&this._cache.minZ===this.minZ&&this._cache.maxZ===this.maxZ;if(!t)return!1;const e=this.getEngine();return this.mode===r.PERSPECTIVE_CAMERA?t=this._cache.fov===this.fov&&this._cache.fovMode===this.fovMode&&this._cache.aspectRatio===e.getAspectRatio(this)&&this._cache.projectionPlaneTilt===this.projectionPlaneTilt:(t=this._cache.orthoLeft===this.orthoLeft&&this._cache.orthoRight===this.orthoRight&&this._cache.orthoBottom===this.orthoBottom&&this._cache.orthoTop===this.orthoTop&&this._cache.renderWidth===e.getRenderWidth()&&this._cache.renderHeight===e.getRenderHeight(),this.oblique&&(t=t&&this._cache.obliqueAngle===this.oblique.angle&&this._cache.obliqueLength===this.oblique.length&&this._cache.obliqueOffset===this.oblique.offset)),t}attachControl(t,e){}detachControl(t){}update(){this._hasMoved=!1,this._checkInputs(),this.cameraRigMode!==r.RIG_MODE_NONE&&this._updateRigCameras(),this.getViewMatrix(),this.getProjectionMatrix()}_checkInputs(){this.onAfterCheckInputsObservable.notifyObservers(this)}get rigCameras(){return this._rigCameras}get rigPostProcess(){return this._rigPostProcess}_getFirstPostProcess(){for(let t=0;t<this._postProcesses.length;t++)if(this._postProcesses[t]!==null)return this._postProcesses[t];return null}_cascadePostProcessesToRigCams(){const t=this._getFirstPostProcess();t&&t.markTextureDirty();for(let e=0,i=this._rigCameras.length;e<i;e++){const s=this._rigCameras[e],o=s._rigPostProcess;o?(o.getEffectName()==="pass"&&(s.isIntermediate=this._postProcesses.length===0),s._postProcesses=this._postProcesses.slice(0).concat(o),o.markTextureDirty()):s._postProcesses=this._postProcesses.slice(0)}}attachPostProcess(t,e=null){return!t.isReusable()&&this._postProcesses.indexOf(t)>-1?(T.Error("You're trying to reuse a post process not defined as reusable."),0):(e==null||e<0?this._postProcesses.push(t):this._postProcesses[e]===null?this._postProcesses[e]=t:this._postProcesses.splice(e,0,t),this._cascadePostProcessesToRigCams(),this._scene.prePassRenderer&&this._scene.prePassRenderer.markAsDirty(),this._postProcesses.indexOf(t))}detachPostProcess(t){const e=this._postProcesses.indexOf(t);e!==-1&&(this._postProcesses[e]=null),this._scene.prePassRenderer&&this._scene.prePassRenderer.markAsDirty(),this._cascadePostProcessesToRigCams()}getWorldMatrix(){return this._isSynchronizedViewMatrix()?this._worldMatrix:(this.getViewMatrix(),this._worldMatrix)}_getViewMatrix(){return _.Identity()}getViewMatrix(t){return!t&&this._isSynchronizedViewMatrix()?this._computedViewMatrix:(this._hasMoved=!0,this.updateCache(),this._computedViewMatrix=this._getViewMatrix(),this._currentRenderId=this.getScene().getRenderId(),this._childUpdateId++,this._refreshFrustumPlanes=!0,this._cameraRigParams&&this._cameraRigParams.vrPreViewMatrix&&this._computedViewMatrix.multiplyToRef(this._cameraRigParams.vrPreViewMatrix,this._computedViewMatrix),this.parent&&this.parent.onViewMatrixChangedObservable&&this.parent.onViewMatrixChangedObservable.notifyObservers(this.parent),this.onViewMatrixChangedObservable.notifyObservers(this),this._computedViewMatrix.invertToRef(this._worldMatrix),this._computedViewMatrix)}freezeProjectionMatrix(t){this._doNotComputeProjectionMatrix=!0,t!==void 0&&(this._projectionMatrix=t)}unfreezeProjectionMatrix(){this._doNotComputeProjectionMatrix=!1}getProjectionMatrix(t){if(this._doNotComputeProjectionMatrix||!t&&this._isSynchronizedProjectionMatrix())return this._projectionMatrix;this._cache.mode=this.mode,this._cache.minZ=this.minZ,this._cache.maxZ=this.maxZ,this._refreshFrustumPlanes=!0;const e=this.getEngine(),i=this.getScene(),s=e.useReverseDepthBuffer;if(this.mode===r.PERSPECTIVE_CAMERA){this._cache.fov=this.fov,this._cache.fovMode=this.fovMode,this._cache.aspectRatio=e.getAspectRatio(this),this._cache.projectionPlaneTilt=this.projectionPlaneTilt,this.minZ<=0&&(this.minZ=.1);let o;i.useRightHandedSystem?o=_.PerspectiveFovRHToRef:o=_.PerspectiveFovLHToRef,o(this.fov,e.getAspectRatio(this),s?this.maxZ:this.minZ,s?this.minZ:this.maxZ,this._projectionMatrix,this.fovMode===r.FOVMODE_VERTICAL_FIXED,e.isNDCHalfZRange,this.projectionPlaneTilt,s)}else{const o=e.getRenderWidth()/2,a=e.getRenderHeight()/2;i.useRightHandedSystem?this.oblique?_.ObliqueOffCenterRHToRef(this.orthoLeft??-o,this.orthoRight??o,this.orthoBottom??-a,this.orthoTop??a,s?this.maxZ:this.minZ,s?this.minZ:this.maxZ,this.oblique.length,this.oblique.angle,this._computeObliqueDistance(this.oblique.offset),this._projectionMatrix,e.isNDCHalfZRange):_.OrthoOffCenterRHToRef(this.orthoLeft??-o,this.orthoRight??o,this.orthoBottom??-a,this.orthoTop??a,s?this.maxZ:this.minZ,s?this.minZ:this.maxZ,this._projectionMatrix,e.isNDCHalfZRange):this.oblique?_.ObliqueOffCenterLHToRef(this.orthoLeft??-o,this.orthoRight??o,this.orthoBottom??-a,this.orthoTop??a,s?this.maxZ:this.minZ,s?this.minZ:this.maxZ,this.oblique.length,this.oblique.angle,this._computeObliqueDistance(this.oblique.offset),this._projectionMatrix,e.isNDCHalfZRange):_.OrthoOffCenterLHToRef(this.orthoLeft??-o,this.orthoRight??o,this.orthoBottom??-a,this.orthoTop??a,s?this.maxZ:this.minZ,s?this.minZ:this.maxZ,this._projectionMatrix,e.isNDCHalfZRange),this._cache.orthoLeft=this.orthoLeft,this._cache.orthoRight=this.orthoRight,this._cache.orthoBottom=this.orthoBottom,this._cache.orthoTop=this.orthoTop,this._cache.obliqueAngle=this.oblique?.angle,this._cache.obliqueLength=this.oblique?.length,this._cache.obliqueOffset=this.oblique?.offset,this._cache.renderWidth=e.getRenderWidth(),this._cache.renderHeight=e.getRenderHeight()}return this.onProjectionMatrixChangedObservable.notifyObservers(this),this._projectionMatrix}getTransformationMatrix(){return this._computedViewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix),this._transformMatrix}_computeObliqueDistance(t){const e=this,i=this;return(e.radius||(i.target?l.Distance(this.position,i.target):this.position.length()))+t}_updateFrustumPlanes(){this._refreshFrustumPlanes&&(this.getTransformationMatrix(),this._frustumPlanes?M.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=M.GetPlanes(this._transformMatrix),this._refreshFrustumPlanes=!1)}isInFrustum(t,e=!1){if(this._updateFrustumPlanes(),e&&this.rigCameras.length>0){let i=!1;for(const s of this.rigCameras)s._updateFrustumPlanes(),i=i||t.isInFrustum(s._frustumPlanes);return i}else return t.isInFrustum(this._frustumPlanes)}isCompletelyInFrustum(t){return this._updateFrustumPlanes(),t.isCompletelyInFrustum(this._frustumPlanes)}getForwardRay(t=100,e,i){throw p("Ray")}getForwardRayToRef(t,e=100,i,s){throw p("Ray")}dispose(t,e=!1){for(this.onViewMatrixChangedObservable.clear(),this.onProjectionMatrixChangedObservable.clear(),this.onAfterCheckInputsObservable.clear(),this.onRestoreStateObservable.clear(),this.inputs&&this.inputs.clear(),this.getScene().stopAnimation(this),this.getScene().removeCamera(this);this._rigCameras.length>0;){const s=this._rigCameras.pop();s&&s.dispose()}if(this._parentContainer){const s=this._parentContainer.cameras.indexOf(this);s>-1&&this._parentContainer.cameras.splice(s,1),this._parentContainer=null}if(this._rigPostProcess)this._rigPostProcess.dispose(this),this._rigPostProcess=null,this._postProcesses.length=0;else if(this.cameraRigMode!==r.RIG_MODE_NONE)this._rigPostProcess=null,this._postProcesses.length=0;else{let s=this._postProcesses.length;for(;--s>=0;){const o=this._postProcesses[s];o&&o.dispose(this)}}let i=this.customRenderTargets.length;for(;--i>=0;)this.customRenderTargets[i].dispose();this.customRenderTargets.length=0,this._activeMeshes.dispose(),this.getScene().getEngine().releaseRenderPassId(this.renderPassId),super.dispose(t,e)}get isLeftCamera(){return this._isLeftCamera}get isRightCamera(){return this._isRightCamera}get leftCamera(){return this._rigCameras.length<1?null:this._rigCameras[0]}get rightCamera(){return this._rigCameras.length<2?null:this._rigCameras[1]}getLeftTarget(){return this._rigCameras.length<1?null:this._rigCameras[0].getTarget()}getRightTarget(){return this._rigCameras.length<2?null:this._rigCameras[1].getTarget()}setCameraRigMode(t,e){if(this.cameraRigMode!==t){for(;this._rigCameras.length>0;){const i=this._rigCameras.pop();i&&i.dispose()}if(this.cameraRigMode=t,this._cameraRigParams={},this._cameraRigParams.interaxialDistance=e.interaxialDistance||.0637,this._cameraRigParams.stereoHalfAngle=P.ToRadians(this._cameraRigParams.interaxialDistance/.0637),this.cameraRigMode!==r.RIG_MODE_NONE){const i=this.createRigCamera(this.name+"_L",0);i&&(i._isLeftCamera=!0);const s=this.createRigCamera(this.name+"_R",1);s&&(s._isRightCamera=!0),i&&s&&(this._rigCameras.push(i),this._rigCameras.push(s))}this._setRigMode(e),this._cascadePostProcessesToRigCams(),this.update()}}_setRigMode(t){}_getVRProjectionMatrix(){return _.PerspectiveFovLHToRef(this._cameraRigParams.vrMetrics.aspectRatioFov,this._cameraRigParams.vrMetrics.aspectRatio,this.minZ,this.maxZ,this._cameraRigParams.vrWorkMatrix,!0,this.getEngine().isNDCHalfZRange),this._cameraRigParams.vrWorkMatrix.multiplyToRef(this._cameraRigParams.vrHMatrix,this._projectionMatrix),this._projectionMatrix}setCameraRigParameter(t,e){this._cameraRigParams||(this._cameraRigParams={}),this._cameraRigParams[t]=e,t==="interaxialDistance"&&(this._cameraRigParams.stereoHalfAngle=P.ToRadians(e/.0637))}createRigCamera(t,e){return null}_updateRigCameras(){for(let t=0;t<this._rigCameras.length;t++)this._rigCameras[t].minZ=this.minZ,this._rigCameras[t].maxZ=this.maxZ,this._rigCameras[t].fov=this.fov,this._rigCameras[t].upVector.copyFrom(this.upVector);this.cameraRigMode===r.RIG_MODE_STEREOSCOPIC_ANAGLYPH&&(this._rigCameras[0].viewport=this._rigCameras[1].viewport=this.viewport)}_setupInputs(){}serialize(){const t=m.Serialize(this);return t.uniqueId=this.uniqueId,t.type=this.getClassName(),this.parent&&this.parent._serializeAsParent(t),this.inputs&&this.inputs.serialize(t),m.AppendSerializedAnimations(this,t),t.ranges=this.serializeAnimationRanges(),t.isEnabled=this.isEnabled(),t}clone(t,e=null){const i=m.Clone(r.GetConstructorFromName(this.getClassName(),t,this.getScene(),this.interaxialDistance,this.isStereoscopicSideBySide),this);return i.name=t,i.parent=e,this.onClonedObservable.notifyObservers(i),i}getDirection(t){const e=l.Zero();return this.getDirectionToRef(t,e),e}get absoluteRotation(){return this.getWorldMatrix().decompose(void 0,this._absoluteRotation),this._absoluteRotation}getDirectionToRef(t,e){l.TransformNormalToRef(t,this.getWorldMatrix(),e)}static GetConstructorFromName(t,e,i,s=0,o=!0){const a=f.Construct(t,e,i,{interaxial_distance:s,isStereoscopicSideBySide:o});return a||(()=>r._CreateDefaultParsedCamera(e,i))}computeWorldMatrix(){return this.getWorldMatrix()}static Parse(t,e){const i=t.type,s=r.GetConstructorFromName(i,t.name,e,t.interaxial_distance,t.isStereoscopicSideBySide),o=m.Parse(s,t,e);if(t.parentId!==void 0&&(o._waitingParentId=t.parentId),t.parentInstanceIndex!==void 0&&(o._waitingParentInstanceIndex=t.parentInstanceIndex),o.inputs&&(o.inputs.parse(t),o._setupInputs()),t.upVector&&(o.upVector=l.FromArray(t.upVector)),o.setPosition&&(o.position.copyFromFloats(0,0,0),o.setPosition(l.FromArray(t.position))),t.target&&o.setTarget&&o.setTarget(l.FromArray(t.target)),t.cameraRigMode){const a=t.interaxial_distance?{interaxialDistance:t.interaxial_distance}:{};o.setCameraRigMode(t.cameraRigMode,a)}if(t.animations){for(let a=0;a<t.animations.length;a++){const O=t.animations[a],R=A("BABYLON.Animation");R&&o.animations.push(R.Parse(O))}f.ParseAnimationRanges(o,t,e)}return t.autoAnimate&&e.beginAnimation(o,t.autoAnimateFrom,t.autoAnimateTo,t.autoAnimateLoop,t.autoAnimateSpeed||1),t.isEnabled!==void 0&&o.setEnabled(t.isEnabled),o}_calculateHandednessMultiplier(){let t=this.getScene().useRightHandedSystem?-1:1;return this.parent&&this.parent._getWorldMatrixDeterminant()<0&&(t*=-1),t}}r._CreateDefaultParsedCamera=(n,t)=>{throw p("UniversalCamera")};r.PERSPECTIVE_CAMERA=0;r.ORTHOGRAPHIC_CAMERA=1;r.FOVMODE_VERTICAL_FIXED=0;r.FOVMODE_HORIZONTAL_FIXED=1;r.RIG_MODE_NONE=0;r.RIG_MODE_STEREOSCOPIC_ANAGLYPH=10;r.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL=11;r.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED=12;r.RIG_MODE_STEREOSCOPIC_OVERUNDER=13;r.RIG_MODE_STEREOSCOPIC_INTERLACED=14;r.RIG_MODE_VR=20;r.RIG_MODE_CUSTOM=22;r.ForceAttachControlToAlwaysPreventDefault=!1;h([v("position")],r.prototype,"_position",void 0);h([v("upVector")],r.prototype,"_upVector",void 0);h([c()],r.prototype,"orthoLeft",null);h([c()],r.prototype,"orthoRight",null);h([c()],r.prototype,"orthoBottom",null);h([c()],r.prototype,"orthoTop",null);h([c()],r.prototype,"fov",void 0);h([c()],r.prototype,"projectionPlaneTilt",void 0);h([c()],r.prototype,"minZ",void 0);h([c()],r.prototype,"maxZ",void 0);h([c()],r.prototype,"inertia",void 0);h([c()],r.prototype,"mode",null);h([c()],r.prototype,"layerMask",void 0);h([c()],r.prototype,"fovMode",void 0);h([c()],r.prototype,"cameraRigMode",void 0);h([c()],r.prototype,"interaxialDistance",void 0);h([c()],r.prototype,"isStereoscopicSideBySide",void 0);export{r as C,d as E,E as K,u as P,k as a,q as b,B as c,V as d};
