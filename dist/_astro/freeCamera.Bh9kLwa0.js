import{a,s as h,c as D,t as L,L as Y,S as x,A as N}from"./decorators.serialization.DTWIlLMH.js";import{V as s,a as F,M as d,Q as y,T as R,O as U}from"./math.vector.C8FsJn6B.js";import{C as f,K as X,P as p,E as Z}from"./camera.DMMowNsy.js";import{E as v,R as V}from"./math.color.BvxHr_bk.js";import{A}from"./math.axis.BWIUWoG3.js";import{N as Q}from"./node.B7U3vf9R.js";import{T as g}from"./tools.kgQOdK5j.js";import"./preload-helper.BlTxHScW.js";import"./smartArray.BsIpkRz3.js";import"./math.viewport.CgkTt1RS.js";import"./math.frustum.0quBJc8n.js";import"./math.plane.DogzNArm.js";import"./instantiationTools.DpJ04vA6.js";Q.AddNodeConstructor("TargetCamera",(c,e)=>()=>new l(c,s.Zero(),e));const b=d.Zero(),O=y.Identity();class l extends f{constructor(e,t,i,o=!0){super(e,t,i,o),this.cameraDirection=new s(0,0,0),this.cameraRotation=new F(0,0),this.updateUpVectorFromRotation=!1,this.speed=2,this.noRotationConstraint=!1,this.invertRotation=!1,this.inverseRotationSpeed=.2,this.lockedTarget=null,this._currentTarget=s.Zero(),this._initialFocalDistance=1,this._viewMatrix=d.Zero(),this._cameraTransformMatrix=d.Zero(),this._cameraRotationMatrix=d.Zero(),this._transformedReferencePoint=s.Zero(),this._deferredPositionUpdate=new s,this._deferredRotationQuaternionUpdate=new y,this._deferredRotationUpdate=new s,this._deferredUpdated=!1,this._deferOnly=!1,this._cachedRotationZ=0,this._cachedQuaternionRotationZ=0,this._referencePoint=s.Forward(this.getScene().useRightHandedSystem),this.rotation=new s(0,this.getScene().useRightHandedSystem?Math.PI:0,0)}getFrontPosition(e){this.getWorldMatrix();const t=R.Vector3[0],i=R.Vector3[1];return i.set(0,0,this._scene.useRightHandedSystem?-1:1),this.getDirectionToRef(i,t),t.scaleInPlace(e),this.globalPosition.add(t)}_getLockedTargetPosition(){if(!this.lockedTarget)return null;if(this.lockedTarget.absolutePosition){const e=this.lockedTarget;e.computeWorldMatrix().getTranslationToRef(e.absolutePosition)}return this.lockedTarget.absolutePosition||this.lockedTarget}storeState(){return this._storedPosition=this.position.clone(),this._storedRotation=this.rotation.clone(),this.rotationQuaternion&&(this._storedRotationQuaternion=this.rotationQuaternion.clone()),super.storeState()}_restoreStateValues(){return super._restoreStateValues()?(this.position=this._storedPosition.clone(),this.rotation=this._storedRotation.clone(),this.rotationQuaternion&&(this.rotationQuaternion=this._storedRotationQuaternion.clone()),this.cameraDirection.copyFromFloats(0,0,0),this.cameraRotation.copyFromFloats(0,0),!0):!1}_initCache(){super._initCache(),this._cache.lockedTarget=new s(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cache.rotation=new s(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cache.rotationQuaternion=new y(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)}_updateCache(e){e||super._updateCache();const t=this._getLockedTargetPosition();t?this._cache.lockedTarget?this._cache.lockedTarget.copyFrom(t):this._cache.lockedTarget=t.clone():this._cache.lockedTarget=null,this._cache.rotation.copyFrom(this.rotation),this.rotationQuaternion&&this._cache.rotationQuaternion.copyFrom(this.rotationQuaternion)}_isSynchronizedViewMatrix(){if(!super._isSynchronizedViewMatrix())return!1;const e=this._getLockedTargetPosition();return(this._cache.lockedTarget?this._cache.lockedTarget.equals(e):!e)&&(this.rotationQuaternion?this.rotationQuaternion.equals(this._cache.rotationQuaternion):this._cache.rotation.equals(this.rotation))}_computeLocalCameraSpeed(){const e=this.getEngine();return this.speed*Math.sqrt(e.getDeltaTime()/(e.getFps()*100))}setTarget(e){this.upVector.normalize(),this._initialFocalDistance=e.subtract(this.position).length(),this.position.z===e.z&&(this.position.z+=v),this._referencePoint.normalize().scaleInPlace(this._initialFocalDistance),this.getScene().useRightHandedSystem?d.LookAtRHToRef(this.position,e,s.UpReadOnly,b):d.LookAtLHToRef(this.position,e,s.UpReadOnly,b),b.invert();const t=this.rotationQuaternion||O;y.FromRotationMatrixToRef(b,t),t.toEulerAnglesToRef(this.rotation),this.rotation.z=0}get target(){return this.getTarget()}set target(e){this.setTarget(e)}getTarget(){return this._currentTarget}_decideIfNeedsToMove(){return Math.abs(this.cameraDirection.x)>0||Math.abs(this.cameraDirection.y)>0||Math.abs(this.cameraDirection.z)>0}_updatePosition(){if(this.parent){this.parent.getWorldMatrix().invertToRef(R.Matrix[0]),s.TransformNormalToRef(this.cameraDirection,R.Matrix[0],R.Vector3[0]),this._deferredPositionUpdate.addInPlace(R.Vector3[0]),this._deferOnly?this._deferredUpdated=!0:this.position.copyFrom(this._deferredPositionUpdate);return}this._deferredPositionUpdate.addInPlace(this.cameraDirection),this._deferOnly?this._deferredUpdated=!0:this.position.copyFrom(this._deferredPositionUpdate)}_checkInputs(){const e=this.invertRotation?-this.inverseRotationSpeed:1,t=this._decideIfNeedsToMove(),i=this.cameraRotation.x||this.cameraRotation.y;this._deferredUpdated=!1,this._deferredRotationUpdate.copyFrom(this.rotation),this._deferredPositionUpdate.copyFrom(this.position),this.rotationQuaternion&&this._deferredRotationQuaternionUpdate.copyFrom(this.rotationQuaternion),t&&this._updatePosition(),i&&(this.rotationQuaternion&&this.rotationQuaternion.toEulerAnglesToRef(this._deferredRotationUpdate),this._deferredRotationUpdate.x+=this.cameraRotation.x*e,this._deferredRotationUpdate.y+=this.cameraRotation.y*e,this.noRotationConstraint||(this._deferredRotationUpdate.x>1.570796&&(this._deferredRotationUpdate.x=1.570796),this._deferredRotationUpdate.x<-1.570796&&(this._deferredRotationUpdate.x=-1.570796)),this._deferOnly?this._deferredUpdated=!0:this.rotation.copyFrom(this._deferredRotationUpdate),this.rotationQuaternion&&this._deferredRotationUpdate.lengthSquared()&&(y.RotationYawPitchRollToRef(this._deferredRotationUpdate.y,this._deferredRotationUpdate.x,this._deferredRotationUpdate.z,this._deferredRotationQuaternionUpdate),this._deferOnly?this._deferredUpdated=!0:this.rotationQuaternion.copyFrom(this._deferredRotationQuaternionUpdate))),t&&(Math.abs(this.cameraDirection.x)<this.speed*v&&(this.cameraDirection.x=0),Math.abs(this.cameraDirection.y)<this.speed*v&&(this.cameraDirection.y=0),Math.abs(this.cameraDirection.z)<this.speed*v&&(this.cameraDirection.z=0),this.cameraDirection.scaleInPlace(this.inertia)),i&&(Math.abs(this.cameraRotation.x)<this.speed*v&&(this.cameraRotation.x=0),Math.abs(this.cameraRotation.y)<this.speed*v&&(this.cameraRotation.y=0),this.cameraRotation.scaleInPlace(this.inertia)),super._checkInputs()}_updateCameraRotationMatrix(){this.rotationQuaternion?this.rotationQuaternion.toRotationMatrix(this._cameraRotationMatrix):d.RotationYawPitchRollToRef(this.rotation.y,this.rotation.x,this.rotation.z,this._cameraRotationMatrix)}_rotateUpVectorWithCameraRotationMatrix(){return s.TransformNormalToRef(s.UpReadOnly,this._cameraRotationMatrix,this.upVector),this}_getViewMatrix(){return this.lockedTarget&&this.setTarget(this._getLockedTargetPosition()),this._updateCameraRotationMatrix(),this.rotationQuaternion&&this._cachedQuaternionRotationZ!=this.rotationQuaternion.z?(this._rotateUpVectorWithCameraRotationMatrix(),this._cachedQuaternionRotationZ=this.rotationQuaternion.z):this._cachedRotationZ!==this.rotation.z&&(this._rotateUpVectorWithCameraRotationMatrix(),this._cachedRotationZ=this.rotation.z),s.TransformCoordinatesToRef(this._referencePoint,this._cameraRotationMatrix,this._transformedReferencePoint),this.position.addToRef(this._transformedReferencePoint,this._currentTarget),this.updateUpVectorFromRotation&&(this.rotationQuaternion?A.Y.rotateByQuaternionToRef(this.rotationQuaternion,this.upVector):(y.FromEulerVectorToRef(this.rotation,O),A.Y.rotateByQuaternionToRef(O,this.upVector))),this._computeViewMatrix(this.position,this._currentTarget,this.upVector),this._viewMatrix}_computeViewMatrix(e,t,i){if(this.getScene().useRightHandedSystem?d.LookAtRHToRef(e,t,i,this._viewMatrix):d.LookAtLHToRef(e,t,i,this._viewMatrix),this.parent){const o=this.parent.getWorldMatrix();this._viewMatrix.invert(),this._viewMatrix.multiplyToRef(o,this._viewMatrix),this._viewMatrix.getTranslationToRef(this._globalPosition),this._viewMatrix.invert(),this._markSyncedWithParent()}else this._globalPosition.copyFrom(e)}createRigCamera(e,t){if(this.cameraRigMode!==f.RIG_MODE_NONE){const i=new l(e,this.position.clone(),this.getScene());return i.isRigCamera=!0,i.rigParent=this,this.cameraRigMode===f.RIG_MODE_VR&&(this.rotationQuaternion||(this.rotationQuaternion=new y),i._cameraRigParams={},i.rotationQuaternion=new y),i.mode=this.mode,i.orthoLeft=this.orthoLeft,i.orthoRight=this.orthoRight,i.orthoTop=this.orthoTop,i.orthoBottom=this.orthoBottom,i}return null}_updateRigCameras(){const e=this._rigCameras[0],t=this._rigCameras[1];switch(this.computeWorldMatrix(),this.cameraRigMode){case f.RIG_MODE_STEREOSCOPIC_ANAGLYPH:case f.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL:case f.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED:case f.RIG_MODE_STEREOSCOPIC_OVERUNDER:case f.RIG_MODE_STEREOSCOPIC_INTERLACED:{const i=this.cameraRigMode===f.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED?1:-1,o=this.cameraRigMode===f.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED?-1:1;this._getRigCamPositionAndTarget(this._cameraRigParams.stereoHalfAngle*i,e),this._getRigCamPositionAndTarget(this._cameraRigParams.stereoHalfAngle*o,t);break}case f.RIG_MODE_VR:e.rotationQuaternion?(e.rotationQuaternion.copyFrom(this.rotationQuaternion),t.rotationQuaternion.copyFrom(this.rotationQuaternion)):(e.rotation.copyFrom(this.rotation),t.rotation.copyFrom(this.rotation)),e.position.copyFrom(this.position),t.position.copyFrom(this.position);break}super._updateRigCameras()}_getRigCamPositionAndTarget(e,t){this.getTarget().subtractToRef(this.position,l._TargetFocalPoint),l._TargetFocalPoint.normalize().scaleInPlace(this._initialFocalDistance);const o=l._TargetFocalPoint.addInPlace(this.position);d.TranslationToRef(-o.x,-o.y,-o.z,l._TargetTransformMatrix),l._TargetTransformMatrix.multiplyToRef(d.RotationAxis(t.upVector,e),l._RigCamTransformMatrix),d.TranslationToRef(o.x,o.y,o.z,l._TargetTransformMatrix),l._RigCamTransformMatrix.multiplyToRef(l._TargetTransformMatrix,l._RigCamTransformMatrix),s.TransformCoordinatesToRef(this.position,l._RigCamTransformMatrix,t.position),t.setTarget(o)}getClassName(){return"TargetCamera"}}l._RigCamTransformMatrix=new d;l._TargetTransformMatrix=new d;l._TargetFocalPoint=new s;a([h()],l.prototype,"updateUpVectorFromRotation",void 0);a([D()],l.prototype,"rotation",void 0);a([h()],l.prototype,"speed",void 0);a([L("lockedTargetId")],l.prototype,"lockedTarget",void 0);var k={};class B{constructor(e){this.attachedToElement=!1,this.attached={},this.camera=e,this.checkInputs=()=>{}}add(e){const t=e.getSimpleName();if(this.attached[t]){Y.Warn("camera input of type "+t+" already exists on camera");return}this.attached[t]=e,e.camera=this.camera,e.checkInputs&&(this.checkInputs=this._addCheckInputs(e.checkInputs.bind(e))),this.attachedToElement&&e.attachControl(this.noPreventDefault)}remove(e){for(const t in this.attached){const i=this.attached[t];if(i===e){i.detachControl(),i.camera=null,delete this.attached[t],this.rebuildInputCheck();return}}}removeByType(e){for(const t in this.attached){const i=this.attached[t];i.getClassName()===e&&(i.detachControl(),i.camera=null,delete this.attached[t],this.rebuildInputCheck())}}_addCheckInputs(e){const t=this.checkInputs;return()=>{t(),e()}}attachInput(e){this.attachedToElement&&e.attachControl(this.noPreventDefault)}attachElement(e=!1){if(!this.attachedToElement){e=f.ForceAttachControlToAlwaysPreventDefault?!1:e,this.attachedToElement=!0,this.noPreventDefault=e;for(const t in this.attached)this.attached[t].attachControl(e)}}detachElement(e=!1){for(const t in this.attached)this.attached[t].detachControl(),e&&(this.attached[t].camera=null);this.attachedToElement=!1}rebuildInputCheck(){this.checkInputs=()=>{};for(const e in this.attached){const t=this.attached[e];t.checkInputs&&(this.checkInputs=this._addCheckInputs(t.checkInputs.bind(t)))}}clear(){this.attachedToElement&&this.detachElement(!0),this.attached={},this.attachedToElement=!1,this.checkInputs=()=>{}}serialize(e){const t={};for(const i in this.attached){const o=this.attached[i],r=x.Serialize(o);t[o.getClassName()]=r}e.inputsmgr=t}parse(e){const t=e.inputsmgr;if(t){this.clear();for(const i in t){const o=k[i];if(o){const r=t[i],u=x.Parse(()=>new o,r,null);this.add(u)}}}else for(const i in this.attached){const o=k[this.attached[i].getClassName()];if(o){const r=x.Parse(()=>new o,e,null);this.remove(this.attached[i]),this.add(r)}}}}class _{constructor(){this.keysUp=[38],this.keysUpward=[33],this.keysDown=[40],this.keysDownward=[34],this.keysLeft=[37],this.keysRight=[39],this.rotationSpeed=.5,this.keysRotateLeft=[],this.keysRotateRight=[],this.keysRotateUp=[],this.keysRotateDown=[],this._keys=new Array}attachControl(e){e=g.BackCompatCameraNoPreventDefault(arguments),!this._onCanvasBlurObserver&&(this._scene=this.camera.getScene(),this._engine=this._scene.getEngine(),this._onCanvasBlurObserver=this._engine.onCanvasBlurObservable.add(()=>{this._keys.length=0}),this._onKeyboardObserver=this._scene.onKeyboardObservable.add(t=>{const i=t.event;if(!i.metaKey){if(t.type===X.KEYDOWN)(this.keysUp.indexOf(i.keyCode)!==-1||this.keysDown.indexOf(i.keyCode)!==-1||this.keysLeft.indexOf(i.keyCode)!==-1||this.keysRight.indexOf(i.keyCode)!==-1||this.keysUpward.indexOf(i.keyCode)!==-1||this.keysDownward.indexOf(i.keyCode)!==-1||this.keysRotateLeft.indexOf(i.keyCode)!==-1||this.keysRotateRight.indexOf(i.keyCode)!==-1||this.keysRotateUp.indexOf(i.keyCode)!==-1||this.keysRotateDown.indexOf(i.keyCode)!==-1)&&(this._keys.indexOf(i.keyCode)===-1&&this._keys.push(i.keyCode),e||i.preventDefault());else if(this.keysUp.indexOf(i.keyCode)!==-1||this.keysDown.indexOf(i.keyCode)!==-1||this.keysLeft.indexOf(i.keyCode)!==-1||this.keysRight.indexOf(i.keyCode)!==-1||this.keysUpward.indexOf(i.keyCode)!==-1||this.keysDownward.indexOf(i.keyCode)!==-1||this.keysRotateLeft.indexOf(i.keyCode)!==-1||this.keysRotateRight.indexOf(i.keyCode)!==-1||this.keysRotateUp.indexOf(i.keyCode)!==-1||this.keysRotateDown.indexOf(i.keyCode)!==-1){const o=this._keys.indexOf(i.keyCode);o>=0&&this._keys.splice(o,1),e||i.preventDefault()}}}))}detachControl(){this._scene&&(this._onKeyboardObserver&&this._scene.onKeyboardObservable.remove(this._onKeyboardObserver),this._onCanvasBlurObserver&&this._engine.onCanvasBlurObservable.remove(this._onCanvasBlurObserver),this._onKeyboardObserver=null,this._onCanvasBlurObserver=null),this._keys.length=0}checkInputs(){if(this._onKeyboardObserver){const e=this.camera;for(let t=0;t<this._keys.length;t++){const i=this._keys[t],o=e._computeLocalCameraSpeed();this.keysLeft.indexOf(i)!==-1?e._localDirection.copyFromFloats(-o,0,0):this.keysUp.indexOf(i)!==-1?e._localDirection.copyFromFloats(0,0,o):this.keysRight.indexOf(i)!==-1?e._localDirection.copyFromFloats(o,0,0):this.keysDown.indexOf(i)!==-1?e._localDirection.copyFromFloats(0,0,-o):this.keysUpward.indexOf(i)!==-1?e._localDirection.copyFromFloats(0,o,0):this.keysDownward.indexOf(i)!==-1?e._localDirection.copyFromFloats(0,-o,0):this.keysRotateLeft.indexOf(i)!==-1?(e._localDirection.copyFromFloats(0,0,0),e.cameraRotation.y-=this._getLocalRotation()):this.keysRotateRight.indexOf(i)!==-1?(e._localDirection.copyFromFloats(0,0,0),e.cameraRotation.y+=this._getLocalRotation()):this.keysRotateUp.indexOf(i)!==-1?(e._localDirection.copyFromFloats(0,0,0),e.cameraRotation.x-=this._getLocalRotation()):this.keysRotateDown.indexOf(i)!==-1&&(e._localDirection.copyFromFloats(0,0,0),e.cameraRotation.x+=this._getLocalRotation()),e.getScene().useRightHandedSystem&&(e._localDirection.z*=-1),e.getViewMatrix().invertToRef(e._cameraTransformMatrix),s.TransformNormalToRef(e._localDirection,e._cameraTransformMatrix,e._transformedDirection),e.cameraDirection.addInPlace(e._transformedDirection)}}}getClassName(){return"FreeCameraKeyboardMoveInput"}_onLostFocus(){this._keys.length=0}getSimpleName(){return"keyboard"}_getLocalRotation(){const e=this.camera._calculateHandednessMultiplier();return this.rotationSpeed*this._engine.getDeltaTime()/1e3*e}}a([h()],_.prototype,"keysUp",void 0);a([h()],_.prototype,"keysUpward",void 0);a([h()],_.prototype,"keysDown",void 0);a([h()],_.prototype,"keysDownward",void 0);a([h()],_.prototype,"keysLeft",void 0);a([h()],_.prototype,"keysRight",void 0);a([h()],_.prototype,"rotationSpeed",void 0);a([h()],_.prototype,"keysRotateLeft",void 0);a([h()],_.prototype,"keysRotateRight",void 0);a([h()],_.prototype,"keysRotateUp",void 0);a([h()],_.prototype,"keysRotateDown",void 0);k.FreeCameraKeyboardMoveInput=_;class T{constructor(e=!0){this.touchEnabled=e,this.buttons=[0,1,2],this.angularSensibility=2e3,this._previousPosition=null,this.onPointerMovedObservable=new U,this._allowCameraRotation=!0,this._currentActiveButton=-1,this._activePointerId=-1}attachControl(e){e=g.BackCompatCameraNoPreventDefault(arguments);const t=this.camera.getEngine(),i=t.getInputElement();this._pointerInput||(this._pointerInput=o=>{const r=o.event,u=r.pointerType==="touch";if(!this.touchEnabled&&u||o.type!==p.POINTERMOVE&&this.buttons.indexOf(r.button)===-1)return;const w=r.target;if(o.type===p.POINTERDOWN){if(u&&this._activePointerId!==-1||!u&&this._currentActiveButton!==-1)return;this._activePointerId=r.pointerId;try{w?.setPointerCapture(r.pointerId)}catch{}this._currentActiveButton===-1&&(this._currentActiveButton=r.button),this._previousPosition={x:r.clientX,y:r.clientY},e||(r.preventDefault(),i&&i.focus()),t.isPointerLock&&this._onMouseMove&&this._onMouseMove(o.event)}else if(o.type===p.POINTERUP){if(u&&this._activePointerId!==r.pointerId||!u&&this._currentActiveButton!==r.button)return;try{w?.releasePointerCapture(r.pointerId)}catch{}this._currentActiveButton=-1,this._previousPosition=null,e||r.preventDefault(),this._activePointerId=-1}else if(o.type===p.POINTERMOVE&&(this._activePointerId===r.pointerId||!u)){if(t.isPointerLock&&this._onMouseMove)this._onMouseMove(o.event);else if(this._previousPosition){const C=this.camera._calculateHandednessMultiplier(),S=(r.clientX-this._previousPosition.x)*C,E=(r.clientY-this._previousPosition.y)*C;this._allowCameraRotation&&(this.camera.cameraRotation.y+=S/this.angularSensibility,this.camera.cameraRotation.x+=E/this.angularSensibility),this.onPointerMovedObservable.notifyObservers({offsetX:S,offsetY:E}),this._previousPosition={x:r.clientX,y:r.clientY},e||r.preventDefault()}}}),this._onMouseMove=o=>{if(!t.isPointerLock)return;const r=this.camera._calculateHandednessMultiplier();this.camera.cameraRotation.y+=o.movementX*r/this.angularSensibility,this.camera.cameraRotation.x+=o.movementY*r/this.angularSensibility,this._previousPosition=null,e||o.preventDefault()},this._observer=this.camera.getScene()._inputManager._addCameraPointerObserver(this._pointerInput,p.POINTERDOWN|p.POINTERUP|p.POINTERMOVE),i&&(this._contextMenuBind=o=>this.onContextMenu(o),i.addEventListener("contextmenu",this._contextMenuBind,!1))}onContextMenu(e){e.preventDefault()}detachControl(){if(this._observer){if(this.camera.getScene()._inputManager._removeCameraPointerObserver(this._observer),this._contextMenuBind){const t=this.camera.getEngine().getInputElement();t&&t.removeEventListener("contextmenu",this._contextMenuBind)}this.onPointerMovedObservable&&this.onPointerMovedObservable.clear(),this._observer=null,this._onMouseMove=null,this._previousPosition=null}this._activePointerId=-1,this._currentActiveButton=-1}getClassName(){return"FreeCameraMouseInput"}getSimpleName(){return"mouse"}}a([h()],T.prototype,"buttons",void 0);a([h()],T.prototype,"angularSensibility",void 0);k.FreeCameraMouseInput=T;class P{constructor(){this.wheelPrecisionX=3,this.wheelPrecisionY=3,this.wheelPrecisionZ=3,this.onChangedObservable=new U,this._wheelDeltaX=0,this._wheelDeltaY=0,this._wheelDeltaZ=0,this._ffMultiplier=12,this._normalize=120}attachControl(e){e=g.BackCompatCameraNoPreventDefault(arguments),this._wheel=t=>{if(t.type!==p.POINTERWHEEL)return;const i=t.event,o=i.deltaMode===Z.DOM_DELTA_LINE?this._ffMultiplier:1;this._wheelDeltaX+=this.wheelPrecisionX*o*i.deltaX/this._normalize,this._wheelDeltaY-=this.wheelPrecisionY*o*i.deltaY/this._normalize,this._wheelDeltaZ+=this.wheelPrecisionZ*o*i.deltaZ/this._normalize,i.preventDefault&&(e||i.preventDefault())},this._observer=this.camera.getScene()._inputManager._addCameraPointerObserver(this._wheel,p.POINTERWHEEL)}detachControl(){this._observer&&(this.camera.getScene()._inputManager._removeCameraPointerObserver(this._observer),this._observer=null,this._wheel=null),this.onChangedObservable&&this.onChangedObservable.clear()}checkInputs(){this.onChangedObservable.notifyObservers({wheelDeltaX:this._wheelDeltaX,wheelDeltaY:this._wheelDeltaY,wheelDeltaZ:this._wheelDeltaZ}),this._wheelDeltaX=0,this._wheelDeltaY=0,this._wheelDeltaZ=0}getClassName(){return"BaseCameraMouseWheelInput"}getSimpleName(){return"mousewheel"}}a([h()],P.prototype,"wheelPrecisionX",void 0);a([h()],P.prototype,"wheelPrecisionY",void 0);a([h()],P.prototype,"wheelPrecisionZ",void 0);var n;(function(c){c[c.MoveRelative=0]="MoveRelative",c[c.RotateRelative=1]="RotateRelative",c[c.MoveScene=2]="MoveScene"})(n||(n={}));class m extends P{constructor(){super(...arguments),this._moveRelative=s.Zero(),this._rotateRelative=s.Zero(),this._moveScene=s.Zero(),this._wheelXAction=n.MoveRelative,this._wheelXActionCoordinate=0,this._wheelYAction=n.MoveRelative,this._wheelYActionCoordinate=2,this._wheelZAction=null,this._wheelZActionCoordinate=null}getClassName(){return"FreeCameraMouseWheelInput"}set wheelXMoveRelative(e){e===null&&this._wheelXAction!==n.MoveRelative||(this._wheelXAction=n.MoveRelative,this._wheelXActionCoordinate=e)}get wheelXMoveRelative(){return this._wheelXAction!==n.MoveRelative?null:this._wheelXActionCoordinate}set wheelYMoveRelative(e){e===null&&this._wheelYAction!==n.MoveRelative||(this._wheelYAction=n.MoveRelative,this._wheelYActionCoordinate=e)}get wheelYMoveRelative(){return this._wheelYAction!==n.MoveRelative?null:this._wheelYActionCoordinate}set wheelZMoveRelative(e){e===null&&this._wheelZAction!==n.MoveRelative||(this._wheelZAction=n.MoveRelative,this._wheelZActionCoordinate=e)}get wheelZMoveRelative(){return this._wheelZAction!==n.MoveRelative?null:this._wheelZActionCoordinate}set wheelXRotateRelative(e){e===null&&this._wheelXAction!==n.RotateRelative||(this._wheelXAction=n.RotateRelative,this._wheelXActionCoordinate=e)}get wheelXRotateRelative(){return this._wheelXAction!==n.RotateRelative?null:this._wheelXActionCoordinate}set wheelYRotateRelative(e){e===null&&this._wheelYAction!==n.RotateRelative||(this._wheelYAction=n.RotateRelative,this._wheelYActionCoordinate=e)}get wheelYRotateRelative(){return this._wheelYAction!==n.RotateRelative?null:this._wheelYActionCoordinate}set wheelZRotateRelative(e){e===null&&this._wheelZAction!==n.RotateRelative||(this._wheelZAction=n.RotateRelative,this._wheelZActionCoordinate=e)}get wheelZRotateRelative(){return this._wheelZAction!==n.RotateRelative?null:this._wheelZActionCoordinate}set wheelXMoveScene(e){e===null&&this._wheelXAction!==n.MoveScene||(this._wheelXAction=n.MoveScene,this._wheelXActionCoordinate=e)}get wheelXMoveScene(){return this._wheelXAction!==n.MoveScene?null:this._wheelXActionCoordinate}set wheelYMoveScene(e){e===null&&this._wheelYAction!==n.MoveScene||(this._wheelYAction=n.MoveScene,this._wheelYActionCoordinate=e)}get wheelYMoveScene(){return this._wheelYAction!==n.MoveScene?null:this._wheelYActionCoordinate}set wheelZMoveScene(e){e===null&&this._wheelZAction!==n.MoveScene||(this._wheelZAction=n.MoveScene,this._wheelZActionCoordinate=e)}get wheelZMoveScene(){return this._wheelZAction!==n.MoveScene?null:this._wheelZActionCoordinate}checkInputs(){if(this._wheelDeltaX===0&&this._wheelDeltaY===0&&this._wheelDeltaZ==0)return;this._moveRelative.setAll(0),this._rotateRelative.setAll(0),this._moveScene.setAll(0),this._updateCamera(),this.camera.getScene().useRightHandedSystem&&(this._moveRelative.z*=-1);const e=d.Zero();this.camera.getViewMatrix().invertToRef(e);const t=s.Zero();s.TransformNormalToRef(this._moveRelative,e,t),this.camera.cameraRotation.x+=this._rotateRelative.x/200,this.camera.cameraRotation.y+=this._rotateRelative.y/200,this.camera.cameraDirection.addInPlace(t),this.camera.cameraDirection.addInPlace(this._moveScene),super.checkInputs()}_updateCamera(){this._updateCameraProperty(this._wheelDeltaX,this._wheelXAction,this._wheelXActionCoordinate),this._updateCameraProperty(this._wheelDeltaY,this._wheelYAction,this._wheelYActionCoordinate),this._updateCameraProperty(this._wheelDeltaZ,this._wheelZAction,this._wheelZActionCoordinate)}_updateCameraProperty(e,t,i){if(e===0||t===null||i===null)return;let o=null;switch(t){case n.MoveRelative:o=this._moveRelative;break;case n.RotateRelative:o=this._rotateRelative;break;case n.MoveScene:o=this._moveScene;break}switch(i){case 0:o.set(e,0,0);break;case 1:o.set(0,e,0);break;case 2:o.set(0,0,e);break}}}a([h()],m.prototype,"wheelXMoveRelative",null);a([h()],m.prototype,"wheelYMoveRelative",null);a([h()],m.prototype,"wheelZMoveRelative",null);a([h()],m.prototype,"wheelXRotateRelative",null);a([h()],m.prototype,"wheelYRotateRelative",null);a([h()],m.prototype,"wheelZRotateRelative",null);a([h()],m.prototype,"wheelXMoveScene",null);a([h()],m.prototype,"wheelYMoveScene",null);a([h()],m.prototype,"wheelZMoveScene",null);k.FreeCameraMouseWheelInput=m;class I{constructor(e=!1){this.allowMouse=e,this.touchAngularSensibility=2e5,this.touchMoveSensibility=250,this.singleFingerRotate=!1,this._offsetX=null,this._offsetY=null,this._pointerPressed=new Array,this._isSafari=g.IsSafari()}attachControl(e){e=g.BackCompatCameraNoPreventDefault(arguments);let t=null;if(this._pointerInput===void 0&&(this._onLostFocus=()=>{this._offsetX=null,this._offsetY=null},this._pointerInput=i=>{const o=i.event,r=o.pointerType==="mouse"||this._isSafari&&typeof o.pointerType>"u";if(!(!this.allowMouse&&r)){if(i.type===p.POINTERDOWN){if(e||o.preventDefault(),this._pointerPressed.push(o.pointerId),this._pointerPressed.length!==1)return;t={x:o.clientX,y:o.clientY}}else if(i.type===p.POINTERUP){e||o.preventDefault();const u=this._pointerPressed.indexOf(o.pointerId);if(u===-1||(this._pointerPressed.splice(u,1),u!=0))return;t=null,this._offsetX=null,this._offsetY=null}else if(i.type===p.POINTERMOVE){if(e||o.preventDefault(),!t||this._pointerPressed.indexOf(o.pointerId)!=0)return;this._offsetX=o.clientX-t.x,this._offsetY=-(o.clientY-t.y)}}}),this._observer=this.camera.getScene()._inputManager._addCameraPointerObserver(this._pointerInput,p.POINTERDOWN|p.POINTERUP|p.POINTERMOVE),this._onLostFocus){const o=this.camera.getEngine().getInputElement();o&&o.addEventListener("blur",this._onLostFocus)}}detachControl(){if(this._pointerInput){if(this._observer&&(this.camera.getScene()._inputManager._removeCameraPointerObserver(this._observer),this._observer=null),this._onLostFocus){const t=this.camera.getEngine().getInputElement();t&&t.removeEventListener("blur",this._onLostFocus),this._onLostFocus=null}this._pointerPressed.length=0,this._offsetX=null,this._offsetY=null}}checkInputs(){if(this._offsetX===null||this._offsetY===null||this._offsetX===0&&this._offsetY===0)return;const e=this.camera,t=e._calculateHandednessMultiplier();if(e.cameraRotation.y=this._offsetX*t/this.touchAngularSensibility,this.singleFingerRotate&&this._pointerPressed.length===1||!this.singleFingerRotate&&this._pointerPressed.length>1)e.cameraRotation.x=-(this._offsetY*t)/this.touchAngularSensibility;else{const o=e._computeLocalCameraSpeed(),r=new s(0,0,this.touchMoveSensibility!==0?o*this._offsetY/this.touchMoveSensibility:0);d.RotationYawPitchRollToRef(e.rotation.y,e.rotation.x,0,e._cameraRotationMatrix),e.cameraDirection.addInPlace(s.TransformCoordinates(r,e._cameraRotationMatrix))}}getClassName(){return"FreeCameraTouchInput"}getSimpleName(){return"touch"}}a([h()],I.prototype,"touchAngularSensibility",void 0);a([h()],I.prototype,"touchMoveSensibility",void 0);k.FreeCameraTouchInput=I;class W extends B{constructor(e){super(e),this._mouseInput=null,this._mouseWheelInput=null}addKeyboard(){return this.add(new _),this}addMouse(e=!0){return this._mouseInput||(this._mouseInput=new T(e),this.add(this._mouseInput)),this}removeMouse(){return this._mouseInput&&this.remove(this._mouseInput),this}addMouseWheel(){return this._mouseWheelInput||(this._mouseWheelInput=new m,this.add(this._mouseWheelInput)),this}removeMouseWheel(){return this._mouseWheelInput&&this.remove(this._mouseWheelInput),this}addTouch(){return this.add(new I),this}clear(){super.clear(),this._mouseInput=null}}class M extends l{get angularSensibility(){const e=this.inputs.attached.mouse;return e?e.angularSensibility:0}set angularSensibility(e){const t=this.inputs.attached.mouse;t&&(t.angularSensibility=e)}get keysUp(){const e=this.inputs.attached.keyboard;return e?e.keysUp:[]}set keysUp(e){const t=this.inputs.attached.keyboard;t&&(t.keysUp=e)}get keysUpward(){const e=this.inputs.attached.keyboard;return e?e.keysUpward:[]}set keysUpward(e){const t=this.inputs.attached.keyboard;t&&(t.keysUpward=e)}get keysDown(){const e=this.inputs.attached.keyboard;return e?e.keysDown:[]}set keysDown(e){const t=this.inputs.attached.keyboard;t&&(t.keysDown=e)}get keysDownward(){const e=this.inputs.attached.keyboard;return e?e.keysDownward:[]}set keysDownward(e){const t=this.inputs.attached.keyboard;t&&(t.keysDownward=e)}get keysLeft(){const e=this.inputs.attached.keyboard;return e?e.keysLeft:[]}set keysLeft(e){const t=this.inputs.attached.keyboard;t&&(t.keysLeft=e)}get keysRight(){const e=this.inputs.attached.keyboard;return e?e.keysRight:[]}set keysRight(e){const t=this.inputs.attached.keyboard;t&&(t.keysRight=e)}get keysRotateLeft(){const e=this.inputs.attached.keyboard;return e?e.keysRotateLeft:[]}set keysRotateLeft(e){const t=this.inputs.attached.keyboard;t&&(t.keysRotateLeft=e)}get keysRotateRight(){const e=this.inputs.attached.keyboard;return e?e.keysRotateRight:[]}set keysRotateRight(e){const t=this.inputs.attached.keyboard;t&&(t.keysRotateRight=e)}get keysRotateUp(){const e=this.inputs.attached.keyboard;return e?e.keysRotateUp:[]}set keysRotateUp(e){const t=this.inputs.attached.keyboard;t&&(t.keysRotateUp=e)}get keysRotateDown(){const e=this.inputs.attached.keyboard;return e?e.keysRotateDown:[]}set keysRotateDown(e){const t=this.inputs.attached.keyboard;t&&(t.keysRotateDown=e)}constructor(e,t,i,o=!0){super(e,t,i,o),this.ellipsoid=new s(.5,1,.5),this.ellipsoidOffset=new s(0,0,0),this.checkCollisions=!1,this.applyGravity=!1,this._needMoveForGravity=!1,this._oldPosition=s.Zero(),this._diffPosition=s.Zero(),this._newPosition=s.Zero(),this._collisionMask=-1,this._onCollisionPositionChange=(r,u,w=null)=>{this._newPosition.copyFrom(u),this._newPosition.subtractToRef(this._oldPosition,this._diffPosition),this._diffPosition.length()>N.CollisionsEpsilon&&(this.position.addToRef(this._diffPosition,this._deferredPositionUpdate),this._deferOnly?this._deferredUpdated=!0:this.position.copyFrom(this._deferredPositionUpdate),this.onCollide&&w&&this.onCollide(w))},this.inputs=new W(this),this.inputs.addKeyboard().addMouse()}attachControl(e,t){t=g.BackCompatCameraNoPreventDefault(arguments),this.inputs.attachElement(t)}detachControl(){this.inputs.detachElement(),this.cameraDirection=new s(0,0,0),this.cameraRotation=new F(0,0)}get collisionMask(){return this._collisionMask}set collisionMask(e){this._collisionMask=isNaN(e)?-1:e}_collideWithWorld(e){let t;this.parent?t=s.TransformCoordinates(this.position,this.parent.getWorldMatrix()):t=this.position,t.subtractFromFloatsToRef(0,this.ellipsoid.y,0,this._oldPosition),this._oldPosition.addInPlace(this.ellipsoidOffset);const i=this.getScene().collisionCoordinator;this._collider||(this._collider=i.createCollider()),this._collider._radius=this.ellipsoid,this._collider.collisionMask=this._collisionMask;let o=e;this.applyGravity&&(o=e.add(this.getScene().gravity)),i.getNewPosition(this._oldPosition,o,this._collider,3,null,this._onCollisionPositionChange,this.uniqueId)}_checkInputs(){this._localDirection||(this._localDirection=s.Zero(),this._transformedDirection=s.Zero()),this.inputs.checkInputs(),super._checkInputs()}set needMoveForGravity(e){this._needMoveForGravity=e}get needMoveForGravity(){return this._needMoveForGravity}_decideIfNeedsToMove(){return this._needMoveForGravity||Math.abs(this.cameraDirection.x)>0||Math.abs(this.cameraDirection.y)>0||Math.abs(this.cameraDirection.z)>0}_updatePosition(){this.checkCollisions&&this.getScene().collisionsEnabled?this._collideWithWorld(this.cameraDirection):super._updatePosition()}dispose(){this.inputs.clear(),super.dispose()}getClassName(){return"FreeCamera"}}a([D()],M.prototype,"ellipsoid",void 0);a([D()],M.prototype,"ellipsoidOffset",void 0);a([h()],M.prototype,"checkCollisions",void 0);a([h()],M.prototype,"applyGravity",void 0);V("BABYLON.FreeCamera",M);export{M as FreeCamera};
