import{_ as P}from"./babylon-core.CKU7Mwvm.js";if(typeof MessageChannel>"u"){class e{constructor(){this.onmessage=null}postMessage(s){const a={data:s};(typeof queueMicrotask=="function"?queueMicrotask:n=>setTimeout(n,0))(()=>this.onmessage&&this.onmessage(a))}start(){}close(){}}class t{constructor(){this.port1=new e,this.port2=new e;const s=(a,n)=>{const i={data:n};(typeof queueMicrotask=="function"?queueMicrotask:l=>setTimeout(l,0))(()=>a.onmessage&&a.onmessage(i))};this.port1.postMessage=a=>s(this.port2,a),this.port2.postMessage=a=>s(this.port1,a)}}globalThis.MessageChannel=t}window.apiTests=window.apiTests||{};window.openImageGenerator=window.openImageGenerator||function(){};window.openChatbot=window.openChatbot||function(){};window.openBigQuery=window.openBigQuery||function(){};window.openKaggle=window.openKaggle||function(){};window.openTavily=window.openTavily||function(){};window.testButtonFunction=window.testButtonFunction||function(){};window.checkDashboardLogin=window.checkDashboardLogin||function(){};window.addEventListener("DOMContentLoaded",async()=>{console.log("Loading API test functions...");try{const e=await P(()=>import("./apiTests.CnAhSYqp.js"),[]);window.apiTests=e,console.log("API Tests module loaded, available functions:",Object.keys(e))}catch(e){console.log("Failed to load API tests:",e)}});function g(){console.log("openImageGenerator() called");const e=document.getElementById("imagePrompt"),t=e?e.value.trim():"";console.log("Image prompt:",t),t&&(localStorage.setItem("quickPrompt",t),console.log("Prompt saved in localStorage")),console.log("Opening /image-generator"),window.open("/image-generator","_blank")}function p(){console.log("üí¨ openChatbot() wywo≈Çana");const e=document.getElementById("chatPrompt"),t=e?e.value.trim():"";console.log("Chat prompt:",t),t&&(localStorage.setItem("quickChatPrompt",t),console.log("Prompt saved in localStorage")),console.log("Opening /chatbot"),window.open("/chatbot","_blank")}async function u(){console.log("üìä openBigQuery() called - POLACZEK API version");const e=document.getElementById("bigquery-result"),t=document.getElementById("bigqueryPrompt");if(!e){console.error("Result container #bigquery-result not found!");return}e.classList.remove("hidden");const o="/api/polaczek/bigquery";e.innerHTML='<p class="text-yellow-400">üîç ≈ÅƒÖczenie z POLACZEK BigQuery API...</p>';try{let s={};t&&t.value.trim()&&(s={query:t.value.trim()});const a=await fetch(o,{method:s.query?"POST":"GET",headers:{"Content-Type":"application/json"},body:s.query?JSON.stringify(s):void 0});if(e.innerHTML='<p class="text-yellow-400">üìä Pobieranie danych z BigQuery...</p>',!a.ok){const i=await a.text();throw new Error(`B≈ÇƒÖd API: ${a.statusText}, Szczeg√≥≈Çy: ${i}`)}const n=await a.json();if(n.success&&n.data){const i={project:n.meta.project,dataset:n.meta.dataset,location:n.meta.location,rows:n.meta.rows_count,job_id:n.meta.job_id};e.innerHTML=`
          <div class="bg-green-600 text-white p-3 rounded-md">
            <p class="font-bold mb-2">‚úÖ BigQuery - Zapytanie wykonane pomy≈õlnie!</p>
            <div class="text-sm mb-2">
              <span class="font-semibold">Projekt:</span> ${i.project} | 
              <span class="font-semibold">Dataset:</span> ${i.dataset} | 
              <span class="font-semibold">Lokalizacja:</span> ${i.location}
            </div>
            <div class="text-sm mb-2">
              <span class="font-semibold">Wiersze:</span> ${i.rows} | 
              <span class="font-semibold">Job ID:</span> ${i.job_id.substring(0,12)}...
            </div>
            <pre class="bg-green-700 text-white p-2 rounded mt-2 text-xs overflow-auto max-h-24">${JSON.stringify(n.data,null,2)}</pre>
          </div>
        `,f("BigQuery",i)}else throw new Error(n.error||"Unknown API error")}catch(s){console.error("Error fetching from BigQuery:",s),e.innerHTML=`
        <div class="bg-red-600 text-white p-3 rounded-md">
          <p class="font-bold">‚ùå BigQuery - B≈ÇƒÖd po≈ÇƒÖczenia!</p>
          <p class="text-sm mt-1">${s.message}</p>
        </div>
      `}}async function m(){console.log("üîç openKaggle() wywo≈Çana - new API version");const e=document.getElementById("kaggle-result"),t=document.getElementById("kagglePrompt"),o=t?t.value.trim():"";if(!e){console.error("Result container #kaggle-result not found!");return}if(e.classList.remove("hidden"),!o){e.innerHTML=`
          <div class="bg-yellow-600 text-white p-3 rounded-md">
            <p class="font-bold">‚ö†Ô∏è Kaggle - Brak zapytania!</p>
            <p class="text-sm mt-1">Wpisz s≈Çowa kluczowe do wyszukania datasetu</p>
          </div>
        `;return}console.log("Kaggle prompt:",o),e.innerHTML='<p class="text-yellow-400">üîç Wyszukiwanie datasetu na Kaggle...</p>';try{const a=await fetch("/api/polaczek/kaggle",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:o,search_type:"datasets"})});if(!a.ok){const i=await a.text();throw new Error(`B≈ÇƒÖd API: ${a.statusText}, Szczeg√≥≈Çy: ${i}`)}const n=await a.json();if(n.available_datasets&&n.available_datasets.length>0){const i={query:o,found_datasets:n.available_datasets.length,api_status:"success",timestamp:new Date().toISOString()};e.innerHTML=`
          <div class="bg-green-600 text-white p-3 rounded-md">
            <p class="font-bold mb-2">‚úÖ Kaggle - Znaleziono datasety!</p>
            <div class="text-sm mb-2">
              <span class="font-semibold">Zapytanie:</span> "${o}" | 
              <span class="font-semibold">Znalezione:</span> ${n.available_datasets.length} datasety
            </div>
            <div class="bg-green-700 text-white p-2 rounded mt-2 text-xs overflow-auto max-h-24">
              ${n.available_datasets.slice(0,3).map(l=>`<div class="mb-1">üìä ${l.name}: ${l.description}</div>`).join("")}
              ${n.available_datasets.length>3?`<div class="text-green-300">... i ${n.available_datasets.length-3} wiƒôcej</div>`:""}
            </div>
          </div>
        `,f("Kaggle",i),localStorage.setItem("quickKaggleSearch",o)}else throw new Error(n.error||"Brak wynik√≥w dla tego zapytania")}catch(s){console.error("Error fetching from Kaggle:",s),e.innerHTML=`
        <div class="bg-red-600 text-white p-3 rounded-md">
          <p class="font-bold">‚ùå Kaggle - B≈ÇƒÖd wyszukiwania!</p>
          <p class="text-sm mt-1">${s.message}</p>
          <p class="text-xs mt-2 text-red-200">Kliknij "Otw√≥rz" aby przej≈õƒá do pe≈Çnej strony Kaggle</p>
        </div>
      `,o&&localStorage.setItem("quickKaggleSearch",o)}}async function w(){console.log("üåê openTavily() wywo≈Çana - new API version");const e=document.getElementById("tavily-result"),t=document.getElementById("tavilyPrompt"),o=t?t.value.trim():"";if(!e){console.error("Result container #tavily-result not found!");return}if(e.classList.remove("hidden"),!o){e.innerHTML=`
          <div class="bg-yellow-600 text-white p-3 rounded-md">
            <p class="font-bold">‚ö†Ô∏è Tavily - Brak zapytania!</p>
            <p class="text-sm mt-1">Wpisz pytanie do wyszukania w internecie</p>
          </div>
        `;return}console.log("Tavily prompt:",o),e.innerHTML='<p class="text-yellow-400">üåê Wyszukiwanie informacji w internecie...</p>';try{const a=await fetch("/api/polaczek/tavily",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:o,search_depth:"basic"})});if(!a.ok){const i=await a.text();throw new Error(`B≈ÇƒÖd API: ${a.statusText}, Szczeg√≥≈Çy: ${i}`)}const n=await a.json();if(n.success&&n.results&&n.results.length>0){const i={query:o,found_results:n.results.length,api_status:"success",timestamp:new Date().toISOString()};e.innerHTML=`
          <div class="bg-green-600 text-white p-3 rounded-md">
            <p class="font-bold mb-2">‚úÖ Tavily - Znaleziono informacje!</p>
            <div class="text-sm mb-2">
              <span class="font-semibold">Zapytanie:</span> "${o}" | 
              <span class="font-semibold">Znalezione:</span> ${n.results.length} wynik√≥w
            </div>
            <div class="bg-green-700 text-white p-2 rounded mt-2 text-xs overflow-auto max-h-24">
              ${n.results.slice(0,2).map(l=>`<div class="mb-1">üîó ${l.title}<br><span class="text-green-300 text-xs">${l.url}</span></div>`).join("")}
              ${n.results.length>2?`<div class="text-green-300">... i ${n.results.length-2} wiƒôcej wynik√≥w</div>`:""}
            </div>
          </div>
        `,f("Tavily",i),localStorage.setItem("quickTavilySearch",o)}else throw new Error(n.error||"Brak wynik√≥w dla tego zapytania")}catch(s){console.error("Error fetching from Tavily:",s),e.innerHTML=`
        <div class="bg-red-600 text-white p-3 rounded-md">
          <p class="font-bold">‚ùå Tavily - B≈ÇƒÖd wyszukiwania!</p>
          <p class="text-sm mt-1">${s.message}</p>
          <p class="text-xs mt-2 text-red-200">Kliknij "Otw√≥rz" aby przej≈õƒá do pe≈Çnej strony Tavily</p>
        </div>
      `,o&&localStorage.setItem("quickTavilySearch",o)}}function v(e){return console.log(`üß™ TEST: Przycisk ${e} zosta≈Ç klikniƒôty!`),alert(`Test udany! Przycisk ${e} dzia≈Ça.`),!1}async function I(){if(console.log("Rozpoczynam testy wszystkich API..."),window.apiTests&&window.apiTests.testAllAPIs)try{await window.apiTests.testAllAPIs(),console.log("All API tests completed")}catch(e){console.log("Error during API tests:",e)}else console.log("‚è≥ API tests nie sƒÖ jeszcze za≈Çadowane, pr√≥bujƒô ponownie..."),setTimeout(I,1e3)}function A(){console.log("Opening API test console..."),console.log("Available API tests:"),console.log("- window.apiTests.testChatAPI()"),console.log("- window.apiTests.testImageGeneration()"),console.log("- window.apiTests.testAIBot()"),console.log("- window.apiTests.testAllAPIs()"),window.apiTests?console.log("API Tests module loaded, available functions:",Object.keys(window.apiTests)):console.log("API Tests module not loaded yet")}async function b(){const e=document.getElementById("overallStatus");if(!e)return;const t=e.querySelector(".status-dot"),o=e.querySelector("span:last-child");if(!(!t||!o)){o.textContent="Sprawdzanie...",t.className="status-dot";try{const s=["/api/generate-image","/api/chat","/api/bigquery","/api/kaggle","/api/tavi"],n=(await Promise.allSettled(s.map(l=>fetch(l).then(c=>({api:l,ok:c.ok}))))).filter(l=>l.status==="fulfilled"&&l.value.ok).length,i=s.length;n===i?(t.className="status-dot online",o.textContent=`Wszystkie online (${n}/${i})`):n>0?(t.className="status-dot",o.textContent=`Czƒô≈õciowo online (${n}/${i})`):(t.className="status-dot offline",o.textContent=`Offline (${n}/${i})`)}catch{t.className="status-dot offline",o.textContent="B≈ÇƒÖd sprawdzania"}}}function k(){const e=document.getElementById("dashboardLogin"),t=document.getElementById("loginContainer"),o=document.getElementById("dashboardButtons");if(!e||!t||!o)return;const s=e.value.trim();console.log("Checking login:",s),s==="HAOS77"?(t.classList.add("hidden"),o.classList.remove("hidden"),console.log("Login successful, showing dashboard buttons")):(console.log("Invalid login"),e.style.borderColor="#ef4444",setTimeout(()=>{e.style.borderColor=""},2e3))}function d(e){console.log(`üéØ KLIKNIƒòTO KAFELEK! Otwieranie funkcji: ${e}`),alert(`DEBUGOWANIE: Klikniƒôto w funkcjƒô: ${e}`);const o={rekomendacje:"/ai-functions/personalized-recommendations","obs≈Çuga-klienta":"/ai-functions/customer-automation",monitorowanie:"/ai-functions/activity-monitoring",przypomnienia:"/ai-functions/reminders-calendar","faq-generator":"/ai-functions/dynamic-faq",edukacja:"/ai-functions/education-recommendations",tickety:"/ai-functions/ai-tickets",quizy:"/ai-functions/interactive-quizzes",marketing:"/ai-functions/marketing-content"}[e];o?(console.log(`Przekierowanie do: ${o}`),window.open(o,"_blank")):(console.error(`Nieznana funkcja: ${e}`),alert(`Funkcja "${e}" jest w trakcie implementacji. Spr√≥buj ponownie p√≥≈∫niej.`))}document.addEventListener("DOMContentLoaded",function(){console.log("üöÄ DOM za≈Çadowany, inicjalizacja funkcji"),console.log("üß™ Test funkcji openFunction:",typeof d),console.log("üß™ Test window.openFunction:",typeof window.openFunction),window.openFunction=d,console.log("‚úÖ openFunction dodana do window scope");const e=document.querySelectorAll(".feature-tile[data-function]");console.log(`üéØ Znaleziono ${e.length} kafelk√≥w funkcji`),e.forEach((i,l)=>{const c=i.getAttribute("onclick")?.match(/openFunction\('(.+?)'\)/)?.[1];console.log(`üîó Tile ${l}: ${c}`),i.addEventListener("click",function(r){r.preventDefault(),r.stopPropagation(),console.log(`üéØ BEZPO≈öREDNI KLIK na tile: ${c}`),c&&d(c)})}),console.log("üß™ Test dostƒôpno≈õci funkcji:"),console.log("- openImageGenerator:",typeof g),console.log("- openChatbot:",typeof p),console.log("- openBigQuery:",typeof u),console.log("- openKaggle:",typeof m),console.log("- openTavily:",typeof w),console.log("üß™ Test dostƒôpno≈õci element√≥w input:"),console.log("- imagePrompt:",document.getElementById("imagePrompt")),console.log("- chatPrompt:",document.getElementById("chatPrompt")),console.log("- bigqueryPrompt:",document.getElementById("bigqueryPrompt")),console.log("- kagglePrompt:",document.getElementById("kagglePrompt")),console.log("- tavilyPrompt:",document.getElementById("tavilyPrompt")),document.querySelectorAll(".quick-prompt").forEach(i=>{const l=i;l.addEventListener("keydown",function(c){if(c.code==="Enter"||c.key==="Enter"){const r=l.id.replace("Prompt","");r==="image"?g():r==="chat"?p():r==="bigquery"?u():r==="kaggle"?m():r==="tavily"&&w()}})});const t=document.getElementById("dashboardLogin");t&&t.addEventListener("keydown",function(i){i.key==="Enter"&&k()}),console.log("üßπ Clearing component cache and resetting state..."),localStorage.getItem("components-working")==="true"?console.log("‚úÖ Components were working, preserving state..."):(console.log("üßπ Components not working, clearing cache..."),delete window.MUSIC,delete window.POLACZEK,sessionStorage.removeItem("polaczek-status"),sessionStorage.removeItem("music-status")),localStorage.setItem("components-initialized","false");let s=0;const a=50,n=()=>{s++,console.log(`üîç Component check attempt ${s}/${a}`);const i=window.MUSIC&&typeof window.MUSIC.ensureLoaded=="function",l=window.POLACZEK&&typeof window.POLACZEK.openAssistant=="function";if(console.log(`üéµ Music ready: ${i}, ü§ñ POLACZEK ready: ${l}`),i&&l){console.log("‚úÖ All components are ready!"),localStorage.setItem("components-initialized","true"),localStorage.setItem("components-working","true");return}s<a?setTimeout(n,100):(console.warn("‚ùå Components not all ready after 5 seconds, but continuing without forced reload"),localStorage.setItem("components-initialized","partial"))};b(),setTimeout(n,500),setTimeout(()=>{console.log("üîÑ Auto-initializing components after page load..."),y(),h()},1e3),window.openImageGenerator=g,window.openChatbot=p,window.openBigQuery=u,window.openKaggle=m,window.openTavily=w,window.testButtonFunction=v,window.checkDashboardLogin=k,window.openFunction=d,window.toggleMusicPlayer=C,window.togglePolaczekAssistant=E,window.openMainChat=L,window.openRefresh=T,window.openFolder=S,window.openClose=M,window.checkAllStatus=b,window.runAllAPITests=I,window.openAPITestConsole=A,window.resetComponents=z,window.hardResetComponents=x,console.log("All functions assigned to window object"),console.log("üîß Debug functions available:"),console.log("- resetComponents() - soft reset"),console.log("- hardResetComponents() - hard reset with page reload"),console.log("- checkAllStatus() - check API status"),console.log("- Check localStorage.getItem('components-working') for component status")});function C(){console.log("üéµ Toggling Music Player");const e=document.getElementById("musicPlayerBtn"),t=document.getElementById("musicPlayerWidget");e&&t&&(e.style.transform="scale(1.1) translateY(-2px)",setTimeout(()=>{e.style.transform=""},200),t.classList.toggle("hidden"),t.classList.contains("hidden")||setTimeout(()=>{if(console.log("üéµ Widget shown, checking Music API..."),window.MUSIC&&window.MUSIC.ensureLoaded){console.log("üéµ Music API available, calling ensureLoaded...");try{window.MUSIC.ensureLoaded()}catch(o){console.warn("Music ensureLoaded failed:",o)}}else console.log("üéµ Music API not available, waiting for initialization..."),y()},500),console.log("Music Player widget toggled"))}function E(){console.log("ü§ñ Toggling AI Assistant");const e=document.getElementById("polaczekBtn"),t=document.getElementById("polaczekWidget");e&&t&&(e.style.transform="scale(1.1) translateY(-2px)",setTimeout(()=>{e.style.transform=""},200),t.classList.toggle("hidden"),t.classList.contains("hidden")||setTimeout(()=>{if(console.log("ü§ñ Widget shown, checking POLACZEK API..."),window.POLACZEK&&window.POLACZEK.openAssistant){console.log("ü§ñ POLACZEK API available, opening assistant...");try{window.POLACZEK.openAssistant(),window.POLACZEK.forceReconnect&&window.POLACZEK.forceReconnect()}catch(o){console.warn("POLACZEK openAssistant failed:",o)}}else console.log("ü§ñ POLACZEK API not available, waiting for initialization..."),h()},500),console.log("AI Assistant widget toggled"))}function f(e,t){console.log(`üìä Updating ${e} statistics:`,t);let o=document.getElementById("side-stats-panel");o||(o=document.createElement("div"),o.id="side-stats-panel",o.style.cssText=`
        position: fixed;
        top: 50px;
        right: 20px;
        width: 280px;
        background: rgba(34, 197, 94, 0.9);
        color: white;
        padding: 12px;
        border-radius: 8px;
        font-family: monospace;
        font-size: 11px;
        z-index: 1000;
        max-height: 300px;
        overflow-y: auto;
        backdrop-filter: blur(8px);
        border: 1px solid rgba(34, 197, 94, 0.5);
      `,document.body.appendChild(o));const s=new Date().toLocaleTimeString("pl-PL"),a=o.innerHTML,l=(`
      <div style="border-bottom: 1px solid rgba(255,255,255,0.3); margin-bottom: 8px; padding-bottom: 6px;">
        <div style="font-weight: bold; color: #fff;">[${s}] ${e}</div>
        ${Object.entries(t).map(([c,r])=>`<div style="margin-left: 8px; color: #e5f9e5;"><span style="color: #a7f3d0;">${c}:</span> ${r}</div>`).join("")}
      </div>
    `+a).split('<div style="border-bottom:').slice(0,5);if(o.innerHTML=l.join('<div style="border-bottom:'),setTimeout(()=>{o&&o.parentNode&&(o.style.opacity="0.7")},3e4),!o.querySelector(".close-btn")){const c=document.createElement("button");c.className="close-btn",c.innerHTML="√ó",c.style.cssText=`
        position: absolute;
        top: 4px;
        right: 8px;
        background: none;
        border: none;
        color: white;
        font-size: 16px;
        font-weight: bold;
        cursor: pointer;
        padding: 0;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
      `,c.onclick=()=>{o&&o.parentNode&&o.parentNode.removeChild(o)},o.appendChild(c)}}function y(){console.log("üéµ Waiting for Music API...");let e=0;const t=100,o=()=>{if(e++,console.log(`üéµ Music API check attempt ${e}/${t}`),window.MUSIC&&window.MUSIC.ensureLoaded){console.log("üéµ Music API ready! Initializing...");try{window.MUSIC.ensureLoaded(),sessionStorage.setItem("music-status","ready"),localStorage.setItem("components-working","true"),console.log("üéµ Music player initialized successfully!")}catch(s){console.warn("Music ensureLoaded failed:",s),sessionStorage.setItem("music-status","error")}}else e<t?(console.log("üéµ Music API not ready yet, retrying..."),setTimeout(o,100)):(console.error("üéµ Music API not ready after 10 seconds - component may not be loaded"),sessionStorage.setItem("music-status","timeout"),console.log("üéµ Debug info:"),console.log("- window.MUSIC exists:",!!window.MUSIC),console.log("- window.MUSIC.ensureLoaded exists:",!!(window.MUSIC&&window.MUSIC.ensureLoaded)),console.log("- Music widget element exists:",!!document.getElementById("musicPlayerWidget")),console.log("üéµ Use resetComponents() or hardResetComponents() in console if needed"))};o()}function h(){console.log("ü§ñ Waiting for POLACZEK API...");let e=0;const t=100,o=()=>{if(e++,console.log(`ü§ñ POLACZEK API check attempt ${e}/${t}`),window.POLACZEK&&window.POLACZEK.openAssistant){console.log("ü§ñ POLACZEK API ready! Connecting...");try{if(window.POLACZEK.getStatus){const s=window.POLACZEK.getStatus();console.log("ü§ñ Current POLACZEK status:",s),s==="disconnected"&&(console.log("ü§ñ Triggering reconnection..."),window.dispatchEvent(new CustomEvent("polaczek-reconnect")))}sessionStorage.setItem("polaczek-status","ready"),localStorage.setItem("components-working","true"),console.log("ü§ñ POLACZEK assistant initialized successfully!")}catch(s){console.warn("POLACZEK initialization failed:",s),sessionStorage.setItem("polaczek-status","error")}}else e<t?(console.log("ü§ñ POLACZEK API not ready yet, retrying..."),setTimeout(o,100)):(console.error("ü§ñ POLACZEK API not ready after 10 seconds - component may not be loaded"),sessionStorage.setItem("polaczek-status","timeout"),console.log("ü§ñ Debug info:"),console.log("- window.POLACZEK exists:",!!window.POLACZEK),console.log("- window.POLACZEK.openAssistant exists:",!!(window.POLACZEK&&window.POLACZEK.openAssistant)),console.log("- POLACZEK widget element exists:",!!document.getElementById("polaczekWidget")),console.log("ü§ñ Use resetComponents() or hardResetComponents() in console if needed"))};o()}function z(){console.log("üîÑ Manually resetting all components..."),delete window.MUSIC,delete window.POLACZEK,sessionStorage.clear(),localStorage.setItem("components-initialized","false"),localStorage.setItem("components-working","false"),setTimeout(()=>{console.log("üîÑ Re-initializing components..."),y(),h()},500),console.log("üîÑ Component reset completed!")}function x(){console.log("üí£ Hard resetting - clearing everything and reloading page..."),localStorage.clear(),sessionStorage.clear(),delete window.MUSIC,delete window.POLACZEK,window.location.reload(!0)}function L(){console.log("üí¨ Opening Main Chat"),window.open("/chatbot","_blank")}function T(){console.log("üîÑ Refreshing page"),window.location.reload()}function S(){console.log("üìÅ Opening folder"),alert("Otwieranie lokalnego folderu jest zablokowane przez przeglƒÖdarki ze wzglƒôd√≥w bezpiecze≈Ñstwa.")}function M(){console.log("‚ùå Closing tab");try{window.close()}catch{alert("Zamykanie karty mo≈ºe byƒá zablokowane przez przeglƒÖdarkƒô.")}}
