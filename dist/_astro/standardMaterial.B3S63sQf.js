const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["_astro/default.vertex.De_n05Z5.js","_astro/decorators.serialization.DTWIlLMH.js","_astro/math.vector.C8FsJn6B.js","_astro/math.color.BvxHr_bk.js","_astro/preload-helper.BlTxHScW.js","_astro/logDepthDeclaration.CeSlY2RF.js","_astro/meshUboDeclaration.CKqylhN-.js","_astro/helperFunctions.DQguGr6F.js","_astro/clipPlaneVertex.CHP8PsHj.js","_astro/instancesDeclaration.CX0lCmKX.js","_astro/vertexColorMixing.az459Vb1.js","_astro/morphTargetsVertex.CcX_G7a4.js","_astro/default.fragment.DsRsWBld.js","_astro/clipPlaneFragment.BLBzTSaj.js","_astro/fogFragment.E4BOEWnr.js","_astro/default.vertex.C0eofYFX.js","_astro/logDepthDeclaration.CHF0qKNj.js","_astro/meshUboDeclaration.udh3qWt4.js","_astro/helperFunctions.BBD6oZAl.js","_astro/scene.C9ljXyY7.js","_astro/tools.kgQOdK5j.js","_astro/instantiationTools.DpJ04vA6.js","_astro/smartArray.BsIpkRz3.js","_astro/light.Tpw1S7gS.js","_astro/node.B7U3vf9R.js","_astro/postProcess.BhJOrjOy.js","_astro/texture.DcuyhkEj.js","_astro/baseTexture.xJCKUhPX.js","_astro/math.size.F3xmSqZc.js","_astro/math.plane.DogzNArm.js","_astro/engine.Bhq7AZzW.js","_astro/math.axis.BWIUWoG3.js","_astro/math.path.Rz-CSHk9.js","_astro/math.viewport.CgkTt1RS.js","_astro/camera.DMMowNsy.js","_astro/math.frustum.0quBJc8n.js","_astro/vertexColorMixing.nMCjc42t.js","_astro/default.fragment.D09vxHk1.js","_astro/fogFragment.D5dYZ8g-.js"])))=>i.map(i=>d[i]);
import{_ as B}from"./preload-helper.BlTxHScW.js";import{A as E,d as Y,q as ee,S as O,a as n,s as c,e as b,m as h,b as V,r as N}from"./decorators.serialization.DTWIlLMH.js";import{S as te}from"./smartArray.BsIpkRz3.js";import{P as R,b as I,c as ie,d as se,e as re,f as ae,g as ne,h as oe,i as le,E as ue,H as fe,j as he,k as ce,l as _e,m as de,I as H,n as Ee,A as Te,o as pe,p as me,q as ge,S as q,r as Ae,s as xe,t as Pe}from"./scene.C9ljXyY7.js";import{R as $,a as C}from"./math.color.BvxHr_bk.js";import{V as k}from"./postProcess.BhJOrjOy.js";import{M as F,P as be}from"./pushMaterial.DrLMh5Lq.js";import{T as P}from"./texture.DcuyhkEj.js";import{E as Re,M as j}from"./math.vector.C8FsJn6B.js";import"./tools.kgQOdK5j.js";import"./instantiationTools.DpJ04vA6.js";import"./light.Tpw1S7gS.js";import"./node.B7U3vf9R.js";import"./camera.DMMowNsy.js";import"./math.viewport.CgkTt1RS.js";import"./math.frustum.0quBJc8n.js";import"./math.plane.DogzNArm.js";import"./engine.Bhq7AZzW.js";import"./math.axis.BWIUWoG3.js";import"./math.path.Rz-CSHk9.js";import"./baseTexture.xJCKUhPX.js";import"./math.size.F3xmSqZc.js";class z{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(e){e.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(e){}bindForSubMesh(e,i,s,a,u){if(i.prePassRenderer&&i.prePassRenderer.enabled&&i.prePassRenderer.currentRTisSceneRT&&(i.prePassRenderer.getIndex(2)!==-1||i.prePassRenderer.getIndex(11)!==-1)){this.previousWorldMatrices[s.uniqueId]||(this.previousWorldMatrices[s.uniqueId]=a.clone()),this.previousViewProjection||(this.previousViewProjection=i.getTransformMatrix().clone(),this.currentViewProjection=i.getTransformMatrix().clone());const t=i.getEngine();this.currentViewProjection.updateFlag!==i.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=t.frameId,this.previousViewProjection.copyFrom(this.currentViewProjection),this.currentViewProjection.copyFrom(i.getTransformMatrix())):this._lastUpdateFrameId!==t.frameId&&(this._lastUpdateFrameId=t.frameId,this.previousViewProjection.copyFrom(this.currentViewProjection)),e.setMatrix("previousWorld",this.previousWorldMatrices[s.uniqueId]),e.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[s.uniqueId]=a.clone()}}}class K{constructor(e){if(this.VERTEXOUTPUT_INVARIANT=!1,this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=e,e)for(const i in e)Object.prototype.hasOwnProperty.call(e,i)&&this._setDefaultValue(i)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(e=!1){this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||e,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const e of Object.keys(this))e[0]!=="_"&&this._keys.push(e);if(this._externalProperties)for(const e in this._externalProperties)this._keys.indexOf(e)===-1&&this._keys.push(e)}isEqual(e){if(this._keys.length!==e._keys.length)return!1;for(let i=0;i<this._keys.length;i++){const s=this._keys[i];if(this[s]!==e[s])return!1}return!0}cloneTo(e){this._keys.length!==e._keys.length&&(e._keys=this._keys.slice(0));for(let i=0;i<this._keys.length;i++){const s=this._keys[i];e[s]=this[s]}}reset(){for(const e of this._keys)this._setDefaultValue(e)}_setDefaultValue(e){const i=this._externalProperties?.[e]?.type??typeof this[e],s=this._externalProperties?.[e]?.default;switch(i){case"number":this[e]=s??0;break;case"string":this[e]=s??"";break;default:this[e]=s??!1;break}}toString(){let e="";for(let i=0;i<this._keys.length;i++){const s=this._keys[i],a=this[s];switch(typeof a){case"number":case"string":e+="#define "+s+" "+a+`
`;break;default:a&&(e+="#define "+s+`
`);break}}return e}}class l{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){this._DiffuseTextureEnabled!==e&&(this._DiffuseTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(e){this._BaseWeightTextureEnabled!==e&&(this._BaseWeightTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(e){this._BaseDiffuseRoughnessTextureEnabled!==e&&(this._BaseDiffuseRoughnessTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(e){this._DetailTextureEnabled!==e&&(this._DetailTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(e){this._DecalMapEnabled!==e&&(this._DecalMapEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(e){this._AmbientTextureEnabled!==e&&(this._AmbientTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(e){this._OpacityTextureEnabled!==e&&(this._OpacityTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){this._ReflectionTextureEnabled!==e&&(this._ReflectionTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){this._EmissiveTextureEnabled!==e&&(this._EmissiveTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(e){this._SpecularTextureEnabled!==e&&(this._SpecularTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(e){this._BumpTextureEnabled!==e&&(this._BumpTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(e){this._LightmapTextureEnabled!==e&&(this._LightmapTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(e){this._RefractionTextureEnabled!==e&&(this._RefractionTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){this._ColorGradingTextureEnabled!==e&&(this._ColorGradingTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(e){this._FresnelEnabled!==e&&(this._FresnelEnabled=e,E.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(e){this._ClearCoatTextureEnabled!==e&&(this._ClearCoatTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(e){this._ClearCoatBumpTextureEnabled!==e&&(this._ClearCoatBumpTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(e){this._ClearCoatTintTextureEnabled!==e&&(this._ClearCoatTintTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(e){this._SheenTextureEnabled!==e&&(this._SheenTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(e){this._AnisotropicTextureEnabled!==e&&(this._AnisotropicTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(e){this._ThicknessTextureEnabled!==e&&(this._ThicknessTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(e){this._RefractionIntensityTextureEnabled!==e&&(this._RefractionIntensityTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(e){this._TranslucencyIntensityTextureEnabled!==e&&(this._TranslucencyIntensityTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(e){this._TranslucencyColorTextureEnabled!==e&&(this._TranslucencyColorTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(e){this._IridescenceTextureEnabled!==e&&(this._IridescenceTextureEnabled=e,E.MarkAllMaterialsAsDirty(1))}}l._DiffuseTextureEnabled=!0;l._BaseWeightTextureEnabled=!0;l._BaseDiffuseRoughnessTextureEnabled=!0;l._DetailTextureEnabled=!0;l._DecalMapEnabled=!0;l._AmbientTextureEnabled=!0;l._OpacityTextureEnabled=!0;l._ReflectionTextureEnabled=!0;l._EmissiveTextureEnabled=!0;l._SpecularTextureEnabled=!0;l._BumpTextureEnabled=!0;l._LightmapTextureEnabled=!0;l._RefractionTextureEnabled=!0;l._ColorGradingTextureEnabled=!0;l._FresnelEnabled=!0;l._ClearCoatTextureEnabled=!0;l._ClearCoatBumpTextureEnabled=!0;l._ClearCoatTintTextureEnabled=!0;l._SheenTextureEnabled=!0;l._AnisotropicTextureEnabled=!0;l._ThicknessTextureEnabled=!0;l._RefractionIntensityTextureEnabled=!0;l._TranslucencyIntensityTextureEnabled=!0;l._TranslucencyColorTextureEnabled=!0;l._IridescenceTextureEnabled=!0;const Ie=new RegExp("^([gimus]+)!");class S{constructor(e){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=e,this._scene=e.getScene(),this._engine=this._scene.getEngine()}_addPlugin(e){for(let a=0;a<this._plugins.length;++a)if(this._plugins[a].name===e.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!e.isCompatible(this._material.shaderLanguage))throw`The plugin "${e.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const i=e.getClassName();S._MaterialPluginClassToMainDefine[i]||(S._MaterialPluginClassToMainDefine[i]="MATERIALPLUGIN_"+ ++S._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(a,u)=>this._handlePluginEvent(a,u),this._plugins.push(e),this._plugins.sort((a,u)=>a.priority-u.priority),this._codeInjectionPoints={};const s={};s[S._MaterialPluginClassToMainDefine[i]]={type:"boolean",default:!0};for(const a of this._plugins)a.collectDefines(s),this._collectPointNames("vertex",a.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",a.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=s,!0}_activatePlugin(e){this._activePlugins.indexOf(e)===-1&&(this._activePlugins.push(e),this._activePlugins.sort((i,s)=>i.priority-s.priority),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),e.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(e),this._activePluginsForExtraEvents.sort((i,s)=>i.priority-s.priority),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(e){for(let i=0;i<this._plugins.length;++i)if(this._plugins[i].name===e)return this._plugins[i];return null}_handlePluginEventIsReadyForSubMesh(e){let i=!0;for(const s of this._activePlugins)i=i&&s.isReadyForSubMesh(e.defines,this._scene,this._engine,e.subMesh);e.isReadyForSubMesh=i}_handlePluginEventPrepareDefinesBeforeAttributes(e){for(const i of this._activePlugins)i.prepareDefinesBeforeAttributes(e.defines,this._scene,e.mesh)}_handlePluginEventPrepareDefines(e){for(const i of this._activePlugins)i.prepareDefines(e.defines,this._scene,e.mesh)}_handlePluginEventHardBindForSubMesh(e){for(const i of this._activePluginsForExtraEvents)i.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,e.subMesh)}_handlePluginEventBindForSubMesh(e){for(const i of this._activePlugins)i.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,e.subMesh)}_handlePluginEventHasRenderTargetTextures(e){let i=!1;for(const s of this._activePluginsForExtraEvents)if(i=s.hasRenderTargetTextures(),i)break;e.hasRenderTargetTextures=i}_handlePluginEventFillRenderTargetTextures(e){for(const i of this._activePluginsForExtraEvents)i.fillRenderTargetTextures(e.renderTargets)}_handlePluginEvent(e,i){switch(e){case 512:{const s=i;for(const a of this._activePlugins)a.getActiveTextures(s.activeTextures);break}case 256:{const s=i;for(const a of this._activePlugins)a.getAnimatables(s.animatables);break}case 1024:{const s=i;let a=!1;for(const u of this._activePlugins)if(a=u.hasTexture(s.texture),a)break;s.hasTexture=a;break}case 2:{const s=i;for(const a of this._plugins)a.dispose(s.forceDisposeTextures);break}case 4:{const s=i;s.defineNames=this._defineNamesFromPlugins;break}case 128:{const s=i;for(const a of this._activePlugins)s.fallbackRank=a.addFallbacks(s.defines,s.fallbacks,s.fallbackRank),a.getAttributes(s.attributes,this._scene,s.mesh);this._uniformList.length>0&&s.uniforms.push(...this._uniformList),this._samplerList.length>0&&s.samplers.push(...this._samplerList),this._uboList.length>0&&s.uniformBuffersNames.push(...this._uboList),s.customCode=this._injectCustomCode(s,s.customCode);break}case 8:{const s=i;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const a=this._material.shaderLanguage===1;for(const u of this._plugins){const t=u.getUniforms(this._material.shaderLanguage);if(t){if(t.ubo)for(const f of t.ubo){if(f.size&&f.type){const T=f.arraySize??0;if(s.ubo.addUniform(f.name,f.size,T),a){let o;switch(f.type){case"mat4":o="mat4x4f";break;case"float":o="f32";break;default:o=`${f.type}f`;break}T>0?this._uboDeclaration+=`uniform ${f.name}: array<${o}, ${T}>;
`:this._uboDeclaration+=`uniform ${f.name}: ${o};
`}else this._uboDeclaration+=`${f.type} ${f.name}${T>0?`[${T}]`:""};
`}this._uniformList.push(f.name)}t.vertex&&(this._vertexDeclaration+=t.vertex+`
`),t.fragment&&(this._fragmentDeclaration+=t.fragment+`
`),t.externalUniforms&&this._uniformList.push(...t.externalUniforms)}u.getSamplers(this._samplerList),u.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(e,i){if(i)for(const s in i)this._codeInjectionPoints[e]||(this._codeInjectionPoints[e]={}),this._codeInjectionPoints[e][s]=!0}_injectCustomCode(e,i){return(s,a)=>{i&&(a=i(s,a)),this._uboDeclaration&&(a=a.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(a=a.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(a=a.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const u=this._codeInjectionPoints?.[s];if(!u)return a;let t=null;for(let f in u){let T="";for(const o of this._activePlugins){let _=o.getCustomCode(s,this._material.shaderLanguage)?.[f];_&&(o.resolveIncludes&&(t===null&&(t={defines:[],indexParameters:e.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:Y.GetShadersRepository(0),includesShadersStore:Y.GetIncludesShadersStore(0),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}),t.isFragment=s==="fragment",ee(_,t,d=>_=d)),T+=_+`
`)}if(T.length>0)if(f.charAt(0)==="!"){f=f.substring(1);let o="g";if(f.charAt(0)==="!")o="",f=f.substring(1);else{const x=Ie.exec(f);x&&x.length>=2&&(o=x[1],f=f.substring(o.length+1))}o.indexOf("g")<0&&(o+="g");const _=a,d=new RegExp(f,o);let p=d.exec(_);for(;p!==null;){let x=T;for(let A=0;A<p.length;++A)x=x.replace("$"+A,p[A]);a=a.replace(p[0],x),p=d.exec(_)}}else{const o="#define "+f;a=a.replace(o,`
`+T+`
`+o)}}return a}}}S._MaterialPluginClassToMainDefine={};S._MaterialPluginCounter=0;Re.OnEnginesDisposedObservable.add(()=>{Ce()});const Se=[];let Z=null;function Ce(){Se.length=0,F.OnEventObservable.remove(Z),Z=null}class v{isCompatible(e){switch(e){case 0:return!0;default:return!1}}_enable(e){e&&this._pluginManager._activatePlugin(this)}constructor(e,i,s,a,u=!0,t=!1,f=!1){this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=e,this.name=i,this.priority=s,this.resolveIncludes=f,e.pluginManager||(e.pluginManager=new S(e),e.onDisposeObservable.add(()=>{e.pluginManager=void 0})),this._pluginDefineNames=a,this._pluginManager=e.pluginManager,u&&this._pluginManager._addPlugin(this),t&&this._enable(!0),this.markAllDefinesAsDirty=e._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(e,i,s,a){return!0}hardBindForSubMesh(e,i,s,a){}bindForSubMesh(e,i,s,a){}dispose(e){}getCustomCode(e,i=0){return null}collectDefines(e){if(this._pluginDefineNames)for(const i of Object.keys(this._pluginDefineNames)){if(i[0]==="_")continue;const s=typeof this._pluginDefineNames[i];e[i]={type:s==="number"?"number":s==="string"?"string":s==="boolean"?"boolean":"object",default:this._pluginDefineNames[i]}}}prepareDefinesBeforeAttributes(e,i,s){}prepareDefines(e,i,s){}hasTexture(e){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(e){}getActiveTextures(e){}getAnimatables(e){}addFallbacks(e,i,s){return s}getSamplers(e){}getAttributes(e,i,s){}getUniformBuffersNames(e){}getUniforms(e=0){return{}}copyTo(e){O.Clone(()=>e,this)}serialize(){return O.Serialize(this)}parse(e,i,s){O.Parse(()=>this,e,i,s)}}n([c()],v.prototype,"name",void 0);n([c()],v.prototype,"priority",void 0);n([c()],v.prototype,"resolveIncludes",void 0);n([c()],v.prototype,"registerForExtraEvents",void 0);$("BABYLON.MaterialPluginBase",v);class Le extends K{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class L extends v{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(e,i=!0){super(e,"DetailMap",140,new Le,i),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=F.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=e._dirtyCallbacks[1]}isReadyForSubMesh(e,i,s){return this._isEnabled?!(e._areTexturesDirty&&i.texturesEnabled&&s.getCaps().standardDerivatives&&this._texture&&l.DetailTextureEnabled&&!this._texture.isReady()):!0}prepareDefines(e,i){if(this._isEnabled){e.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const s=i.getEngine();e._areTexturesDirty&&(s.getCaps().standardDerivatives&&this._texture&&l.DetailTextureEnabled&&this._isEnabled?(R(this._texture,e,"DETAIL"),e.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):e.DETAIL=!1)}else e.DETAIL=!1}bindForSubMesh(e,i){if(!this._isEnabled)return;const s=this._material.isFrozen;(!e.useUbo||!s||!e.isSync)&&this._texture&&l.DetailTextureEnabled&&(e.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),I(this._texture,e,"detail")),i.texturesEnabled&&this._texture&&l.DetailTextureEnabled&&e.setTexture("detailSampler",this._texture)}hasTexture(e){return this._texture===e}getActiveTextures(e){this._texture&&e.push(this._texture)}getAnimatables(e){this._texture&&this._texture.animations&&this._texture.animations.length>0&&e.push(this._texture)}dispose(e){e&&this._texture?.dispose()}getClassName(){return"DetailMapConfiguration"}getSamplers(e){e.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}n([b("detailTexture"),h("_markAllSubMeshesAsTexturesDirty")],L.prototype,"texture",void 0);n([c()],L.prototype,"diffuseBlendLevel",void 0);n([c()],L.prototype,"roughnessBlendLevel",void 0);n([c()],L.prototype,"bumpLevel",void 0);n([c(),h("_markAllSubMeshesAsTexturesDirty")],L.prototype,"normalBlendMethod",void 0);n([c(),h("_markAllSubMeshesAsTexturesDirty")],L.prototype,"isEnabled",void 0);var Q;(function(m){m[m.Zero=0]="Zero",m[m.One=1]="One",m[m.MaxViewZ=2]="MaxViewZ"})(Q||(Q={}));class g{static CreateConfiguration(e){return g._Configurations[e]={defines:{},previousWorldMatrices:{},previousViewProjection:j.Zero(),currentViewProjection:j.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},g._Configurations[e]}static DeleteConfiguration(e){delete g._Configurations[e]}static GetConfiguration(e){return g._Configurations[e]}static AddUniformsAndSamplers(e,i){e.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(e,i){for(const s of i)if(s.subMeshes)for(const a of s.subMeshes)a._removeDrawWrapper(e)}static PrepareDefines(e,i,s){if(!s._arePrePassDirty)return;const a=g._Configurations[e];if(!a)return;s.PREPASS=!0,s.PREPASS_COLOR=!1,s.PREPASS_COLOR_INDEX=-1;let u=0;for(let t=0;t<g.GeometryTextureDescriptions.length;t++){const f=g.GeometryTextureDescriptions[t],T=f.define,o=f.defineIndex,_=a.defines[o];_!==void 0?(s[T]=!0,s[o]=_,u++):(s[T]=!1,delete s[o])}s.SCENE_MRT_COUNT=u,s.BONES_VELOCITY_ENABLED=i.useBones&&i.computeBonesUsingShaders&&i.skeleton&&!i.skeleton.isUsingTextureForMatrices&&a.excludedSkinnedMesh.indexOf(i)===-1}static Bind(e,i,s,a,u){const t=g._Configurations[e];if(!t)return;const f=s.getScene(),T=f.getEngine();if(t.reverseCulling&&T.setStateCullFaceType(f._mirroredCameraPosition?u.cullBackFaces:!u.cullBackFaces),(t.defines.PREPASS_VELOCITY_INDEX!==void 0||t.defines.PREPASS_VELOCITY_LINEAR_INDEX!==void 0)&&(t.previousWorldMatrices[s.uniqueId]||(t.previousWorldMatrices[s.uniqueId]=a.clone()),t.previousViewProjection||(t.previousViewProjection=f.getTransformMatrix().clone(),t.currentViewProjection=f.getTransformMatrix().clone()),t.currentViewProjection.updateFlag!==f.getTransformMatrix().updateFlag?(t.lastUpdateFrameId=T.frameId,t.previousViewProjection.copyFrom(t.currentViewProjection),t.currentViewProjection.copyFrom(f.getTransformMatrix())):t.lastUpdateFrameId!==T.frameId&&(t.lastUpdateFrameId=T.frameId,t.previousViewProjection.copyFrom(t.currentViewProjection)),i.setMatrix("previousWorld",t.previousWorldMatrices[s.uniqueId]),i.setMatrix("previousViewProjection",t.previousViewProjection),t.previousWorldMatrices[s.uniqueId]=a.clone(),s.useBones&&s.computeBonesUsingShaders&&s.skeleton)){const o=s.skeleton;if(!o.isUsingTextureForMatrices||i.getUniformIndex("boneTextureWidth")===-1){const _=o.getTransformMatrices(s);_&&(t.previousBones[s.uniqueId]||(t.previousBones[s.uniqueId]=_.slice()),i.setMatrices("mPreviousBones",t.previousBones[s.uniqueId]),t.previousBones[s.uniqueId].set(_))}}}}g.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}];g._Configurations={};const G={effect:null,subMesh:null};class De extends K{constructor(e){super(e),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.USE_VERTEX_PULLING=!1,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(e){const i=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const s of i)this[s]=s===e}}class r extends be{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(e){this._attachImageProcessingConfiguration(e),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(e){e!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),e?this._imageProcessingConfiguration=e:this._imageProcessingConfiguration=this.getScene().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add(()=>{this._markAllSubMeshesAsImageProcessingDirty()})))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(e){this.imageProcessingConfiguration.colorCurvesEnabled=e}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(e){this.imageProcessingConfiguration.colorGradingEnabled=e}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(e){this._imageProcessingConfiguration.toneMappingEnabled=e}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(e){this._imageProcessingConfiguration.exposure=e}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(e){this._imageProcessingConfiguration.contrast=e}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(e){this._imageProcessingConfiguration.colorGradingTexture=e}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(e){this._imageProcessingConfiguration.colorCurves=e}get canRenderToMRT(){return!0}constructor(e,i,s=!1){super(e,i,void 0,s||r.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new C(0,0,0),this.diffuseColor=new C(1,1,1),this.specularColor=new C(1,1,1),this.emissiveColor=new C(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new te(16),this._globalAmbientColor=new C(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new L(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new z,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),r.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),r.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return r.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget||r.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget?!0:this._cacheHasRenderTargetTextures}getClassName(){return"StandardMaterial"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:this._disableAlphaBlending?!1:this.alpha<1||this._opacityTexture!=null||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(this._transparencyMode==null||this._transparencyMode===F.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return this._diffuseTexture!=null&&this._diffuseTexture.hasAlpha&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==F.MATERIAL_OPAQUE}_hasAlphaChannel(){return this._diffuseTexture!=null&&this._diffuseTexture.hasAlpha||this._opacityTexture!=null}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(e,i,s=!1){this._uniformBufferLayoutBuilt||this.buildUniformLayout();const a=i._drawWrapper;if(a.effect&&this.isFrozen&&a._wasPreviouslyReady&&a._wasPreviouslyUsingInstances===s)return!0;i.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),i.materialDefines=new De(this._eventInfo.defineNames));const u=this.getScene(),t=i.materialDefines;if(this._isReadyForSubMesh(i))return!0;const f=u.getEngine();t._needNormals=ie(u,e,t,!0,this._maxSimultaneousLights,this._disableLighting),se(u,t);const T=this.needAlphaBlendingForMesh(e)&&this.getScene().useOrderIndependentTransparency;if(re(u,t,this.canRenderToMRT&&!T),ae(u,t,T),g.PrepareDefines(f.currentRenderPassId,e,t),t._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,t._needUVs=!1;for(let _=1;_<=6;++_)t["MAINUV"+_]=!1;if(u.texturesEnabled){if(t.DIFFUSEDIRECTUV=0,t.BUMPDIRECTUV=0,t.AMBIENTDIRECTUV=0,t.OPACITYDIRECTUV=0,t.EMISSIVEDIRECTUV=0,t.SPECULARDIRECTUV=0,t.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&r.DiffuseTextureEnabled)if(this._diffuseTexture.isReadyOrNotBlocking())R(this._diffuseTexture,t,"DIFFUSE");else return!1;else t.DIFFUSE=!1;if(this._ambientTexture&&r.AmbientTextureEnabled)if(this._ambientTexture.isReadyOrNotBlocking())R(this._ambientTexture,t,"AMBIENT");else return!1;else t.AMBIENT=!1;if(this._opacityTexture&&r.OpacityTextureEnabled)if(this._opacityTexture.isReadyOrNotBlocking())R(this._opacityTexture,t,"OPACITY"),t.OPACITYRGB=this._opacityTexture.getAlphaFromRGB;else return!1;else t.OPACITY=!1;if(this._reflectionTexture&&r.ReflectionTextureEnabled)if(this._reflectionTexture.isReadyOrNotBlocking()){switch(t._needNormals=!0,t.REFLECTION=!0,t.ROUGHNESS=this._roughness>0,t.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,t.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===P.INVCUBIC_MODE,t.REFLECTIONMAP_3D=this._reflectionTexture.isCube,t.REFLECTIONMAP_OPPOSITEZ=t.REFLECTIONMAP_3D&&this.getScene().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,t.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case P.EXPLICIT_MODE:t.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case P.PLANAR_MODE:t.setReflectionMode("REFLECTIONMAP_PLANAR");break;case P.PROJECTION_MODE:t.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case P.SKYBOX_MODE:t.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case P.SPHERICAL_MODE:t.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case P.EQUIRECTANGULAR_MODE:t.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case P.FIXED_EQUIRECTANGULAR_MODE:t.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case P.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:t.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case P.CUBIC_MODE:case P.INVCUBIC_MODE:default:t.setReflectionMode("REFLECTIONMAP_CUBIC");break}t.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else return!1;else t.REFLECTION=!1,t.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&r.EmissiveTextureEnabled)if(this._emissiveTexture.isReadyOrNotBlocking())R(this._emissiveTexture,t,"EMISSIVE");else return!1;else t.EMISSIVE=!1;if(this._lightmapTexture&&r.LightmapTextureEnabled)if(this._lightmapTexture.isReadyOrNotBlocking())R(this._lightmapTexture,t,"LIGHTMAP"),t.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,t.RGBDLIGHTMAP=this._lightmapTexture.isRGBD;else return!1;else t.LIGHTMAP=!1;if(this._specularTexture&&r.SpecularTextureEnabled)if(this._specularTexture.isReadyOrNotBlocking())R(this._specularTexture,t,"SPECULAR"),t.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha;else return!1;else t.SPECULAR=!1;if(u.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&r.BumpTextureEnabled){if(this._bumpTexture.isReady())R(this._bumpTexture,t,"BUMP"),t.PARALLAX=this._useParallax,t.PARALLAX_RHS=u.useRightHandedSystem,t.PARALLAXOCCLUSION=this._useParallaxOcclusion;else return!1;t.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else t.BUMP=!1,t.PARALLAX=!1,t.PARALLAX_RHS=!1,t.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&r.RefractionTextureEnabled)if(this._refractionTexture.isReadyOrNotBlocking())t._needUVs=!0,t.REFRACTION=!0,t.REFRACTIONMAP_3D=this._refractionTexture.isCube,t.RGBDREFRACTION=this._refractionTexture.isRGBD,t.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize;else return!1;else t.REFRACTION=!1;t.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else t.DIFFUSE=!1,t.AMBIENT=!1,t.OPACITY=!1,t.REFLECTION=!1,t.EMISSIVE=!1,t.LIGHTMAP=!1,t.BUMP=!1,t.REFRACTION=!1;t.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),t.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,t.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,t.SPECULAROVERALPHA=this._useSpecularOverAlpha,t.PREMULTIPLYALPHA=this.alphaMode===7||this.alphaMode===8,t.ALPHATEST_AFTERALLALPHACOMPUTATIONS=this.transparencyMode!==null,t.ALPHABLEND=this.transparencyMode===null||this.needAlphaBlendingForMesh(e)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=t,this._eventInfo.subMesh=i,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(t._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(t),t.IS_REFLECTION_LINEAR=this.reflectionTexture!=null&&!this.reflectionTexture.gammaSpace,t.IS_REFRACTION_LINEAR=this.refractionTexture!=null&&!this.refractionTexture.gammaSpace}if(t._areFresnelDirty&&(r.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(t.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,t.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,t.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,t.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,t.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,t.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,t._needNormals=!0,t.FRESNEL=!0):t.FRESNEL=!1),t.AREALIGHTUSED||t.CLUSTLIGHT_BATCH){for(let _=0;_<e.lightSources.length;_++)if(!e.lightSources[_]._isReady())return!1}ne(e,u,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(e),t,this._applyDecalMapAfterDetailMap,this._useVertexPulling,i.getRenderingMesh(),this._setVertexOutputInvariant),oe(u,f,this,t,s,null,i.getRenderingMesh().hasThinInstances),this._eventInfo.defines=t,this._eventInfo.mesh=e,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),le(e,t,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let o=!1;if(t.isDirty){const _=t._areLightsDisposed;t.markAsProcessed();const d=new ue;t.REFLECTION&&d.addFallback(0,"REFLECTION"),t.SPECULAR&&d.addFallback(0,"SPECULAR"),t.BUMP&&d.addFallback(0,"BUMP"),t.PARALLAX&&d.addFallback(1,"PARALLAX"),t.PARALLAX_RHS&&d.addFallback(1,"PARALLAX_RHS"),t.PARALLAXOCCLUSION&&d.addFallback(0,"PARALLAXOCCLUSION"),t.SPECULAROVERALPHA&&d.addFallback(0,"SPECULAROVERALPHA"),t.FOG&&d.addFallback(1,"FOG"),t.POINTSIZE&&d.addFallback(0,"POINTSIZE"),t.LOGARITHMICDEPTH&&d.addFallback(0,"LOGARITHMICDEPTH"),fe(t,d,this._maxSimultaneousLights),t.SPECULARTERM&&d.addFallback(0,"SPECULARTERM"),t.DIFFUSEFRESNEL&&d.addFallback(1,"DIFFUSEFRESNEL"),t.OPACITYFRESNEL&&d.addFallback(2,"OPACITYFRESNEL"),t.REFLECTIONFRESNEL&&d.addFallback(3,"REFLECTIONFRESNEL"),t.EMISSIVEFRESNEL&&d.addFallback(4,"EMISSIVEFRESNEL"),t.FRESNEL&&d.addFallback(4,"FRESNEL"),t.MULTIVIEW&&d.addFallback(0,"MULTIVIEW");const p=[k.PositionKind];t.NORMAL&&p.push(k.NormalKind),t.TANGENT&&p.push(k.TangentKind);for(let y=1;y<=6;++y)t["UV"+y]&&p.push(`uv${y===1?"":y}`);t.VERTEXCOLOR&&p.push(k.ColorKind),he(p,e,t,d),ce(p,t),_e(p,e,t),de(p,e,t);let x="default";const A=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],D=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],U=["Material","Scene","Mesh"],w={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:t.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=d,this._eventInfo.fallbackRank=0,this._eventInfo.defines=t,this._eventInfo.uniforms=A,this._eventInfo.attributes=p,this._eventInfo.samplers=D,this._eventInfo.uniformBuffersNames=U,this._eventInfo.customCode=void 0,this._eventInfo.mesh=e,this._eventInfo.indexParameters=w,this._callbackPluginEventGeneric(128,this._eventInfo),g.AddUniformsAndSamplers(A,D),z.AddUniforms(A),H&&(H.PrepareUniforms(A,t),H.PrepareSamplers(D,t)),Ee({uniformsNames:A,uniformBuffersNames:U,samplers:D,defines:t,maxSimultaneousLights:this._maxSimultaneousLights}),Te(A);const X={};this.customShaderNameResolve&&(x=this.customShaderNameResolve(x,A,U,D,t,p,X));const J=t.toString(),W=i.effect;let M=u.getEngine().createEffect(x,{attributes:p,uniformsNames:A,uniformBuffersNames:U,samplers:D,defines:J,fallbacks:d,onCompiled:this.onCompiled,onError:this.onError,indexParameters:w,processFinalCode:X.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:t.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{this._shaderLanguage===1?await Promise.all([B(()=>import("./default.vertex.De_n05Z5.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11])),B(()=>import("./default.fragment.DsRsWBld.js"),__vite__mapDeps([12,1,2,3,4,5,6,7,13,14]))]):await Promise.all([B(()=>import("./default.vertex.C0eofYFX.js"),__vite__mapDeps([15,1,2,3,4,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36])),B(()=>import("./default.fragment.D09vxHk1.js"),__vite__mapDeps([37,1,2,3,4,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38]))]),this._shadersLoaded=!0}},f);if(this._eventInfo.customCode=void 0,M)if(this._onEffectCreatedObservable&&(G.effect=M,G.subMesh=i,this._onEffectCreatedObservable.notifyObservers(G)),this.allowShaderHotSwapping&&W&&!M.isReady()){if(M=W,t.markAsUnprocessed(),o=this.isFrozen,_)return t._areLightsDisposed=!0,!1}else u.resetCachedMaterial(),i.setEffect(M,t,this._materialContext)}return!i.effect||!i.effect.isReady()?!1:(t._renderId=u.getRenderId(),a._wasPreviouslyReady=!o,a._wasPreviouslyUsingInstances=s,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const e=this._uniformBuffer;e.addUniform("diffuseLeftColor",4),e.addUniform("diffuseRightColor",4),e.addUniform("opacityParts",4),e.addUniform("reflectionLeftColor",4),e.addUniform("reflectionRightColor",4),e.addUniform("refractionLeftColor",4),e.addUniform("refractionRightColor",4),e.addUniform("emissiveLeftColor",4),e.addUniform("emissiveRightColor",4),e.addUniform("vDiffuseInfos",2),e.addUniform("vAmbientInfos",2),e.addUniform("vOpacityInfos",2),e.addUniform("vReflectionInfos",2),e.addUniform("vReflectionPosition",3),e.addUniform("vReflectionSize",3),e.addUniform("vEmissiveInfos",2),e.addUniform("vLightmapInfos",2),e.addUniform("vSpecularInfos",2),e.addUniform("vBumpInfos",3),e.addUniform("diffuseMatrix",16),e.addUniform("ambientMatrix",16),e.addUniform("opacityMatrix",16),e.addUniform("reflectionMatrix",16),e.addUniform("emissiveMatrix",16),e.addUniform("lightmapMatrix",16),e.addUniform("specularMatrix",16),e.addUniform("bumpMatrix",16),e.addUniform("vTangentSpaceParams",2),e.addUniform("pointSize",1),e.addUniform("alphaCutOff",1),e.addUniform("refractionMatrix",16),e.addUniform("vRefractionInfos",4),e.addUniform("vRefractionPosition",3),e.addUniform("vRefractionSize",3),e.addUniform("vSpecularColor",4),e.addUniform("vEmissiveColor",3),e.addUniform("vDiffuseColor",4),e.addUniform("vAmbientColor",3),e.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(e,i,s){const a=this.getScene(),u=s.materialDefines;if(!u)return;const t=s.effect;if(!t)return;this._activeEffect=t,i.getMeshUniformBuffer().bindToEffect(t,"Mesh"),i.transferToEffect(e),this._uniformBuffer.bindToEffect(t,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,a,i,e,this.isFrozen),g.Bind(a.getEngine().currentRenderPassId,this._activeEffect,i,e,this);const f=a.activeCamera;f?this._uniformBuffer.updateFloat4("cameraInfo",f.minZ,f.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=s,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),u.OBJECTSPACE_NORMALMAP&&(e.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const T=this._mustRebind(a,t,s,i.visibility);pe(i,t);const o=this._uniformBuffer;if(T){if(this.bindViewProjection(t),!o.useUbo||!this.isFrozen||!o.isSync||s._drawWrapper._forceRebindOnNextCall){if(r.FresnelEnabled&&u.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(o.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),o.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&o.updateColor4("opacityParts",new C(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(o.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),o.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(o.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),o.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(o.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),o.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),a.texturesEnabled){if(this._diffuseTexture&&r.DiffuseTextureEnabled&&(o.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),I(this._diffuseTexture,o,"diffuse")),this._ambientTexture&&r.AmbientTextureEnabled&&(o.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),I(this._ambientTexture,o,"ambient")),this._opacityTexture&&r.OpacityTextureEnabled&&(o.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),I(this._opacityTexture,o,"opacity")),this._hasAlphaChannel()&&o.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&r.ReflectionTextureEnabled){if(o.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),o.updateMatrix("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const _=this._reflectionTexture;o.updateVector3("vReflectionPosition",_.boundingBoxPosition),o.updateVector3("vReflectionSize",_.boundingBoxSize)}}else o.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&r.EmissiveTextureEnabled&&(o.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),I(this._emissiveTexture,o,"emissive")),this._lightmapTexture&&r.LightmapTextureEnabled&&(o.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),I(this._lightmapTexture,o,"lightmap")),this._specularTexture&&r.SpecularTextureEnabled&&(o.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),I(this._specularTexture,o,"specular")),this._bumpTexture&&a.getEngine().getCaps().standardDerivatives&&r.BumpTextureEnabled&&(o.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),I(this._bumpTexture,o,"bump"),a._mirroredCameraPosition?o.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):o.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&r.RefractionTextureEnabled){let _=1;if(this._refractionTexture.isCube||(o.updateMatrix("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(_=this._refractionTexture.depth)),o.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,_,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const d=this._refractionTexture;o.updateVector3("vRefractionPosition",d.boundingBoxPosition),o.updateVector3("vRefractionSize",d.boundingBoxSize)}}}this.pointsCloud&&o.updateFloat("pointSize",this.pointSize),o.updateColor4("vSpecularColor",this.specularColor,this.specularPower),o.updateColor3("vEmissiveColor",r.EmissiveTextureEnabled?this.emissiveColor:C.BlackReadOnly),o.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),a.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),o.updateColor3("vAmbientColor",this._globalAmbientColor)}a.texturesEnabled&&(this._diffuseTexture&&r.DiffuseTextureEnabled&&t.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&r.AmbientTextureEnabled&&t.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&r.OpacityTextureEnabled&&t.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&r.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?t.setTexture("reflectionCubeSampler",this._reflectionTexture):t.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&r.EmissiveTextureEnabled&&t.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&r.LightmapTextureEnabled&&t.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&r.SpecularTextureEnabled&&t.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&a.getEngine().getCaps().standardDerivatives&&r.BumpTextureEnabled&&t.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&r.RefractionTextureEnabled&&(this._refractionTexture.isCube?t.setTexture("refractionCubeSampler",this._refractionTexture):t.setTexture("refraction2DSampler",this._refractionTexture))),this.getScene().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(i)&&this.getScene().depthPeelingRenderer.bind(t),this._eventInfo.subMesh=s,this._callbackPluginEventBindForSubMesh(this._eventInfo),me(t,this,a),this.bindEyePosition(t)}else a.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);(T||!this.isFrozen)&&(a.lightsEnabled&&!this._disableLighting&&ge(a,i,t,u,this._maxSimultaneousLights),(a.fogEnabled&&i.applyFog&&a.fogMode!==q.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||i.receiveShadows||u.PREPASS||u.CLUSTLIGHT_BATCH)&&this.bindView(t),Ae(a,i,t),u.NUM_MORPH_INFLUENCERS&&xe(i,t),u.BAKED_VERTEX_ANIMATION_TEXTURE&&i.bakedVertexAnimationManager?.bind(t,u.INSTANCES),this.useLogarithmicDepth&&Pe(u,t,a),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)),this._afterBind(i,this._activeEffect,s),o.update()}getAnimatables(){const e=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&e.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&e.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&e.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&e.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&e.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&e.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&e.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&e.push(this._refractionTexture),e}getActiveTextures(){const e=super.getActiveTextures();return this._diffuseTexture&&e.push(this._diffuseTexture),this._ambientTexture&&e.push(this._ambientTexture),this._opacityTexture&&e.push(this._opacityTexture),this._reflectionTexture&&e.push(this._reflectionTexture),this._emissiveTexture&&e.push(this._emissiveTexture),this._specularTexture&&e.push(this._specularTexture),this._bumpTexture&&e.push(this._bumpTexture),this._lightmapTexture&&e.push(this._lightmapTexture),this._refractionTexture&&e.push(this._refractionTexture),e}hasTexture(e){return!!(super.hasTexture(e)||this._diffuseTexture===e||this._ambientTexture===e||this._opacityTexture===e||this._reflectionTexture===e||this._emissiveTexture===e||this._specularTexture===e||this._bumpTexture===e||this._lightmapTexture===e||this._refractionTexture===e)}dispose(e,i){i&&(this._diffuseTexture?.dispose(),this._ambientTexture?.dispose(),this._opacityTexture?.dispose(),this._reflectionTexture?.dispose(),this._emissiveTexture?.dispose(),this._specularTexture?.dispose(),this._bumpTexture?.dispose(),this._lightmapTexture?.dispose(),this._refractionTexture?.dispose()),this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(e,i)}clone(e,i=!0,s=""){const a=O.Clone(()=>new r(e,this.getScene()),this,{cloneTexturesOnlyOnce:i});return a.name=e,a.id=e,this.stencil.copyTo(a.stencil),this._clonePlugins(a,s),a}static Parse(e,i,s){const a=O.Parse(()=>new r(e.name,i),e,i,s);return e.stencil&&a.stencil.parse(e.stencil,i,s),F._ParsePlugins(e,a,i,s),a}static get DiffuseTextureEnabled(){return l.DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){l.DiffuseTextureEnabled=e}static get DetailTextureEnabled(){return l.DetailTextureEnabled}static set DetailTextureEnabled(e){l.DetailTextureEnabled=e}static get AmbientTextureEnabled(){return l.AmbientTextureEnabled}static set AmbientTextureEnabled(e){l.AmbientTextureEnabled=e}static get OpacityTextureEnabled(){return l.OpacityTextureEnabled}static set OpacityTextureEnabled(e){l.OpacityTextureEnabled=e}static get ReflectionTextureEnabled(){return l.ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){l.ReflectionTextureEnabled=e}static get EmissiveTextureEnabled(){return l.EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){l.EmissiveTextureEnabled=e}static get SpecularTextureEnabled(){return l.SpecularTextureEnabled}static set SpecularTextureEnabled(e){l.SpecularTextureEnabled=e}static get BumpTextureEnabled(){return l.BumpTextureEnabled}static set BumpTextureEnabled(e){l.BumpTextureEnabled=e}static get LightmapTextureEnabled(){return l.LightmapTextureEnabled}static set LightmapTextureEnabled(e){l.LightmapTextureEnabled=e}static get RefractionTextureEnabled(){return l.RefractionTextureEnabled}static set RefractionTextureEnabled(e){l.RefractionTextureEnabled=e}static get ColorGradingTextureEnabled(){return l.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){l.ColorGradingTextureEnabled=e}static get FresnelEnabled(){return l.FresnelEnabled}static set FresnelEnabled(e){l.FresnelEnabled=e}}r.ForceGLSL=!1;n([b("diffuseTexture")],r.prototype,"_diffuseTexture",void 0);n([h("_markAllSubMeshesAsTexturesAndMiscDirty")],r.prototype,"diffuseTexture",void 0);n([b("ambientTexture")],r.prototype,"_ambientTexture",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"ambientTexture",void 0);n([b("opacityTexture")],r.prototype,"_opacityTexture",void 0);n([h("_markAllSubMeshesAsTexturesAndMiscDirty")],r.prototype,"opacityTexture",void 0);n([b("reflectionTexture")],r.prototype,"_reflectionTexture",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"reflectionTexture",void 0);n([b("emissiveTexture")],r.prototype,"_emissiveTexture",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"emissiveTexture",void 0);n([b("specularTexture")],r.prototype,"_specularTexture",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"specularTexture",void 0);n([b("bumpTexture")],r.prototype,"_bumpTexture",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"bumpTexture",void 0);n([b("lightmapTexture")],r.prototype,"_lightmapTexture",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"lightmapTexture",void 0);n([b("refractionTexture")],r.prototype,"_refractionTexture",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"refractionTexture",void 0);n([V("ambient")],r.prototype,"ambientColor",void 0);n([V("diffuse")],r.prototype,"diffuseColor",void 0);n([V("specular")],r.prototype,"specularColor",void 0);n([V("emissive")],r.prototype,"emissiveColor",void 0);n([c()],r.prototype,"specularPower",void 0);n([c("useAlphaFromDiffuseTexture")],r.prototype,"_useAlphaFromDiffuseTexture",void 0);n([h("_markAllSubMeshesAsTexturesAndMiscDirty")],r.prototype,"useAlphaFromDiffuseTexture",void 0);n([c("useEmissiveAsIllumination")],r.prototype,"_useEmissiveAsIllumination",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"useEmissiveAsIllumination",void 0);n([c("linkEmissiveWithDiffuse")],r.prototype,"_linkEmissiveWithDiffuse",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"linkEmissiveWithDiffuse",void 0);n([c("useSpecularOverAlpha")],r.prototype,"_useSpecularOverAlpha",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"useSpecularOverAlpha",void 0);n([c("useReflectionOverAlpha")],r.prototype,"_useReflectionOverAlpha",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"useReflectionOverAlpha",void 0);n([c("disableLighting")],r.prototype,"_disableLighting",void 0);n([h("_markAllSubMeshesAsLightsDirty")],r.prototype,"disableLighting",void 0);n([c("useObjectSpaceNormalMap")],r.prototype,"_useObjectSpaceNormalMap",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"useObjectSpaceNormalMap",void 0);n([c("useParallax")],r.prototype,"_useParallax",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"useParallax",void 0);n([c("useParallaxOcclusion")],r.prototype,"_useParallaxOcclusion",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"useParallaxOcclusion",void 0);n([c()],r.prototype,"parallaxScaleBias",void 0);n([c("roughness")],r.prototype,"_roughness",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"roughness",void 0);n([c()],r.prototype,"indexOfRefraction",void 0);n([c()],r.prototype,"invertRefractionY",void 0);n([c()],r.prototype,"alphaCutOff",void 0);n([c("useLightmapAsShadowmap")],r.prototype,"_useLightmapAsShadowmap",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"useLightmapAsShadowmap",void 0);n([N("diffuseFresnelParameters")],r.prototype,"_diffuseFresnelParameters",void 0);n([h("_markAllSubMeshesAsFresnelDirty")],r.prototype,"diffuseFresnelParameters",void 0);n([N("opacityFresnelParameters")],r.prototype,"_opacityFresnelParameters",void 0);n([h("_markAllSubMeshesAsFresnelAndMiscDirty")],r.prototype,"opacityFresnelParameters",void 0);n([N("reflectionFresnelParameters")],r.prototype,"_reflectionFresnelParameters",void 0);n([h("_markAllSubMeshesAsFresnelDirty")],r.prototype,"reflectionFresnelParameters",void 0);n([N("refractionFresnelParameters")],r.prototype,"_refractionFresnelParameters",void 0);n([h("_markAllSubMeshesAsFresnelDirty")],r.prototype,"refractionFresnelParameters",void 0);n([N("emissiveFresnelParameters")],r.prototype,"_emissiveFresnelParameters",void 0);n([h("_markAllSubMeshesAsFresnelDirty")],r.prototype,"emissiveFresnelParameters",void 0);n([c("useReflectionFresnelFromSpecular")],r.prototype,"_useReflectionFresnelFromSpecular",void 0);n([h("_markAllSubMeshesAsFresnelDirty")],r.prototype,"useReflectionFresnelFromSpecular",void 0);n([c("useGlossinessFromSpecularMapAlpha")],r.prototype,"_useGlossinessFromSpecularMapAlpha",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"useGlossinessFromSpecularMapAlpha",void 0);n([c("maxSimultaneousLights")],r.prototype,"_maxSimultaneousLights",void 0);n([h("_markAllSubMeshesAsLightsDirty")],r.prototype,"maxSimultaneousLights",void 0);n([c("invertNormalMapX")],r.prototype,"_invertNormalMapX",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"invertNormalMapX",void 0);n([c("invertNormalMapY")],r.prototype,"_invertNormalMapY",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"invertNormalMapY",void 0);n([c("twoSidedLighting")],r.prototype,"_twoSidedLighting",void 0);n([h("_markAllSubMeshesAsTexturesDirty")],r.prototype,"twoSidedLighting",void 0);n([c("applyDecalMapAfterDetailMap")],r.prototype,"_applyDecalMapAfterDetailMap",void 0);n([h("_markAllSubMeshesAsMiscDirty")],r.prototype,"applyDecalMapAfterDetailMap",void 0);$("BABYLON.StandardMaterial",r);q.DefaultMaterialFactory=m=>new r("default material",m);export{r as StandardMaterial,De as StandardMaterialDefines};
