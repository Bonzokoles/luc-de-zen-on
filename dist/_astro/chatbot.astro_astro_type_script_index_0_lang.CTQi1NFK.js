if(typeof MessageChannel>"u"){class s{constructor(){this.onmessage=null}postMessage(o){const a={data:o};(typeof queueMicrotask=="function"?queueMicrotask:n=>setTimeout(n,0))(()=>this.onmessage&&this.onmessage(a))}start(){}close(){}}class e{constructor(){this.port1=new s,this.port2=new s;const o=(a,n)=>{const c={data:n};(typeof queueMicrotask=="function"?queueMicrotask:g=>setTimeout(g,0))(()=>a.onmessage&&a.onmessage(c))};this.port1.postMessage=a=>o(this.port2,a),this.port2.postMessage=a=>o(this.port1,a)}}globalThis.MessageChannel=e}let i=JSON.parse(localStorage.getItem("chatHistory")||"[]"),d=null;async function h(){console.log("🚀 sendMessage() wywołana");const s=document.getElementById("messageInput"),e=s.value.trim();if(console.log("📝 Wiadomość do wysłania:",e),!e){console.log("❌ Pusta wiadomość - przerywanie");return}const t=document.getElementById("sendButton"),o=document.getElementById("typingIndicator");console.log("➕ Dodawanie wiadomości użytkownika do czatu"),u(e,"user"),s.value="",t.disabled=!0,t.textContent="Wysyłanie...",o.classList.remove("hidden"),console.log("🔒 Przycisk zablokowany, rozpoczynanie wysyłania");try{const a=document.getElementById("aiModel").value,n=parseFloat(document.getElementById("temperature").value),c=document.getElementById("language").value;console.log("⚙️ Parametry:",{aiModel:a,temperature:n,language:c}),console.log("📤 Wysyłanie żądania do /api/chat:",{prompt:e,model:a,temperature:n,language:c});const r=await fetch("/api/chat",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:e})});if(console.log("📥 Odpowiedź otrzymana:",r.status,r.statusText),!r.ok)throw new Error(`HTTP error! status: ${r.status}`);const l=await r.json();if(console.log("📊 Dane z API:",l),l.answer||l.response){const m=l.answer||l.response;console.log("✅ Dodawanie odpowiedzi AI:",m),u(m,"assistant"),w(e,m)}else throw new Error(l.error||"Błąd odpowiedzi AI")}catch(a){console.error("❌ Chat error:",a),u("Przepraszam, wystąpił błąd podczas przetwarzania Twojej wiadomości. Spróbuj ponownie. Błąd: "+a.message,"assistant",!0)}finally{console.log("🔓 Odblokowanie przycisku"),t.disabled=!1,t.textContent="Wyślij",o.classList.add("hidden")}}async function p(){console.log("🧪 Testowanie API...");try{const s=await fetch("/api/chat",{method:"GET"});console.log("📡 GET test response:",s.status,s.statusText);const e=await s.json();console.log("📊 GET test data:",e);const t=await fetch("/api/chat",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:"test message"})});console.log("📡 POST test response:",t.status,t.statusText);const o=await t.json();console.log("📊 POST test data:",o)}catch(s){console.error("❌ API test error:",s)}}function u(s,e,t=!1){const o=document.getElementById("chatMessages"),a=document.createElement("div");a.className=`message ${e}-message`;const n=new Date().toLocaleTimeString("pl-PL",{hour:"2-digit",minute:"2-digit"}),c=e==="user"?"bg-blue-600/20 border-blue-400/30":t?"bg-red-600/20 border-red-400/30":"bg-cyan-600/20 border-cyan-400/30",g=e==="user"?"text-blue-400":t?"text-red-400":"text-cyan-400",r=e==="user"?"bg-blue-400":t?"bg-red-400":"bg-cyan-400";a.innerHTML=`
      <div class="message-content ${c} rounded-lg p-3">
        <div class="message-header flex items-center gap-2 mb-2">
          <span class="w-2 h-2 ${r} rounded-full"></span>
          <span class="${g} text-sm font-medium">${e==="user"?"Ty":"AI Assistant"}</span>
          <span class="text-gray-400 text-xs ml-auto">${n}</span>
        </div>
        <div class="message-text text-primary-foreground whitespace-pre-wrap">${s}</div>
      </div>
    `,o.appendChild(a),o.scrollTop=o.scrollHeight}function w(s,e){const t={id:d||Date.now(),timestamp:new Date().toISOString(),messages:[{type:"user",content:s},{type:"assistant",content:e}]};if(!d)d=t.id,i.unshift(t);else{const o=i.find(a=>a.id===d);o&&o.messages.push(...t.messages)}i.length>10&&(i=i.slice(0,10)),localStorage.setItem("chatHistory",JSON.stringify(i)),y()}function y(){const s=document.getElementById("chatHistoryList");s.innerHTML="",i.forEach(e=>{const t=document.createElement("div");t.className="history-item border border-edge rounded-lg p-3 cursor-pointer hover:border-cyan-400 transition-colors",t.style.background="rgba(0, 0, 0, 0.5)";const o=e.messages.find(n=>n.type==="user")?.content||"Rozmowa",a=new Date(e.timestamp).toLocaleDateString("pl-PL");t.innerHTML=`
        <div class="flex justify-between items-start">
          <div class="flex-1">
            <p class="text-primary-foreground text-sm font-medium truncate">${o}</p>
            <p class="text-gray-400 text-xs">${a} • ${e.messages.length} wiadomości</p>
          </div>
          <button onclick="deleteChat(${e.id})" class="text-red-400 hover:text-red-300 text-xs ml-2">✕</button>
        </div>
      `,t.onclick=n=>{n.target.tagName!=="BUTTON"&&f(e.id)},s.appendChild(t)})}function f(s){const e=i.find(o=>o.id===s);if(!e)return;const t=document.getElementById("chatMessages");t.innerHTML="",e.messages.forEach(o=>{u(o.content,o.type)}),d=s}document.addEventListener("DOMContentLoaded",()=>{console.log("🚀 Chatbot DOM załadowany"),y(),p();const s=localStorage.getItem("quickChatPrompt");s&&(console.log("💾 Załadowano szybki prompt:",s),document.getElementById("messageInput").value=s,localStorage.removeItem("quickChatPrompt")),window.testAPI=p,window.sendMessage=h,console.log("✅ Funkcje chatbot dostępne globalnie")});
