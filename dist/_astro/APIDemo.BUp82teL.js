import{p as V,i as X,f as C,s as l,c as o,a as h,t as P,h as x,j as v,k as Z,g as i,d as T,n as r,u as S,v as c,w as u,x as D}from"./ClientRouter.astro_astro_type_script_index_0_lang.DtH6aRN_.js";/* empty css                          */import"./react.BKEw5ZbO.js";if(typeof MessageChannel>"u"){class d{constructor(){this.onmessage=null}postMessage(a){const s={data:a};(typeof queueMicrotask=="function"?queueMicrotask:p=>setTimeout(p,0))(()=>this.onmessage&&this.onmessage(s))}start(){}close(){}}class f{constructor(){this.port1=new d,this.port2=new d;const a=(s,p)=>{const j={data:p};(typeof queueMicrotask=="function"?queueMicrotask:w=>setTimeout(w,0))(()=>s.onmessage&&s.onmessage(j))};this.port1.postMessage=s=>a(this.port2,s),this.port2.postMessage=s=>a(this.port1,s)}}globalThis.MessageChannel=f}const ee="https://luc-de-zen-on.stolarnia-ams.workers.dev";async function se(d,f={}){try{const n=`${ee}${d}`;console.log(`🌐 Wywołanie Worker API: ${n}`);const a=await fetch(n,{headers:{"Content-Type":"application/json",...f.headers},...f});if(!a.ok){const p=await a.text();throw console.error(`❌ Worker API błąd: ${a.status} - ${p}`),new Error(`Worker API error: ${a.status} - ${p}`)}const s=await a.json();return console.log("✅ Worker API sukces:",s),s}catch(n){throw console.error("🚨 Błąd Worker API:",n),n}}async function W(d,f){return se(d,{method:"POST",body:JSON.stringify(f)})}var te=C('<div class="response-box svelte-ftk53j"><strong class="svelte-ftk53j">Odpowiedź:</strong> <p class="svelte-ftk53j"> </p></div>'),ae=C('<div class="response-box svelte-ftk53j"><strong class="svelte-ftk53j">Status:</strong> <p class="svelte-ftk53j"> </p></div>'),oe=C(`<div class="api-demo svelte-ftk53j"><h3 class="svelte-ftk53j">🧪 API Demo - Cloudflare Workers</h3> <p class="demo-description svelte-ftk53j">Demonstracja działania naszych API endpointów w środowisku Cloudflare
    Workers</p> <div class="demo-grid svelte-ftk53j"><div class="demo-card svelte-ftk53j"><h4 class="svelte-ftk53j">💬 Chat API Test</h4> <button class="demo-btn svelte-ftk53j"><!></button> <!></div> <div class="demo-card svelte-ftk53j"><h4 class="svelte-ftk53j">🎨 Image Generator Test</h4> <button class="demo-btn svelte-ftk53j"><!></button> <!></div> <div class="demo-card svelte-ftk53j"><h4 class="svelte-ftk53j">📊 Data Analysis Test</h4> <button class="demo-btn svelte-ftk53j"><!></button> <div class="response-box svelte-ftk53j"><strong class="svelte-ftk53j">Info:</strong> <p class="svelte-ftk53j">Sprawdź konsolę przeglądarki (F12) aby zobaczyć wynik analizy</p></div></div></div> <div class="integration-info svelte-ftk53j"><h4 class="svelte-ftk53j">📋 Implementacja w kodzie:</h4> <pre class="code-example svelte-ftk53j"><code class="svelte-ftk53j"></code></pre></div> <div class="features-list svelte-ftk53j"><h4 class="svelte-ftk53j">✨ Funkcjonalności systemu:</h4> <ul class="svelte-ftk53j"><li class="svelte-ftk53j">🔄 Centralne API z obsługą CORS i błędów</li> <li class="svelte-ftk53j">🎯 Jednolite endpointy dla wszystkich Workers</li> <li class="svelte-ftk53j">🛡️ Walidacja danych i bezpieczne zapytania</li> <li class="svelte-ftk53j">📊 Monitoring i logowanie aktywności</li> <li class="svelte-ftk53j">⚡ Optymalizacja dla Cloudflare Edge</li> <li class="svelte-ftk53j">🔧 Łatwa integracja z Svelte/Astro</li></ul></div></div>`);function ie(d,f){V(f,!1);let n=T(""),a=T(""),s=T(!1);async function p(){c(s,!0);try{const e=await W("/api/chat",{message:"Napisz krótki wiersz o AI"});c(n,e.message||e.result||"Odpowiedź otrzymana")}catch(e){c(n,`Błąd: ${e.message}`)}finally{c(s,!1)}}async function j(){c(s,!0);try{const e=await W("/api/generate-image",{prompt:"Beautiful sunset over mountains"});c(a,e.result||"Obrazek wygenerowany pomyślnie")}catch(e){c(a,`Błąd: ${e.message}`)}finally{c(s,!1)}}async function w(){c(s,!0);try{const e=await W("/api/data-analyze",{data:[1,2,3,4,5],analysis:"basic_stats"});console.log("Analysis result:",e)}catch(e){console.error("Analysis error:",e)}finally{c(s,!1)}}X();var _=oe(),b=l(o(_),4),A=o(b),k=l(o(A),2),B=o(k);{var q=e=>{var t=u("⏳ Przetwarzanie...");v(e,t)},E=e=>{var t=u("🚀 Test Chat API");v(e,t)};h(B,e=>{i(s)?e(q):e(E,!1)})}r(k);var $=l(k,2);{var F=e=>{var t=te(),g=l(o(t),2),I=o(g,!0);r(g),r(t),P(()=>D(I,i(n))),v(e,t)};h($,e=>{i(n)&&e(F)})}r(A);var z=l(A,2),m=l(o(z),2),G=o(m);{var J=e=>{var t=u("⏳ Generowanie...");v(e,t)},N=e=>{var t=u("🎨 Test Image API");v(e,t)};h(G,e=>{i(s)?e(J):e(N,!1)})}r(m);var Y=l(m,2);{var K=e=>{var t=ae(),g=l(o(t),2),I=o(g,!0);r(g),r(t),P(()=>D(I,i(a))),v(e,t)};h(Y,e=>{i(a)&&e(K)})}r(z);var M=l(z,2),y=l(o(M),2),L=o(y);{var U=e=>{var t=u("⏳ Analizowanie...");v(e,t)},H=e=>{var t=u("📊 Test Analyze API");v(e,t)};h(L,e=>{i(s)?e(U):e(H,!1)})}r(y),S(2),r(M),r(b);var R=l(b,2),O=l(o(R),2),Q=o(O);Q.textContent=`// Import API functions
import { postToWorker } from '../cloudflareApi';

// Chat API usage
const chatResponse = await postToWorker('/api/chat', {
  message: 'Your message here'
});

// Image generation usage  
const imageResponse = await postToWorker('/api/generate-image', {
  prompt: 'Your image description'
});

// Data analysis usage
const analysisResponse = await postToWorker('/api/data-analyze', {
  data: yourDataArray,
  analysis: 'basic_stats'
});`,r(O),r(R),S(2),r(_),P(()=>{k.disabled=i(s),m.disabled=i(s),y.disabled=i(s)}),x("click",k,p),x("click",m,j),x("click",y,w),v(d,_),Z()}export{ie as default};
