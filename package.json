{
  "name": "luc-de-zen-on",
  "description": "Build a personal website, blog, or portfolio with Astro.",
  "private": true,
  "cloudflare": {
    "label": "Astro Framework Starter",
    "products": [
      "Workers"
    ],
    "categories": [],
    "icon_urls": [
      "https://imagedelivery.net/wSMYJvS3Xw-n339CbDyDIA/5ca0ca32-e897-4699-d4c1-6b680512f000/public"
    ],
    "preview_image_url": "https://imagedelivery.net/wSMYJvS3Xw-n339CbDyDIA/33bbbf02-eda2-4d3f-b244-c27a280f3900/public",
    "publish": true
  },
  "dependencies": {
    "@ai-sdk/openai": "^2.0.46",
    "@astrojs/check": "^0.9.4",
    "@astrojs/cloudflare": "^12.6.7",
    "@astrojs/mdx": "^4.3.4",
    "@astrojs/react": "^4.3.1",
    "@astrojs/rss": "^4.0.12",
    "@astrojs/sitemap": "^3.5.1",
    "@astrojs/svelte": "^7.1.0",
    "@astrojs/tailwind": "^6.0.2",
    "@babylonjs/core": "^8.26.2",
    "@chatscope/chat-ui-kit-react": "^2.1.1",
    "@chatscope/chat-ui-kit-styles": "^1.4.0",
    "@cloudflare/pages-plugin-sentry": "^1.1.4",
    "@google-cloud/bigquery": "^8.1.1",
    "@google-cloud/bigquery-analyticshub": "^2.3.0",
    "@google-cloud/logging": "^11.2.1",
    "@heroicons/react": "^2.2.0",
    "@iconify-json/feather": "^1.2.1",
    "@iconify-json/heroicons": "^1.2.2",
    "@iconify-json/lucide": "^1.2.66",
    "@iconify-json/ph": "^1.2.2",
    "@iconify-json/streamline": "^1.2.5",
    "@iconify-json/tabler": "^1.2.22",
    "@phosphor-icons/react": "^2.1.10",
    "@rollup/plugin-json": "^6.1.0",
    "@sentry/cloudflare": "^10.17.0",
    "@tabler/icons-react": "^3.34.1",
    "@tavily/core": "^0.5.12",
    "@types/react": "^18.3.11",
    "@types/react-dom": "^18.3.0",
    "@xenova/transformers": "^2.17.2",
    "ai": "^5.0.65",
    "astro": "^5.14.6",
    "better-sqlite3": "^12.4.1",
    "clsx": "^2.1.1",
    "feather-icons": "^4.29.2",
    "googleapis": "^161.0.0",
    "lucide-react": "^0.539.0",
    "nanostores": "^0.11.4",
    "node-fetch": "^3.3.2",
    "openai": "^5.16.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-markdown": "^10.1.0",
    "svelte": "^5.22.1",
    "tailwind-merge": "^3.0.2",
    "tailwindcss": "^3.4.17",
    "typescript": "^5.9.2"
  },
  "devDependencies": {
    "@cloudflare/workers-types": "^4.20250917.0",
    "@rollup/plugin-commonjs": "^28.0.6",
    "@rollup/plugin-node-resolve": "^16.0.2",
    "@rollup/plugin-replace": "^6.0.2",
    "@rollup/plugin-terser": "^0.4.4",
    "@rollup/plugin-typescript": "^12.1.4",
    "@tailwindcss/typography": "^0.5.16",
    "rollup": "^4.52.0",
    "rollup-plugin-svelte": "^7.2.3",
    "vitest": "^3.2.4",
    "wrangler": "^4.44.0"
  },
  "scripts": {
    "astro": "astro",
    "build": "npm run build:agents && astro build",
    "build:agents": "rollup -c rollup.agents.config.js",
    "build:agents:watch": "rollup -c rollup.agents.config.js --watch",
    "cf-typegen": "wrangler types",
    "check": "astro build && tsc",
    "deploy": "wrangler pages deploy ./dist",
    "dev": "npm run build:agents && astro dev",
    "dev:ai": "node dev-with-ai.mjs",
    "preview": "astro build && wrangler dev",
    "generate-types": "wrangler types",
    "deploy:workflows": "node scripts/deployWorkflows.js",
    "deploy:all": "npm run build && npm run deploy && npm run deploy:workflows",
    "validate:workflows": "node -e \"const fs = require('fs'); const files = fs.readdirSync('workflows'); files.forEach(file => { if(file.endsWith('.json')) { try { JSON.parse(fs.readFileSync('workflows/'+file, 'utf8')); console.log('✅', file); } catch(e) { console.error('❌', file, e.message); process.exit(1); } } })\"",
    "test:api-keys": "node -e \"import('./src/utils/loadEnv.js').then(m => { m.validateRequiredKeys(); console.log('✅ API Keys validation completed'); }).catch(e => { console.error('❌ API Keys error:', e.message); process.exit(1); })\"",
    "automation:setup": "npm install node-fetch dotenv && npm run test:api-keys && npm run validate:workflows",
    "automation:deploy": "npm run automation:setup && npm run deploy:workflows",
    "backup": "node scripts/quick-backup.js",
    "backup:create": "node scripts/quick-backup.js create",
    "backup:list": "node scripts/quick-backup.js list",
    "backup:restore": "node scripts/quick-backup.js restore",
    "test:images": "node src/tests/image-generator.test.js",
    "test:homepage": "node src/tests/homepage-audio.test.js",
    "test:all": "node scripts/run-tests-with-dev.js",
    "fetch:patterns": "node scripts/fetch-context7-patterns.js",
    "resetComponents": "",
    "build:analyze": "npm run build && node scripts/optimize-build.js",
    "build:optimized": "ANALYZE=true npm run build",
    "analyze": "node scripts/optimize-build.js",
    "build:fast": "npm run build:agents && astro build --skip-type-check",
    "build:analyze:fast": "npm run build:fast && node scripts/optimize-build.js"
  },
  "type": "module"
}
