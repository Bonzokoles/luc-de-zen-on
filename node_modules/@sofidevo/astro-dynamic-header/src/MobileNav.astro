---
export interface Props {
  type?: "floating" | "fullscreen";
  menuItems?: Array<{
    link: string;
    text: string;
    submenu?: Array<{
      link: string;
      text: string;
      submenu?: Array<{
        link: string;
        text: string;
      }>;
    }>;
  }>;
  showHomeLink?: boolean;
  homeText?: string;
  accentColor?: string;
}

const { type } = Astro.props;

const {
  menuItems = [],
  showHomeLink = true,
  homeText = "Home",
  accentColor = "var(--light-spot-color, #00ffff)",
} = Astro.props;

const pagePathname = Astro.url.pathname;
---

<nav
  class={`mobile-header__menu mobile-header__menu--${type}`}
  id="mobile-header-menu"
  style={`--mobile-accent-color: ${accentColor};`}
>
  <ol class="mobile-menu">
    {
      showHomeLink && pagePathname !== "/" && (
        <li class="header__item mobile-header__item">
          <a
            class="menu__link mobile-menu__link"
            href="/"
            data-astro-prefetch="hover"
          >
            {homeText}
          </a>
        </li>
      )
    }
    {
      menuItems.map((item) => (
        <li>
          {item.submenu ? (
            <details class="mobile-details">
              <summary class="menu__summary">
                {item.text}
                <iconify-icon
                  class="iconify-arrow"
                  icon="codicon:triangle-down"
                  width="15"
                  height="15"
                  style={`color: ${accentColor};`}
                />
              </summary>
              <ol class="mobile-submenu">
                {item.submenu.map((sub) => (
                  <li>
                    {sub.submenu && sub.submenu.length > 0 ? (
                      <details class="mobile-details">
                        <summary class="menu__summary">
                          {sub.text}
                          <iconify-icon
                            class="iconify-arrow"
                            icon="codicon:triangle-down"
                            width="15"
                            height="15"
                            style={`color: ${accentColor};`}
                          />
                        </summary>
                        <ol class="mobile-subsubmenu">
                          {sub.submenu.map((subsub) => (
                            <li class="mobile-submenu__item secondary">
                              <a
                                class="menu__link mobile-menu__link"
                                href={subsub.link}
                              >
                                {subsub.text}
                              </a>
                            </li>
                          ))}
                        </ol>
                      </details>
                    ) : (
                      <a class="menu__link mobile-menu__link" href={sub.link}>
                        {sub.text}
                      </a>
                    )}
                  </li>
                ))}
              </ol>
            </details>
          ) : (
            <a class="mobile-menu__link" href={item.link}>
              {item.text}
            </a>
          )}
        </li>
      ))
    }
  </ol>
  <slot name="slot-panel" />
</nav>

<style>
  .mobile-header__menu {
    display: none;

    @media (width < 768px) {
      display: flex;
      flex-direction: column;
      width: 104vw;
      height: 100dvh;
      position: fixed;
      top: 0;
      gap: 1rem;
      left: 0;
      background: #151515;
      z-index: 20;
      transition: transform 0.3s ease-in-out;
      transform: translateX(100%);
      padding: 10rem 2rem 2rem;
      color: var(--mobile-accent-color);
    }

    a {
      color: var(--mobile-accent-color);
    }
  }

  .mobile-menu {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    max-height: 76dvh;
    overflow-y: auto;
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .mobile-menu li a {
    border: solid 1px
      color-mix(in srgb, var(--mobile-accent-color) 20%, transparent);
    border-radius: 4px;
    width: 100%;
    height: 4rem;
    font-size: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 1rem;
    text-decoration: none;
  }

  .mobile-details {
    width: 100%;
    interpolate-size: allow-keywords;
  }

  .mobile-details summary {
    background: linear-gradient(
      to right,
      color-mix(in srgb, var(--mobile-accent-color) 20%, transparent),
      transparent
    );
    border-radius: 4px;
    width: 100%;
    height: 4rem;
    font-size: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 1rem;
    cursor: pointer;
    list-style: none;
  }

  .mobile-details::details-content {
    transition:
      height 0.5s ease,
      opacity 0.5s ease,
      content-visibility 0.5s allow-discrete;
    opacity: 0;
    height: 0;
    overflow: clip;
  }

  .mobile-details:open iconify-icon {
    transform: rotate(180deg);
  }

  .mobile-details:open::details-content {
    height: auto;
    opacity: 1;
  }

  .mobile-submenu,
  .mobile-subsubmenu {
    border-left: dashed 1px var(--mobile-accent-color);
    padding-left: 2rem;
    margin-left: 1rem;
    margin-top: 1rem;
    list-style: none;
    gap: 1rem;
    display: flex;
    flex-direction: column;
  }

  .mobile-header__menu.is-active {
    transform: translateX(-7%);
  }

  /* Adjust transform for fullscreen header */
  .mobile-header__menu--fullscreen.is-active {
    transform: translate(0%);
  }

  .menu__summary {
    width: 100%;
    font-size: 1.7rem;
    height: 5rem;
    color: #fff;
    display: flex;
    align-items: center;
  }
</style>
