---
// Centralny manager dla wszystkich floating agents
// DISABLED on agent pages to prevent floating widgets
---

<script>
// Check if this is an agent page and skip floating widgets
const isAgentPage = typeof window !== 'undefined' && window.location?.pathname?.includes('/agents/');
if (isAgentPage) {
  console.log('🚫 Floating widgets disabled on agent pages');
} else {
  console.log('📦 Loading floating widgets for non-agent page');
}
</script>

{!isAgentPage && (
<!-- Voice Agent Widget -->
<div id="voiceAgentWidget" class="floating-widget hidden">
  <div class="floating-widget-template">
    <div class="panel-header">
      <span>🎙️ VOICE AGENT</span>
      <button onclick="toggleVoiceAgent()" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">×</button>
    </div>
    <div class="panel-content">
      <div style="background: rgba(255, 192, 203, 0.1); border: 1px solid #ff6b9d; border-radius: 4px; padding: 10px; margin-bottom: 15px;">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;">
          <span style="color: #ff6b9d; font-weight: bold;">🎤 VOICE MANAGER</span>
          <button onclick="toggleVoiceMode()" id="voiceStatusBtn" style="background: rgba(255, 255, 255, 0.1); border: 1px solid #ff6b9d; padding: 5px 10px; border-radius: 4px; color: #ff6b9d; cursor: pointer; font-size: 12px;">Gotowy</button>
        </div>
        <div style="display: flex; gap: 10px; flex-wrap: wrap;">
          <button onclick="startVoiceRecording()" style="background: linear-gradient(45deg, #ff6b9d, #0f3846); border: none; padding: 8px 15px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; font-size: 12px;">▶ Nagrywaj</button>
          <button onclick="stopVoiceRecording()" style="background: linear-gradient(45deg, #ff4444, #0f3846); border: none; padding: 8px 15px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; font-size: 12px;">⏹ Stop</button>
          <button onclick="playVoiceResponse()" style="background: linear-gradient(45deg, #4CAF50, #0f3846); border: none; padding: 8px 15px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; font-size: 12px;">🔊 Odtwórz</button>
        </div>
      </div>
      <textarea id="voiceAgentInput" placeholder="Wpisz komendy głosowe lub treść do syntezy..." style="width: 100%; height: 80px; padding: 10px; border: 1px solid #ff6b9d; border-radius: 4px; background: rgba(0, 0, 0, 0.7); color: white; resize: vertical;"></textarea>
      <div style="margin-top: 15px;">
        <button onclick="processVoiceCommand()" style="background: linear-gradient(45deg, #ff6b9d, #0f3846); border: none; padding: 10px 20px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; margin-right: 10px;">Wykonaj</button>
        <button onclick="synthesizeVoice()" style="background: linear-gradient(45deg, #4CAF50, #0f3846); border: none; padding: 10px 20px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; margin-right: 10px;">Synteza</button>
        <button onclick="clearVoiceAgent()" style="background: rgba(255, 255, 255, 0.1); border: 1px solid #ff6b9d; padding: 10px 20px; border-radius: 4px; color: #ff6b9d; cursor: pointer;">Wyczyść</button>
      </div>
      <div id="voiceAgentResponse" style="margin-top: 15px; padding: 10px; background: rgba(0, 0, 0, 0.5); border-radius: 4px; min-height: 60px; text-align: left; font-size: 14px; display: none;"></div>
    </div>
  </div>
</div>

<!-- Music Agent Widget -->
<div id="musicAgentWidget" class="floating-widget hidden">
  <div class="floating-widget-template">
    <div class="panel-header">
      <span>🎵 MUSIC AGENT</span>
      <button onclick="toggleMusicAgent()" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">×</button>
    </div>
    <div class="panel-content">
      <div style="background: rgba(147, 51, 234, 0.1); border: 1px solid #9333ea; border-radius: 4px; padding: 10px; margin-bottom: 15px;">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;">
          <span style="color: #9333ea; font-weight: bold;">🎶 MUSIC CONTROLLER</span>
          <button onclick="toggleMusicMode()" id="musicStatusBtn" style="background: rgba(255, 255, 255, 0.1); border: 1px solid #9333ea; padding: 5px 10px; border-radius: 4px; color: #9333ea; cursor: pointer; font-size: 12px;">Gotowy</button>
        </div>
        <div style="display: flex; gap: 10px; flex-wrap: wrap;">
          <button onclick="playMusic()" style="background: linear-gradient(45deg, #9333ea, #0f3846); border: none; padding: 8px 15px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; font-size: 12px;">▶ Play</button>
          <button onclick="pauseMusic()" style="background: linear-gradient(45deg, #f59e0b, #0f3846); border: none; padding: 8px 15px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; font-size: 12px;">⏸ Pause</button>
          <button onclick="nextTrack()" style="background: linear-gradient(45deg, #10b981, #0f3846); border: none; padding: 8px 15px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; font-size: 12px;">⏭ Next</button>
        </div>
      </div>
      <textarea id="musicAgentInput" placeholder="Wpisz nazwę utworu, artystę lub gatunek muzyczny..." style="width: 100%; height: 80px; padding: 10px; border: 1px solid #9333ea; border-radius: 4px; background: rgba(0, 0, 0, 0.7); color: white; resize: vertical;"></textarea>
      <div style="margin-top: 15px;">
        <button onclick="searchMusic()" style="background: linear-gradient(45deg, #9333ea, #0f3846); border: none; padding: 10px 20px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; margin-right: 10px;">Szukaj</button>
        <button onclick="generatePlaylist()" style="background: linear-gradient(45deg, #f59e0b, #0f3846); border: none; padding: 10px 20px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; margin-right: 10px;">Playlista</button>
        <button onclick="clearMusicAgent()" style="background: rgba(255, 255, 255, 0.1); border: 1px solid #9333ea; padding: 10px 20px; border-radius: 4px; color: #9333ea; cursor: pointer;">Wyczyść</button>
      </div>
      <div id="musicAgentResponse" style="margin-top: 15px; padding: 10px; background: rgba(0, 0, 0, 0.5); border-radius: 4px; min-height: 60px; text-align: left; font-size: 14px; display: none;"></div>
    </div>
  </div>
</div>

<!-- System Agent Widget -->
<div id="systemAgentWidget" class="floating-widget hidden">
  <div class="floating-widget-template">
    <div class="panel-header">
      <span>⚙️ SYSTEM AGENT</span>
      <button onclick="toggleSystemAgent()" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">×</button>
    </div>
    <div class="panel-content">
      <div style="background: rgba(239, 68, 68, 0.1); border: 1px solid #ef4444; border-radius: 4px; padding: 10px; margin-bottom: 15px;">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;">
          <span style="color: #ef4444; font-weight: bold;">🖥️ SYSTEM MONITOR</span>
          <button onclick="toggleSystemMode()" id="systemStatusBtn" style="background: rgba(255, 255, 255, 0.1); border: 1px solid #ef4444; padding: 5px 10px; border-radius: 4px; color: #ef4444; cursor: pointer; font-size: 12px;">Aktywny</button>
        </div>
        <div style="display: flex; gap: 10px; flex-wrap: wrap;">
          <button onclick="checkSystemHealth()" style="background: linear-gradient(45deg, #ef4444, #0f3846); border: none; padding: 8px 15px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; font-size: 12px;">🔍 Sprawdź</button>
          <button onclick="optimizeSystem()" style="background: linear-gradient(45deg, #10b981, #0f3846); border: none; padding: 8px 15px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; font-size: 12px;">⚡ Optymalizuj</button>
          <button onclick="cleanupSystem()" style="background: linear-gradient(45deg, #f59e0b, #0f3846); border: none; padding: 8px 15px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; font-size: 12px;">🧹 Oczyść</button>
        </div>
      </div>
      <textarea id="systemAgentInput" placeholder="Wpisz komendy systemowe lub pytania o konfigurację..." style="width: 100%; height: 80px; padding: 10px; border: 1px solid #ef4444; border-radius: 4px; background: rgba(0, 0, 0, 0.7); color: white; resize: vertical;"></textarea>
      <div style="margin-top: 15px;">
        <button onclick="executeSystemCommand()" style="background: linear-gradient(45deg, #ef4444, #0f3846); border: none; padding: 10px 20px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; margin-right: 10px;">Wykonaj</button>
        <button onclick="analyzeSystemLogs()" style="background: linear-gradient(45deg, #6366f1, #0f3846); border: none; padding: 10px 20px; border-radius: 4px; color: white; font-weight: bold; cursor: pointer; margin-right: 10px;">Logi</button>
        <button onclick="clearSystemAgent()" style="background: rgba(255, 255, 255, 0.1); border: 1px solid #ef4444; padding: 10px 20px; border-radius: 4px; color: #ef4444; cursor: pointer;">Wyczyść</button>
      </div>
      <div id="systemAgentResponse" style="margin-top: 15px; padding: 10px; background: rgba(0, 0, 0, 0.5); border-radius: 4px; min-height: 60px; text-align: left; font-size: 14px; display: none;"></div>
    </div>
  </div>
</div>

<!-- Pozostałe agenty będą ładowane dynamicznie przez AgentsLoader -->
<div id="dynamicAgentsContainer"></div>

<script>
  // Import agentów będzie realizowany przez AgentsLoader
  window.loadAgentWidgets = function() {
    console.log("🚀 Loading modular agents widgets...");
    // Każdy agent będzie miał swój własny moduł
  };

  // Voice Agent Functions
  window.toggleVoiceAgent = function() {
    const widget = document.getElementById('voiceAgentWidget');
    if (widget) {
      widget.classList.toggle('hidden');
    }
  };

  window.toggleVoiceMode = function() {
    const btn = document.getElementById('voiceStatusBtn');
    if (btn) {
      btn.textContent = btn.textContent === 'Gotowy' ? 'Aktywny' : 'Gotowy';
    }
  };

  window.startVoiceRecording = function() {
    console.log('🎤 Starting voice recording...');
    // TODO: Implement voice recording logic
  };

  window.stopVoiceRecording = function() {
    console.log('⏹ Stopping voice recording...');
    // TODO: Implement stop recording logic
  };

  window.playVoiceResponse = function() {
    console.log('🔊 Playing voice response...');
    // TODO: Implement voice playback logic
  };

  window.processVoiceCommand = function() {
    const input = document.getElementById('voiceAgentInput');
    const response = document.getElementById('voiceAgentResponse');
    if (input && response) {
      console.log('Processing voice command:', input.value);
      response.style.display = 'block';
      response.textContent = `Przetwarzanie komendy: "${input.value}"`;
    }
  };

  window.synthesizeVoice = function() {
    const input = document.getElementById('voiceAgentInput');
    console.log('🎙️ Synthesizing voice for:', input?.value);
    // TODO: Implement voice synthesis logic
  };

  window.clearVoiceAgent = function() {
    const input = document.getElementById('voiceAgentInput');
    const response = document.getElementById('voiceAgentResponse');
    if (input) input.value = '';
    if (response) {
      response.innerHTML = '';
      response.style.display = 'none';
    }
  };

  // Music Agent Functions
  window.toggleMusicAgent = function() {
    const widget = document.getElementById('musicAgentWidget');
    if (widget) {
      widget.classList.toggle('hidden');
    }
  };

  window.toggleMusicMode = function() {
    const btn = document.getElementById('musicStatusBtn');
    if (btn) {
      btn.textContent = btn.textContent === 'Gotowy' ? 'Odtwarzanie' : 'Gotowy';
    }
  };

  window.playMusic = function() {
    console.log('🎵 Playing music...');
    // TODO: Implement music playback logic
  };

  window.pauseMusic = function() {
    console.log('⏸ Pausing music...');
    // TODO: Implement music pause logic
  };

  window.nextTrack = function() {
    console.log('⏭ Next track...');
    // TODO: Implement next track logic
  };

  window.searchMusic = function() {
    const input = document.getElementById('musicAgentInput');
    const response = document.getElementById('musicAgentResponse');
    if (input && response) {
      console.log('Searching music:', input.value);
      response.style.display = 'block';
      response.textContent = `Szukanie: "${input.value}"`;
    }
  };

  window.generatePlaylist = function() {
    const input = document.getElementById('musicAgentInput');
    console.log('🎶 Generating playlist for:', input?.value);
    // TODO: Implement playlist generation logic
  };

  window.clearMusicAgent = function() {
    const input = document.getElementById('musicAgentInput');
    const response = document.getElementById('musicAgentResponse');
    if (input) input.value = '';
    if (response) {
      response.innerHTML = '';
      response.style.display = 'none';
    }
  };

  // System Agent Functions
  window.toggleSystemAgent = function() {
    const widget = document.getElementById('systemAgentWidget');
    if (widget) {
      widget.classList.toggle('hidden');
    }
  };

  window.toggleSystemMode = function() {
    const btn = document.getElementById('systemStatusBtn');
    if (btn) {
      btn.textContent = btn.textContent === 'Aktywny' ? 'Nieaktywny' : 'Aktywny';
    }
  };

  window.checkSystemHealth = function() {
    console.log('🔍 Checking system health...');
    const response = document.getElementById('systemAgentResponse');
    if (response) {
      response.style.display = 'block';
      response.innerHTML = 'System Health: OK ✅<br>CPU: 45%<br>RAM: 67%<br>Disk: 23%';
    }
  };

  window.optimizeSystem = function() {
    console.log('⚡ Optimizing system...');
    // TODO: Implement system optimization logic
  };

  window.cleanupSystem = function() {
    console.log('🧹 Cleaning up system...');
    // TODO: Implement system cleanup logic
  };

  window.executeSystemCommand = function() {
    const input = document.getElementById('systemAgentInput');
    const response = document.getElementById('systemAgentResponse');
    if (input && response) {
      console.log('Executing system command:', input.value);
      response.style.display = 'block';
      response.textContent = `Wykonywanie: "${input.value}"`;
    }
  };

  window.analyzeSystemLogs = function() {
    console.log('📊 Analyzing system logs...');
    const response = document.getElementById('systemAgentResponse');
    if (response) {
      response.style.display = 'block';
      response.innerHTML = 'Analiza logów w toku...';
    }
  };

  window.clearSystemAgent = function() {
    const input = document.getElementById('systemAgentInput');
    const response = document.getElementById('systemAgentResponse');
    if (input) input.value = '';
    if (response) {
      response.innerHTML = '';
      response.style.display = 'none';
    }
  };
</script>
)}