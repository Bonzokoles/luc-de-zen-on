---
import Layout from '../../../layouts/Layout.astro';
import FileManagerComponent from './component.svelte';
import { fileManagerConfig } from './config';
---

<Layout 
  siteTitle={`${fileManagerConfig.displayName} - LUC de ZEN ON`}
  description={fileManagerConfig.description}
  theme="cyberpunk"
>
  <main class="min-h-screen bg-cyber-dark text-cyber-text p-4 circuit-overlay">
    <div class="max-w-7xl mx-auto">
      <!-- Agent Header -->
      <div class="agent-header glass-panel p-6 mb-6 no-radius">
        <div class="flex items-center justify-between">
          <div>
            <h1 class="polish-title text-3xl mb-2 neon-text">
              📁 {fileManagerConfig.displayName}
            </h1>
            <p class="text-gray-400 polish-text">
              {fileManagerConfig.description}
            </p>
            <div class="agent-meta flex gap-4 mt-2 text-sm">
              <span class="text-cyan-400">Wersja: {fileManagerConfig.version}</span>
              <span class="text-green-400">Status: ✅ Aktywny</span>
              <span class="text-blue-400">Kategoria: {fileManagerConfig.category}</span>
            </div>
          </div>
          
          <div class="agent-controls flex gap-2">
            <button class="agent-btn" id="test-agent">
              ⚡ Test
            </button>
            <button class="agent-btn" id="agent-status">
              📊 Status
            </button>
            <a href="/agents" class="agent-btn">
              ⬅️ Powrót
            </a>
          </div>
        </div>
      </div>

      <!-- Capabilities Info -->
      <div class="capabilities-grid grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
        <div class="capability-card card">
          <h3 class="polish-title text-lg mb-3">🚀 Możliwości</h3>
          <ul class="space-y-1 text-sm">
            {fileManagerConfig.capabilities.map(cap => (
              <li class="text-gray-300">• {cap.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase())}</li>
            ))}
          </ul>
        </div>
        
        <div class="limits-card card">
          <h3 class="polish-title text-lg mb-3">⚙️ Limity</h3>
          <ul class="space-y-1 text-sm">
            <li class="text-gray-300">Max. rozmiar: {Math.round(fileManagerConfig.maxFileSize / 1024 / 1024)}MB</li>
            <li class="text-gray-300">Dozwolone ścieżki: {fileManagerConfig.allowedPaths.length}</li>
            <li class="text-gray-300">Obsługiwane formaty: {fileManagerConfig.supportedExtensions.length}</li>
            <li class="text-gray-300">Operacje: {fileManagerConfig.restrictions.allowDelete ? '✅' : '❌'} Usuwanie</li>
          </ul>
        </div>
        
        <div class="stats-card card">
          <h3 class="polish-title text-lg mb-3">📈 Statystyki</h3>
          <div class="stats-grid space-y-2 text-sm">
            <div class="stat-item flex justify-between">
              <span>Aktywność:</span>
              <span class="text-green-400">100%</span>
            </div>
            <div class="stat-item flex justify-between">
              <span>Czas odpowiedzi:</span>
              <span class="text-cyan-400">&lt; 100ms</span>
            </div>
            <div class="stat-item flex justify-between">
              <span>Ścieżka domyślna:</span>
              <span class="text-blue-400">{fileManagerConfig.defaultPath}</span>
            </div>
          </div>
        </div>
      </div>

      <!-- File Manager Component -->
      <FileManagerComponent client:load />

      <!-- Agent Documentation -->
      <div class="agent-docs glass-panel p-6 mt-6">
        <h2 class="polish-title text-2xl mb-4">📖 Dokumentacja</h2>
        <div class="docs-content polish-text space-y-4">
          <p class="text-gray-300">
            Agent File Manager zapewnia kompletne zarządzanie plikami z intuicyjnym interfejsem. 
            Obsługuje wszystkie podstawowe operacje CRUD oraz zaawansowane funkcje wyszukiwania.
          </p>
          
          <h3 class="polish-title text-lg mb-2">🔧 Dostępne akcje API:</h3>
          <ul class="space-y-2 text-sm">
            <li><code class="bg-gray-800 px-2 py-1">POST /api/agents/file-manager</code> - Główny endpoint</li>
            <li><code class="bg-gray-800 px-2 py-1">action: "list"</code> - Lista plików w folderze</li>
            <li><code class="bg-gray-800 px-2 py-1">action: "upload"</code> - Przesyłanie nowych plików</li>
            <li><code class="bg-gray-800 px-2 py-1">action: "download"</code> - Pobieranie zawartości pliku</li>
            <li><code class="bg-gray-800 px-2 py-1">action: "delete"</code> - Usuwanie plików/folderów</li>
            <li><code class="bg-gray-800 px-2 py-1">action: "search"</code> - Wyszukiwanie z recursion</li>
          </ul>

          <h3 class="polish-title text-lg mb-2">🛡️ Bezpieczeństwo:</h3>
          <ul class="space-y-1 text-sm text-gray-300">
            <li>• Ograniczone ścieżki dostępu</li>
            <li>• Walidacja rozszerzenia plików</li>
            <li>• Kontrola rozmiaru plików</li>
            <li>• Logowanie wszystkich operacji</li>
          </ul>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const testBtn = document.getElementById('test-agent');
    const statusBtn = document.getElementById('agent-status');
    
    if (testBtn) {
      testBtn.addEventListener('click', async () => {
        try {
          const response = await fetch('/api/agents/file-manager', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ action: 'test' })
          });
          
          const result = await response.json();
          alert(result.success ? `✅ ${result.message}` : `❌ ${result.message}`);
        } catch (error) {
          alert('❌ Błąd połączenia z agentem');
        }
      });
    }
    
    if (statusBtn) {
      statusBtn.addEventListener('click', async () => {
        try {
          const response = await fetch('/api/agents/file-manager', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ action: 'status' })
          });
          
          const result = await response.json();
          alert(result.success ? `📊 Status: ${result.data.status}` : `❌ ${result.message}`);
        } catch (error) {
          alert('❌ Błąd pobierania statusu');
        }
      });
    }
  });
</script>
