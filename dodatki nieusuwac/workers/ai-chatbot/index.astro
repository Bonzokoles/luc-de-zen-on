---
import MyBonzoLayout from "../../../LUCK_the_zen_on_AI/src/layouts/MyBonzoMainLayout.astro";
import DecorativeLines from "../../../LUCK_the_zen_on_AI/src/components/ui/DecorativeLines.astro";
---

<MyBonzoLayout siteTitle="AI Chatbot | MYBONZO">
  <DecorativeLines />

  <main class="min-h-svh relative z-10">
    <!-- Background -->
    <div class="fixed inset-0 bg-[#0a0f14]">
      <div class="absolute inset-0 bg-gradient-to-br from-cyan-900/20 via-[#0a0f14] to-[#0a0f14]"></div>
    </div>

    <!-- Header -->
    <section class="relative z-20 border-b border-[#263238] pt-20">
      <div class="max-w-6xl mx-auto px-4 py-8">
        <div class="flex items-center justify-between mb-8">
          <div>
            <h1 class="text-4xl md:text-5xl font-bold text-[#1be1ff] mb-2 uppercase tracking-wider font-['Rajdhani']">
              AI Chatbot
            </h1>
            <p class="text-[#e1f5fe] text-lg">
              Inteligentny asystent do rozmów i odpowiadania na pytania
            </p>
          </div>
          <div class="text-right text-sm text-[#b0bec5] font-mono">
            <div class="mb-1">
              STATUS: <span class="text-[#00ff88]" id="statusIndicator">ONLINE</span>
            </div>
            <div>
              MODEL: <span class="text-[#00e5ff]">GPT-4</span>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Main Content -->
    <section class="relative z-20 py-12">
      <div class="max-w-4xl mx-auto px-4">
        
        <!-- Chat Container -->
        <div class="bg-[#0f3846]/60 border border-[#1be1ff]/20 rounded-lg overflow-hidden">
          
          <!-- Chat Header -->
          <div class="bg-[#0f3846]/80 border-b border-[#1be1ff]/20 p-4">
            <div class="flex items-center justify-between">
              <div class="flex items-center gap-3">
                <div class="w-8 h-8 bg-[#1be1ff]/20 border border-[#1be1ff]/50 rounded-full flex items-center justify-center">
                  🤖
                </div>
                <div>
                  <h2 class="text-lg font-bold text-[#1be1ff] font-['Rajdhani']">MyBonzo AI Assistant</h2>
                  <p class="text-sm text-[#b0bec5]">Gotowy do pomocy</p>
                </div>
              </div>
              <button 
                id="clearChat"
                class="text-[#b0bec5] hover:text-[#1be1ff] transition-colors duration-300"
              >
                🗑️ Wyczyść
              </button>
            </div>
          </div>

          <!-- Chat Messages -->
          <div id="chatMessages" class="h-96 overflow-y-auto p-4 space-y-4 scrollbar-thin scrollbar-thumb-[#1be1ff]/30 scrollbar-track-transparent">
            <!-- Initial message -->
            <div class="flex items-start gap-3">
              <div class="w-8 h-8 bg-[#1be1ff]/20 border border-[#1be1ff]/50 rounded-full flex items-center justify-center flex-shrink-0">
                🤖
              </div>
              <div class="bg-[#1be1ff]/10 border border-[#1be1ff]/20 rounded-lg px-4 py-2 max-w-xs">
                <p class="text-[#e1f5fe] text-sm">
                  Cześć! Jestem MyBonzo AI. Jak mogę Ci dzisiaj pomóc?
                </p>
                <span class="text-xs text-[#b0bec5]" id="initialTime"></span>
              </div>
            </div>
          </div>

          <!-- Chat Input -->
          <div class="border-t border-[#1be1ff]/20 p-4">
            <div class="flex gap-3">
              <input
                type="text"
                id="messageInput"
                class="flex-1 bg-[#263238]/80 border border-[#1be1ff]/30 rounded-lg px-4 py-3 text-[#ffffff] placeholder-[#b0bec5] focus:border-[#1be1ff] focus:outline-none"
                placeholder="Wpisz swoją wiadomość..."
                autocomplete="off"
              />
              <button
                id="sendButton"
                class="bg-gradient-to-r from-[#1be1ff]/20 to-[#00e5ff]/20 border border-[#1be1ff]/50 rounded-lg px-6 py-3 text-[#1be1ff] font-bold hover:bg-gradient-to-r hover:from-[#1be1ff]/30 hover:to-[#00e5ff]/30 hover:border-[#1be1ff] transition-all duration-300"
              >
                Wyślij
              </button>
            </div>
          </div>

        </div>

        <!-- Quick Actions -->
        <div class="mt-8 grid grid-cols-2 md:grid-cols-4 gap-4">
          <button class="quick-action" data-prompt="Wyjaśnij mi jak działa sztuczna inteligencja">
            🧠 AI Basics
          </button>
          <button class="quick-action" data-prompt="Pomóż mi napisać profesjonalny e-mail">
            📧 Email Help
          </button>
          <button class="quick-action" data-prompt="Stwórz plan marketingowy dla mojego biznesu">
            📈 Marketing
          </button>
          <button class="quick-action" data-prompt="Jak mogę poprawić swoją produktywność?">
            ⚡ Produktywność
          </button>
        </div>

      </div>
    </section>
  </main>
</MyBonzoLayout>

<style>
  .quick-action {
    @apply bg-[#0f3846]/60 border border-[#1be1ff]/20 rounded-lg p-3 text-[#e1f5fe] text-sm font-medium hover:border-[#1be1ff]/50 hover:bg-[#0f3846]/80 transition-all duration-300;
  }

  .scrollbar-thin::-webkit-scrollbar {
    width: 6px;
  }

  .scrollbar-thumb-[#1be1ff]/30::-webkit-scrollbar-thumb {
    background-color: rgba(27, 225, 255, 0.3);
    border-radius: 3px;
  }

  .scrollbar-track-transparent::-webkit-scrollbar-track {
    background: transparent;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const chatMessages = document.getElementById('chatMessages');
    const messageInput = document.getElementById('messageInput');
    const sendButton = document.getElementById('sendButton');
    const clearChat = document.getElementById('clearChat');
    const statusIndicator = document.getElementById('statusIndicator');
    const initialTime = document.getElementById('initialTime');
    const quickActions = document.querySelectorAll('.quick-action');

    // Set initial time
    initialTime.textContent = new Date().toLocaleTimeString('pl-PL', { 
      hour: '2-digit', 
      minute: '2-digit' 
    });

    // Quick actions
    quickActions.forEach(action => {
      action.addEventListener('click', function() {
        const prompt = this.dataset.prompt;
        messageInput.value = prompt;
        sendMessage();
      });
    });

    // Send message functionality
    sendButton.addEventListener('click', sendMessage);
    messageInput.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        sendMessage();
      }
    });

    // Clear chat functionality
    clearChat.addEventListener('click', function() {
      chatMessages.innerHTML = `
        <div class="flex items-start gap-3">
          <div class="w-8 h-8 bg-[#1be1ff]/20 border border-[#1be1ff]/50 rounded-full flex items-center justify-center flex-shrink-0">
            🤖
          </div>
          <div class="bg-[#1be1ff]/10 border border-[#1be1ff]/20 rounded-lg px-4 py-2 max-w-xs">
            <p class="text-[#e1f5fe] text-sm">
              Cześć! Jestem MyBonzo AI. Jak mogę Ci dzisiaj pomóc?
            </p>
            <span class="text-xs text-[#b0bec5]">${new Date().toLocaleTimeString('pl-PL', { hour: '2-digit', minute: '2-digit' })}</span>
          </div>
        </div>
      `;
    });

    function sendMessage() {
      const message = messageInput.value.trim();
      if (!message) return;

      // Add user message
      addUserMessage(message);
      
      // Clear input
      messageInput.value = '';
      
      // Show typing indicator
      showTypingIndicator();
      
      // Simulate AI response
      setTimeout(() => {
        hideTypingIndicator();
        addAIResponse(message);
      }, 1000 + Math.random() * 2000);
    }

    function addUserMessage(message) {
      const messageElement = document.createElement('div');
      messageElement.className = 'flex items-start gap-3 justify-end';
      messageElement.innerHTML = `
        <div class="bg-[#00e5ff]/10 border border-[#00e5ff]/20 rounded-lg px-4 py-2 max-w-xs">
          <p class="text-[#ffffff] text-sm">${escapeHtml(message)}</p>
          <span class="text-xs text-[#b0bec5]">${new Date().toLocaleTimeString('pl-PL', { hour: '2-digit', minute: '2-digit' })}</span>
        </div>
        <div class="w-8 h-8 bg-[#00e5ff]/20 border border-[#00e5ff]/50 rounded-full flex items-center justify-center flex-shrink-0">
          👤
        </div>
      `;
      
      chatMessages.appendChild(messageElement);
      scrollToBottom();
    }

    function addAIResponse(userMessage) {
      const responses = [
        "To bardzo interesujące pytanie! Pozwól mi przemyśleć odpowiedź...",
        "Rozumiem o co pytasz. Oto co myślę na ten temat:",
        "Świetne pytanie! Mogę Ci pomóc z tym:",
        "Na podstawie mojej wiedzy, oto co mogę Ci powiedzieć:",
        "Dzięki za pytanie! Oto moja odpowiedź:",
      ];
      
      const response = responses[Math.floor(Math.random() * responses.length)] + 
        ` Odpowiedź na: "${userMessage.substring(0, 50)}${userMessage.length > 50 ? '...' : ''}"`;

      const messageElement = document.createElement('div');
      messageElement.className = 'flex items-start gap-3';
      messageElement.innerHTML = `
        <div class="w-8 h-8 bg-[#1be1ff]/20 border border-[#1be1ff]/50 rounded-full flex items-center justify-center flex-shrink-0">
          🤖
        </div>
        <div class="bg-[#1be1ff]/10 border border-[#1be1ff]/20 rounded-lg px-4 py-2 max-w-xs">
          <p class="text-[#e1f5fe] text-sm">${escapeHtml(response)}</p>
          <span class="text-xs text-[#b0bec5]">${new Date().toLocaleTimeString('pl-PL', { hour: '2-digit', minute: '2-digit' })}</span>
        </div>
      `;
      
      chatMessages.appendChild(messageElement);
      scrollToBottom();
    }

    function showTypingIndicator() {
      const typingElement = document.createElement('div');
      typingElement.id = 'typingIndicator';
      typingElement.className = 'flex items-start gap-3';
      typingElement.innerHTML = `
        <div class="w-8 h-8 bg-[#1be1ff]/20 border border-[#1be1ff]/50 rounded-full flex items-center justify-center flex-shrink-0">
          🤖
        </div>
        <div class="bg-[#1be1ff]/10 border border-[#1be1ff]/20 rounded-lg px-4 py-2">
          <div class="flex space-x-1">
            <div class="w-2 h-2 bg-[#1be1ff] rounded-full animate-bounce"></div>
            <div class="w-2 h-2 bg-[#1be1ff] rounded-full animate-bounce" style="animation-delay: 0.1s;"></div>
            <div class="w-2 h-2 bg-[#1be1ff] rounded-full animate-bounce" style="animation-delay: 0.2s;"></div>
          </div>
        </div>
      `;
      
      chatMessages.appendChild(typingElement);
      scrollToBottom();
    }

    function hideTypingIndicator() {
      const typingIndicator = document.getElementById('typingIndicator');
      if (typingIndicator) {
        typingIndicator.remove();
      }
    }

    function scrollToBottom() {
      chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    function escapeHtml(text) {
      const map = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#039;'
      };
      return text.replace(/[&<>"']/g, function(m) { return map[m]; });
    }
  });
</script>