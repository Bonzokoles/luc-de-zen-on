addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request))
})

async function handleRequest(request) {
  if (request.method !== 'POST') {
    return new Response('Method Not Allowed', { status: 405 })
  }

  try {
    const { prompt } = await request.json()
    if (!prompt || prompt.trim() === '') {
      return new Response(JSON.stringify({ error: 'Prompt jest wymagany' }), {
        status: 400,
        headers: { 'Content-Type': 'application/json' }
      })
    }

    const response = await fetch('https://api-inference.huggingface.co/models/nazwa-uzytkownika/bielik', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${HUGGINGFACE_API_TOKEN}`, // Zmienna Å›rodowiskowa w Cloudflare
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        inputs: prompt,
        options: { wait_for_model: true }
      })
    })

    if (!response.ok) {
      const errText = await response.text()
      throw new Error(`Hugging Face API error: ${response.status} ${errText}`)
    }

    const data = await response.json()
    const generatedText = data[0]?.generated_text || "Brak odpowiedzi od modelu."

    return new Response(JSON.stringify({ result: generatedText }), {
      headers: { 'Content-Type': 'application/json' }
    })
  } catch (err) {
    return new Response(JSON.stringify({ error: err.message }), {
      status: 500,
      headers: { 'Content-Type': 'application/json' }
    })
  }
}
