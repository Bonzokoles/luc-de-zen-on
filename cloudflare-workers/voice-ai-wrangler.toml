name = "voice-ai-worker"
main = "voice-ai-worker.js"
compatibility_date = "2024-09-15"
compatibility_flags = ["nodejs_compat"]

# Voice AI Worker Configuration
# Handles advanced voice processing and AI integration

[env.production]
name = "mybonzo-voice-ai-prod"
routes = [
  { pattern = "voice-ai.mybonzo.com/*", zone_name = "mybonzo.com" },
  { pattern = "api.mybonzo.com/voice/*", zone_name = "mybonzo.com" }
]
# Dodaj:
[env.production.vars]
WORKER_ENV = "production"
SERVICE_NAME = "Voice AI Worker"
VERSION = "1.0.0"

[env.production.limits]
cpu_ms = 50000  # Więcej dla produkcji

[env.staging] 
name = "mybonzo-voice-ai-staging"
routes = [
  { pattern = "voice-ai-staging.mybonzo.com/*", zone_name = "mybonzo.com" }
]
# Dodaj:
[env.staging.vars]
WORKER_ENV = "staging"
SERVICE_NAME = "Voice AI Worker"
VERSION = "1.0.0"

[env.staging.limits]
cpu_ms = 30000

[env.development]
name = "mybonzo-voice-ai-dev"
# Dodaj różne limity dla środowisk:
[env.development.limits]
cpu_ms = 15000  # Mniej dla dev

# Environment Variables for AI Services
# Dodaj zmienne bezpieczeństwa:
[vars]
WORKER_ENV = "development"
SERVICE_NAME = "Voice AI Worker"
VERSION = "1.0.0"
# Dodaj:
ALLOWED_ORIGINS = "https://mybonzo.com,https://voice-ai.mybonzo.com"
MAX_FILE_SIZE = "10485760"  # 10MB
RATE_LIMIT_PER_MINUTE = "60"
CACHE_TTL = "3600"  # 1 godzina
VOICE_CACHE_TTL = "1800"  # 30 minut
SESSION_TTL = "86400"  # 24 godziny

# KV Namespaces for caching and session management - use existing SESSION KV
[[kv_namespaces]]
binding = "VOICE_CACHE"
id = "77d84c01758a4064be011acc35b2c344"
preview_id = "77d84c01758a4064be011acc35b2c344"

[[kv_namespaces]]
binding = "VOICE_SESSIONS"
id = "77d84c01758a4064be011acc35b2c344"
preview_id = "77d84c01758a4064be011acc35b2c344"

# R2 Buckets for audio file storage - use existing mybonzo-storage
[[r2_buckets]]
binding = "VOICE_STORAGE"
bucket_name = "mybonzo-storage"
preview_bucket_name = "mybonzo-storage"

# Durable Objects for real-time voice processing (tymczasowo wyłączone)
# [[durable_objects.bindings]]
# name = "VOICE_PROCESSOR"
# class_name = "VoiceProcessor"
# script_name = "voice-ai-worker"

# [[migrations]]
# tag = "v1"
# new_classes = ["VoiceProcessor"]

# AI Service Integration (secrets - set via wrangler secret)
# wrangler secret put OPENAI_API_KEY
# wrangler secret put GOOGLE_SPEECH_KEY  
# wrangler secret put AZURE_COGNITIVE_KEY
# wrangler secret put ELEVENLABS_API_KEY

# Rate limiting and performance
[limits]
cpu_ms = 30000  # 30 seconds for heavy audio processing

# WebAssembly modules for audio processing
# [[wasm_modules]]
# binding = "AUDIO_PROCESSOR"
# source = "./audio-processor.wasm"

# Analytics and monitoring
[[analytics_engine_datasets]]
binding = "VOICE_ANALYTICS"
dataset = "voice_ai_metrics"

[[analytics_engine_datasets]]
binding = "ERROR_ANALYTICS"
dataset = "voice_ai_errors"

[[analytics_engine_datasets]]
binding = "PERFORMANCE_ANALYTICS"
dataset = "voice_ai_performance"