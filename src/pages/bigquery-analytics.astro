import MyBonzoLayout from "../layouts/MyBonzoLayout.astro";

<MyBonzoLayout title="BigQuery Analytics | AI Workers">
  <main class="min-h-svh">
    <!-- Header Section -->
    <section class="border border-edge">
      <div class="max-w-6xl mx-auto border-x border-edge">
        <div class="flex justify-between max-h-72 min-h-64">
          <div class="mt-auto">
            <span
              style="writing-mode: vertical-lr;"
              class="text-edge block px-2 text-xl font-semibold tracking-[0.3em]"
            >
              BIG_QUERY
            </span>
          </div>
          <span class="mt-auto">
            <span
              style=""
              class="text-edge block px-2 text-xl font-semibold tracking-[0.3em]"
            >
              ANALYTICS
            </span>
          </span>
        </div>
      </div>
    </section>

    <!-- Navigation Section -->
    <section class="border border-edge">
      <div class="max-w-6xl mx-auto border-x border-edge">
        <div class="flex flex-row p-2">
          <a class="hover:brightness-125" href="/">
            <h1 class="text-4xl sm:text-5xl">BIGQUERY ANALYTICS</h1>
            <h2 class="text-2xl sm:text-3xl">Google Cloud Data Analysis</h2>
          </a>

          <div class="hidden ml-auto gap-4 md:gap-0 md:flex md:flex-col">
            <a class="ml-auto hover:brightness-125 duration-200" href="/">
              ‚Üê Powr√≥t do strony g≈Ç√≥wnej
              <svg
                style="--rotation: -45deg"
                class="stroke-primary-foreground inline aspect-square w-3 h-auto fill-transparent rotate-[var(--rotation)]"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M3 12L21 12M21 12L12.5 3.5M21 12L12.5 20.5"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- BigQuery Section -->
    <section
      class="ai-workers-section flex items-center justify-center py-16"
      id="bigquery"
    >
      <div class="section-container max-w-6xl mx-auto">
        <h2 class="section-title">BIGQUERY ANALYTICS</h2>
        <p class="section-description">
          Analizuj dane z Google BigQuery, wykonuj zapytania SQL i generuj
          raporty
        </p>

        <!-- Query Interface -->
        <div
          class="query-container border border-edge rounded-lg mt-8"
          style="background: rgba(0, 0, 0, 0.5);"
        >
          <!-- Query Header -->
          <div
            class="query-header border-b border-edge p-4 flex items-center justify-between"
            style="background: rgba(0, 0, 0, 0.3);"
          >
            <div class="flex items-center gap-3">
              <div class="w-3 h-3 bg-blue-400 rounded-full animate-pulse"></div>
              <span class="text-primary-foreground font-semibold"
                >BigQuery Console</span
              >
            </div>
            <div class="flex gap-2">
              <button
                onclick="saveQuery()"
                class="px-3 py-1 bg-green-600 hover:bg-green-700 text-white rounded text-sm"
              >
                Zapisz
              </button>
              <button
                onclick="loadQuery()"
                class="px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded text-sm"
              >
                Wczytaj
              </button>
              <button
                onclick="clearQuery()"
                class="px-3 py-1 bg-red-600 hover:bg-red-700 text-white rounded text-sm"
              >
                Wyczy≈õƒá
              </button>
            </div>
          </div>

          <!-- SQL Editor -->
          <div class="sql-editor p-4">
            <label
              for="sqlQuery"
              class="block text-lg font-semibold mb-3 text-primary-foreground"
            >
              Zapytanie SQL:
            </label>
            <div class="relative">
              <textarea
                id="sqlQuery"
                rows="8"
                class="w-full p-4 border border-edge rounded-lg text-primary-foreground placeholder-gray-400 focus:border-cyan-400 focus:outline-none font-mono text-sm"
                style="background: rgba(0, 0, 0, 0.5);"
                placeholder="SELECT * FROM `project.dataset.table` WHERE ..."
              ></textarea>
              <div
                class="absolute top-2 right-2 text-xs text-gray-400"
                id="lineCounter"
              >
                Linia: 1, Kolumna: 1
              </div>
            </div>
          </div>

          <!-- Query Settings -->
          <div
            class="query-settings p-4 border-t border-edge"
            style="background: rgba(0, 0, 0, 0.5);"
          >
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
              <div>
                <label
                  class="block text-sm font-medium mb-2 text-primary-foreground"
                  >Projekt:</label
                >
                <input
                  id="projectId"
                  type="text"
                  placeholder="project-id"
                  class="w-full p-2 border border-edge rounded text-primary-foreground"
                  style="background: rgba(0, 0, 0, 0.5);"
                />
              </div>
              <div>
                <label
                  class="block text-sm font-medium mb-2 text-primary-foreground"
                  >Dataset:</label
                >
                <input
                  id="datasetId"
                  type="text"
                  placeholder="dataset_name"
                  class="w-full p-2 border border-edge rounded text-primary-foreground"
                  style="background: rgba(0, 0, 0, 0.5);"
                />
              </div>
              <div>
                <label
                  class="block text-sm font-medium mb-2 text-primary-foreground"
                  >Limit wynik√≥w:</label
                >
                <select
                  id="rowLimit"
                  class="w-full p-2 border border-edge rounded text-primary-foreground"
                  style="background: rgba(0, 0, 0, 0.5);"
                >
                  <option value="100">100 wierszy</option>
                  <option value="1000">1,000 wierszy</option>
                  <option value="10000">10,000 wierszy</option>
                  <option value="0">Bez limitu</option>
                </select>
              </div>
              <div>
                <label
                  class="block text-sm font-medium mb-2 text-primary-foreground"
                  >Format:</label
                >
                <select
                  id="outputFormat"
                  class="w-full p-2 border border-edge rounded text-primary-foreground"
                  style="background: rgba(0, 0, 0, 0.5);"
                >
                  <option value="table">Tabela</option>
                  <option value="json">JSON</option>
                  <option value="csv">CSV</option>
                </select>
              </div>
            </div>
          </div>

          <!-- Execute Button -->
          <div class="execute-section p-4 border-t border-edge">
            <button
              id="executeBtn"
              onclick="executeQuery()"
              class="w-full bg-cyan-600 hover:bg-cyan-700 text-white py-3 px-6 rounded-lg font-semibold text-lg transition-colors duration-200 disabled:opacity-50"
            >
              üöÄ Wykonaj Zapytanie
            </button>
          </div>

          <!-- Progress Section -->
          <div
            id="progressSection"
            class="progress-section hidden p-4 border-t border-edge"
          >
            <div
              class="border border-edge rounded-lg p-4"
              style="background: rgba(0, 0, 0, 0.5);"
            >
              <div class="flex items-center justify-between mb-2">
                <span class="text-primary-foreground"
                  >Wykonywanie zapytania...</span
                >
                <span id="queryTime" class="text-cyan-400">0s</span>
              </div>
              <div class="w-full bg-gray-700 rounded-full h-2">
                <div
                  id="progressBar"
                  class="bg-cyan-400 h-2 rounded-full transition-all duration-300 animate-pulse"
                  style="width: 100%"
                >
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Results Section -->
        <div id="resultsSection" class="results-section hidden mt-8">
          <div
            class="border border-edge rounded-lg"
            style="background: rgba(0, 0, 0, 0.5);"
          >
            <!-- Results Header -->
            <div
              class="results-header border-b border-edge p-4 flex items-center justify-between"
              style="background: rgba(0, 0, 0, 0.3);"
            >
              <div>
                <h3 class="text-xl font-semibold text-primary-foreground">
                  Wyniki zapytania
                </h3>
                <p id="resultsInfo" class="text-gray-400 text-sm"></p>
              </div>
              <div class="flex gap-2">
                <button
                  onclick="exportResults('csv')"
                  class="px-3 py-1 bg-green-600 hover:bg-green-700 text-white rounded text-sm"
                >
                  Export CSV
                </button>
                <button
                  onclick="exportResults('json')"
                  class="px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded text-sm"
                >
                  Export JSON
                </button>
                <button
                  onclick="createChart()"
                  class="px-3 py-1 bg-purple-600 hover:bg-purple-700 text-white rounded text-sm"
                >
                  Wykres
                </button>
              </div>
            </div>

            <!-- Results Content -->
            <div
              id="resultsContent"
              class="results-content p-4 max-h-96 overflow-auto"
            >
              <!-- Results will be populated here -->
            </div>
          </div>
        </div>

        <!-- Quick Queries -->
        <div class="quick-queries mt-8">
          <h3 class="text-xl font-semibold mb-4 text-primary-foreground">
            Przyk≈Çadowe zapytania:
          </h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <button
              class="quick-query-btn text-left"
              onclick="setQuery(exampleQueries.basic)"
            >
              <div class="font-semibold text-cyan-400">
                üìä Podstawowe zapytanie
              </div>
              <div class="text-sm text-gray-300">
                SELECT * FROM table LIMIT 100
              </div>
            </button>
            <button
              class="quick-query-btn text-left"
              onclick="setQuery(exampleQueries.aggregate)"
            >
              <div class="font-semibold text-cyan-400">üìà Agregacja danych</div>
              <div class="text-sm text-gray-300">COUNT, SUM, AVG, GROUP BY</div>
            </button>
            <button
              class="quick-query-btn text-left"
              onclick="setQuery(exampleQueries.join)"
            >
              <div class="font-semibold text-cyan-400">üîó JOIN tabeli</div>
              <div class="text-sm text-gray-300">LEFT JOIN, INNER JOIN</div>
            </button>
            <button
              class="quick-query-btn text-left"
              onclick="setQuery(exampleQueries.analytics)"
            >
              <div class="font-semibold text-cyan-400">üßÆ Analityka</div>
              <div class="text-sm text-gray-300">
                Window functions, RANK, LAG
              </div>
            </button>
          </div>
        </div>

        <!-- Query History -->
        <div class="query-history mt-8">
          <h3 class="text-xl font-semibold mb-4 text-primary-foreground">
            Historia zapyta≈Ñ:
          </h3>
          <div id="queryHistoryList" class="space-y-2">
            <!-- History items will be populated here -->
          </div>
        </div>

        <!-- Schema Browser -->
        <div
          class="schema-browser mt-8 border border-edge rounded-lg p-6"
          style="background: rgba(0, 0, 0, 0.5);"
        >
          <h3 class="text-xl font-semibold mb-4 text-primary-foreground">
            PrzeglƒÖdarka schemat√≥w:
          </h3>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label
                class="block text-sm font-medium mb-2 text-primary-foreground"
                >Projekty:</label
              >
              <div
                id="projectsList"
                class="border border-edge rounded p-3 h-32 overflow-y-auto"
                style="background: rgba(0, 0, 0, 0.5);"
              >
                <div class="text-gray-400 text-sm">Wczytaj projekty...</div>
              </div>
            </div>
            <div>
              <label
                class="block text-sm font-medium mb-2 text-primary-foreground"
                >Datasety:</label
              >
              <div
                id="datasetsList"
                class="border border-edge rounded p-3 h-32 overflow-y-auto"
                style="background: rgba(0, 0, 0, 0.5);"
              >
                <div class="text-gray-400 text-sm">Wybierz projekt</div>
              </div>
            </div>
            <div>
              <label
                class="block text-sm font-medium mb-2 text-primary-foreground"
                >Tabele:</label
              >
              <div
                id="tablesList"
                class="border border-edge rounded p-3 h-32 overflow-y-auto"
                style="background: rgba(0, 0, 0, 0.5);"
              >
                <div class="text-gray-400 text-sm">Wybierz dataset</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <!-- AI Help Assistant Integration -->
</MyBonzoLayout>

<style>
  /* Base styles matching main page */
  .section-container {
    padding: 2rem;
    text-align: center;
  }

  .section-title {
    font-size: 3rem;
    font-weight: bold;
    color: #00bcd4;
    margin-bottom: 1rem;
    text-transform: uppercase;
  }

  .section-description {
    font-size: 1.25rem;
    color: #d1d5db;
    margin-bottom: 2rem;
  }

  .quick-query-btn {
    background-color: rgba(0, 0, 0, 0.3);
    border: 1px solid #374151;
    color: #d1d5db;
    padding: 1rem;
    border-radius: 0.5rem;
    transition: all 0.2s;
    cursor: pointer;
  }

  .quick-query-btn:hover {
    background-color: #374151;
    border-color: #00bcd4;
  }

  .ai-workers-section {
    background: linear-gradient(
      135deg,
      rgba(0, 0, 0, 0.5) 0%,
      rgba(0, 0, 0, 0.5) 100%
    );
    min-height: 100vh;
  }

  /* Table styles for results */
  .results-table {
    width: 100%;
    border-collapse: collapse;
    font-size: 0.875rem;
  }

  .results-table th,
  .results-table td {
    border: 1px solid #374151;
    padding: 0.5rem;
    text-align: left;
  }

  .results-table th {
    background-color: #1e293b;
    color: #00bcd4;
    font-weight: bold;
  }

  .results-table td {
    color: #d1d5db;
  }

  .results-table tr:nth-child(even) {
    background-color: rgba(0, 0, 0, 0.1);
  }

  /* Scrollbar styling */
  .results-content::-webkit-scrollbar,
  #projectsList::-webkit-scrollbar,
  #datasetsList::-webkit-scrollbar,
  #tablesList::-webkit-scrollbar {
    width: 8px;
  }

  .results-content::-webkit-scrollbar-track,
  #projectsList::-webkit-scrollbar-track,
  #datasetsList::-webkit-scrollbar-track,
  #tablesList::-webkit-scrollbar-track {
    background: #1e293b;
  }

  .results-content::-webkit-scrollbar-thumb,
  #projectsList::-webkit-scrollbar-thumb,
  #datasetsList::-webkit-scrollbar-thumb,
  #tablesList::-webkit-scrollbar-thumb {
    background: #374151;
    border-radius: 4px;
  }
</style>

<script>
  let queryHistory = JSON.parse(
    localStorage.getItem("bigqueryHistory") || "[]"
  );
  let currentResults = null;
  let queryStartTime = null;

  const exampleQueries = {
    basic: `SELECT 
  column1,
  column2,
  column3
FROM \`project.dataset.table\`
LIMIT 100;`,

    aggregate: `SELECT 
  category,
  COUNT(*) as total_count,
  AVG(value) as avg_value,
  SUM(amount) as total_amount
FROM \`project.dataset.table\`
GROUP BY category
ORDER BY total_count DESC;`,

    join: `SELECT 
  a.id,
  a.name,
  b.description
FROM \`project.dataset.table_a\` a
LEFT JOIN \`project.dataset.table_b\` b
  ON a.id = b.table_a_id
WHERE a.status = 'active';`,

    analytics: `SELECT 
  date,
  value,
  LAG(value) OVER (ORDER BY date) as prev_value,
  RANK() OVER (ORDER BY value DESC) as rank
FROM \`project.dataset.table\`
WHERE date >= '2023-01-01'
ORDER BY date;`,
  };

  function setQuery(query) {
    document.getElementById("sqlQuery").value = query;
  }

  async function executeQuery() {
    const query = document.getElementById("sqlQuery").value.trim();
    if (!query) {
      alert("Proszƒô wprowadziƒá zapytanie SQL");
      return;
    }

    const executeBtn = document.getElementById("executeBtn");
    const progressSection = document.getElementById("progressSection");
    const resultsSection = document.getElementById("resultsSection");

    // Start execution
    executeBtn.disabled = true;
    executeBtn.textContent = "Wykonywanie...";
    progressSection.classList.remove("hidden");
    resultsSection.classList.add("hidden");

    queryStartTime = Date.now();

    // Update timer
    const timerInterval = setInterval(() => {
      const elapsed = ((Date.now() - queryStartTime) / 1000).toFixed(1);
      document.getElementById("queryTime").textContent = elapsed + "s";
    }, 100);

    try {
      const projectId = document.getElementById("projectId").value;
      const datasetId = document.getElementById("datasetId").value;
      const rowLimit = parseInt(document.getElementById("rowLimit").value);
      const format = document.getElementById("outputFormat").value;

      const response = await fetch("/api/bigquery", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          query,
          projectId,
          datasetId,
          rowLimit,
          format,
        }),
      });

      const data = await response.json();

      clearInterval(timerInterval);

      if (data.success) {
        currentResults = data.results;
        displayResults(data.results, data.metadata);

        // Add to history
        addToHistory(query, data.metadata);
      } else {
        throw new Error(data.error || "B≈ÇƒÖd wykonania zapytania");
      }
    } catch (error) {
      clearInterval(timerInterval);
      console.error("Query error:", error);
      displayError(error.message);
    } finally {
      // Reset UI
      executeBtn.disabled = false;
      executeBtn.textContent = "üöÄ Wykonaj Zapytanie";
      setTimeout(() => {
        progressSection.classList.add("hidden");
      }, 500);
    }
  }

  function displayResults(results, metadata) {
    const resultsSection = document.getElementById("resultsSection");
    const resultsContent = document.getElementById("resultsContent");
    const resultsInfo = document.getElementById("resultsInfo");

    resultsInfo.textContent = `${metadata.rowCount} wierszy, ${metadata.columnCount} kolumn, czas: ${metadata.executionTime}s`;

    if (results.length === 0) {
      resultsContent.innerHTML =
        '<div class="text-gray-400 text-center py-8">Brak wynik√≥w</div>';
    } else {
      const format = document.getElementById("outputFormat").value;

      if (format === "table") {
        displayTableResults(results, resultsContent);
      } else if (format === "json") {
        displayJsonResults(results, resultsContent);
      } else if (format === "csv") {
        displayCsvResults(results, resultsContent);
      }
    }

    resultsSection.classList.remove("hidden");
  }

  function displayTableResults(results, container) {
    if (results.length === 0) return;

    const columns = Object.keys(results[0]);
    let html = '<table class="results-table"><thead><tr>';

    columns.forEach((col) => {
      html += `<th>${col}</th>`;
    });
    html += "</tr></thead><tbody>";

    results.forEach((row) => {
      html += "<tr>";
      columns.forEach((col) => {
        const value = row[col];
        html += `<td>${value !== null && value !== undefined ? value : '<span class="text-gray-500">NULL</span>'}</td>`;
      });
      html += "</tr>";
    });

    html += "</tbody></table>";
    container.innerHTML = html;
  }

  function displayJsonResults(results, container) {
    const json = JSON.stringify(results, null, 2);
    container.innerHTML = `<pre class="text-green-400 text-sm overflow-auto"><code>${json}</code></pre>`;
  }

  function displayCsvResults(results, container) {
    if (results.length === 0) return;

    const columns = Object.keys(results[0]);
    let csv = columns.join(",") + "\n";

    results.forEach((row) => {
      const values = columns.map((col) => {
        const value = row[col];
        return value !== null && value !== undefined ? `"${value}"` : "";
      });
      csv += values.join(",") + "\n";
    });

    container.innerHTML = `<pre class="text-blue-400 text-sm overflow-auto"><code>${csv}</code></pre>`;
  }

  function displayError(error) {
    const resultsSection = document.getElementById("resultsSection");
    const resultsContent = document.getElementById("resultsContent");
    const resultsInfo = document.getElementById("resultsInfo");

    resultsInfo.textContent = "B≈ÇƒÖd wykonania zapytania";
    resultsContent.innerHTML = `<div class="bg-red-600/20 border border-red-400/30 rounded p-4">
      <div class="text-red-400 font-semibold mb-2">B≈ÇƒÖd SQL:</div>
      <div class="text-primary-foreground">${error}</div>
    </div>`;

    resultsSection.classList.remove("hidden");
  }

  function saveQuery() {
    const query = document.getElementById("sqlQuery").value.trim();
    if (!query) {
      alert("Brak zapytania do zapisania");
      return;
    }

    const name = prompt("Nazwa zapytania:");
    if (name) {
      const savedQueries = JSON.parse(
        localStorage.getItem("savedQueries") || "[]"
      );
      savedQueries.push({
        id: Date.now(),
        name,
        query,
        timestamp: new Date().toISOString(),
      });
      localStorage.setItem("savedQueries", JSON.stringify(savedQueries));
      alert("Zapytanie zosta≈Ço zapisane");
    }
  }

  function loadQuery() {
    const savedQueries = JSON.parse(
      localStorage.getItem("savedQueries") || "[]"
    );
    if (savedQueries.length === 0) {
      alert("Brak zapisanych zapyta≈Ñ");
      return;
    }

    const options = savedQueries.map((q, i) => `${i}: ${q.name}`).join("\n");
    const choice = prompt(`Wybierz zapytanie:\n${options}`);

    if (choice !== null) {
      const index = parseInt(choice);
      if (index >= 0 && index < savedQueries.length) {
        document.getElementById("sqlQuery").value = savedQueries[index].query;
      }
    }
  }

  function clearQuery() {
    if (confirm("Czy na pewno chcesz wyczy≈õciƒá zapytanie?")) {
      document.getElementById("sqlQuery").value = "";
    }
  }

  function exportResults(format) {
    if (!currentResults) {
      alert("Brak wynik√≥w do eksportu");
      return;
    }

    let content, filename, mimeType;

    if (format === "csv") {
      content = convertToCSV(currentResults);
      filename = "bigquery_results.csv";
      mimeType = "text/csv";
    } else if (format === "json") {
      content = JSON.stringify(currentResults, null, 2);
      filename = "bigquery_results.json";
      mimeType = "application/json";
    }

    const blob = new Blob([content], { type: mimeType });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = filename;
    a.click();
    URL.revokeObjectURL(url);
  }

  function convertToCSV(data) {
    if (data.length === 0) return "";

    const columns = Object.keys(data[0]);
    let csv = columns.join(",") + "\n";

    data.forEach((row) => {
      const values = columns.map((col) => {
        const value = row[col];
        return value !== null && value !== undefined ? `"${value}"` : "";
      });
      csv += values.join(",") + "\n";
    });

    return csv;
  }

  function createChart() {
    if (!currentResults || currentResults.length === 0) {
      alert("Brak danych do stworzenia wykresu");
      return;
    }

    // This would open a chart creation interface
    alert("Funkcja tworzenia wykres√≥w bƒôdzie dostƒôpna wkr√≥tce");
  }

  function addToHistory(query, metadata) {
    const historyItem = {
      id: Date.now(),
      query: query.substring(0, 100) + (query.length > 100 ? "..." : ""),
      fullQuery: query,
      timestamp: new Date().toISOString(),
      metadata,
    };

    queryHistory.unshift(historyItem);
    if (queryHistory.length > 20) {
      queryHistory = queryHistory.slice(0, 20);
    }

    localStorage.setItem("bigqueryHistory", JSON.stringify(queryHistory));
    updateHistoryDisplay();
  }

  function updateHistoryDisplay() {
    const historyList = document.getElementById("queryHistoryList");
    historyList.innerHTML = "";

    queryHistory.forEach((item) => {
      const historyItem = document.createElement("div");
      historyItem.className =
        "history-item border border-edge rounded-lg p-3 cursor-pointer hover:border-cyan-400 transition-colors";
      item.style.background = "rgba(0, 0, 0, 0.5)";

      const date = new Date(item.timestamp).toLocaleDateString("pl-PL");
      const time = new Date(item.timestamp).toLocaleTimeString("pl-PL");

      historyItem.innerHTML = `
        <div class="flex justify-between items-start">
          <div class="flex-1">
            <p class="text-primary-foreground text-sm font-medium">${item.query}</p>
            <p class="text-gray-400 text-xs">${date} ${time} ‚Ä¢ ${item.metadata.rowCount} wierszy</p>
          </div>
          <button onclick="deleteFromHistory(${item.id})" class="text-red-400 hover:text-red-300 text-xs ml-2">‚úï</button>
        </div>
      `;

      historyItem.onclick = (e) => {
        if (e.target.tagName !== "BUTTON") {
          document.getElementById("sqlQuery").value = item.fullQuery;
        }
      };

      historyList.appendChild(historyItem);
    });
  }

  function deleteFromHistory(id) {
    event.stopPropagation();
    if (confirm("Czy na pewno chcesz usunƒÖƒá to zapytanie z historii?")) {
      queryHistory = queryHistory.filter((item) => item.id !== id);
      localStorage.setItem("bigqueryHistory", JSON.stringify(queryHistory));
      updateHistoryDisplay();
    }
  }

  // Line counter for SQL editor
  function updateLineCounter() {
    const textarea = document.getElementById("sqlQuery");
    const counter = document.getElementById("lineCounter");

    const text = textarea.value;
    const lines = text.split("\n").length;
    const cursorPos = textarea.selectionStart;
    const textBeforeCursor = text.substring(0, cursorPos);
    const currentLine = textBeforeCursor.split("\n").length;
    const currentCol = textBeforeCursor.split("\n").pop().length + 1;

    counter.textContent = `Linia: ${currentLine}, Kolumna: ${currentCol}`;
  }

  // Initialize
  document.addEventListener("DOMContentLoaded", () => {
    updateHistoryDisplay();

    // Add line counter event listener
    const sqlQuery = document.getElementById("sqlQuery");
    sqlQuery.addEventListener("input", updateLineCounter);
    sqlQuery.addEventListener("click", updateLineCounter);
    sqlQuery.addEventListener("keyup", updateLineCounter);

    // Load quick query if available
    const quickQuery = localStorage.getItem("quickSQLQuery");
    if (quickQuery) {
      document.getElementById("sqlQuery").value = quickQuery;
      localStorage.removeItem("quickSQLQuery");
    }
  });
</script>
