---
// Global Sales Dashboard - Admin Panel
// /admin/sales-dashboard.astro

import Layout from '../../layouts/MyBonzoLayout.astro';

let salesData: any[] = [];
let statsData: any = {};
let errorMessage = '';

try {
  const db = (Astro.locals as any)?.runtime?.env?.DB;
  
  if (db) {
    // Get country stats
    const countryStats = await db.prepare(`
      SELECT 
        country,
        region,
        COUNT(*) as record_count,
        ROUND(SUM(revenue), 2) as total_revenue,
        SUM(units_sold) as total_units,
        COUNT(DISTINCT product_category) as categories,
        AVG(revenue) as avg_revenue
      FROM global_sales 
      GROUP BY country, region
      ORDER BY total_revenue DESC
      LIMIT 20
    `).all();
    
    salesData = countryStats.results || [];
    
    // Get overall stats
    const overallStats = await db.prepare(`
      SELECT 
        COUNT(*) as total_records,
        COUNT(DISTINCT country) as countries_count,
        COUNT(DISTINCT product_category) as categories_count,
        ROUND(SUM(revenue), 2) as total_revenue,
        SUM(units_sold) as total_units,
        ROUND(AVG(revenue), 2) as avg_revenue,
        MAX(date_recorded) as latest_date,
        MIN(date_recorded) as earliest_date
      FROM global_sales
    `).first();
    
    statsData = overallStats || {};
  } else {
    errorMessage = 'Database not available';
  }
} catch (error) {
  errorMessage = `Error loading data: ${error}`;
  console.error('Sales dashboard error:', error);
}
---

<Layout title="Global Sales Dashboard - MyBonzo Admin">
  <div class="min-h-screen bg-gradient-to-br from-gray-900 to-blue-900 p-6">
    <div class="max-w-7xl mx-auto">
      <!-- Header -->
      <div class="mb-8">
        <h1 class="text-4xl font-bold text-white mb-2">üåç Global Sales Dashboard</h1>
        <p class="text-blue-200">Data analytics and business intelligence from worldwide sales</p>
      </div>

      {errorMessage && (
        <div class="bg-red-900/50 border border-red-500 rounded-lg p-4 mb-6">
          <p class="text-red-200">‚ö†Ô∏è {errorMessage}</p>
        </div>
      )}

      <!-- Stats Overview -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="bg-blue-800/30 backdrop-blur-sm rounded-xl p-6 border border-blue-500/30">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-blue-200 text-sm">Total Records</p>
              <p class="text-2xl font-bold text-white">{statsData.total_records?.toLocaleString() || '0'}</p>
            </div>
            <div class="text-blue-400 text-3xl">üìä</div>
          </div>
        </div>

        <div class="bg-green-800/30 backdrop-blur-sm rounded-xl p-6 border border-green-500/30">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-green-200 text-sm">Countries</p>
              <p class="text-2xl font-bold text-white">{statsData.countries_count || '0'}</p>
            </div>
            <div class="text-green-400 text-3xl">üåé</div>
          </div>
        </div>

        <div class="bg-purple-800/30 backdrop-blur-sm rounded-xl p-6 border border-purple-500/30">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-purple-200 text-sm">Total Revenue</p>
              <p class="text-2xl font-bold text-white">${statsData.total_revenue?.toLocaleString() || '0'}</p>
            </div>
            <div class="text-purple-400 text-3xl">üí∞</div>
          </div>
        </div>

        <div class="bg-orange-800/30 backdrop-blur-sm rounded-xl p-6 border border-orange-500/30">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-orange-200 text-sm">Units Sold</p>
              <p class="text-2xl font-bold text-white">{statsData.total_units?.toLocaleString() || '0'}</p>
            </div>
            <div class="text-orange-400 text-3xl">üì¶</div>
          </div>
        </div>
      </div>

      <!-- Data Import Section -->
      <div class="bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-600/30 mb-8">
        <h2 class="text-2xl font-bold text-white mb-4">üì• Data Import</h2>
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <div>
            <h3 class="text-lg font-semibold text-blue-300 mb-3">Manual Import</h3>
            <div class="space-y-3">
              <input 
                type="file" 
                id="csvFile" 
                accept=".csv,.json" 
                class="block w-full text-sm text-gray-300 bg-gray-700 border border-gray-600 rounded-lg cursor-pointer focus:outline-none"
              >
              <button 
                onclick="importData()" 
                class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors"
              >
                Import CSV/JSON Data
              </button>
            </div>
          </div>
          
          <div>
            <h3 class="text-lg font-semibold text-green-300 mb-3">API Endpoint</h3>
            <div class="bg-gray-900 rounded-lg p-3 text-sm">
              <code class="text-green-400">POST /api/admin/sales-data-import</code>
              <div class="text-gray-400 mt-1">Bearer token: mybonzo_admin_2025</div>
            </div>
          </div>
        </div>
      </div>

      <!-- Sales Data Table -->
      <div class="bg-gray-800/50 backdrop-blur-sm rounded-xl border border-gray-600/30 overflow-hidden">
        <div class="p-6 border-b border-gray-600/30">
          <h2 class="text-2xl font-bold text-white">üèÜ Top Countries by Revenue</h2>
        </div>
        
        <div class="overflow-x-auto">
          <table class="w-full">
            <thead class="bg-gray-700/50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Country</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Region</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Records</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Revenue</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Units</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Categories</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Avg Revenue</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-gray-600/30">
              {salesData.map((row, index) => (
                <tr class="hover:bg-gray-700/30 transition-colors">
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex items-center">
                      <span class="text-2xl mr-2">{getCountryFlag(row.country)}</span>
                      <span class="text-white font-medium">{row.country}</span>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-gray-300">{row.region || 'N/A'}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-blue-300">{row.record_count?.toLocaleString()}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-green-300 font-bold">${row.total_revenue?.toLocaleString()}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-purple-300">{row.total_units?.toLocaleString()}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-orange-300">{row.categories}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-yellow-300">${row.avg_revenue?.toLocaleString()}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      {salesData.length === 0 && !errorMessage && (
        <div class="text-center py-12">
          <div class="text-6xl mb-4">üìä</div>
          <h3 class="text-xl text-gray-300 mb-2">No Sales Data Available</h3>
          <p class="text-gray-400">Import some data to get started with analytics</p>
        </div>
      )}
    </div>
  </div>

  <script>
    async function importData() {
      const fileInput = document.getElementById('csvFile') as HTMLInputElement;
      const file = fileInput.files?.[0];
      
      if (!file) {
        alert('Please select a file first');
        return;
      }

      try {
        const text = await file.text();
        let data;
        
        if (file.name.endsWith('.json')) {
          data = JSON.parse(text);
        } else {
          // Simple CSV parser for demo
          const lines = text.split('\n');
          const headers = lines[0].split(',');
          data = { sales: [] };
          
          for (let i = 1; i < lines.length; i++) {
            const values = lines[i].split(',');
            if (values.length >= 4) {
              data.sales.push({
                country: values[0]?.trim(),
                region: values[1]?.trim(),
                category: values[2]?.trim(),
                revenue: parseFloat(values[3]) || 0,
                units: parseInt(values[4]) || 0,
                currency: values[5]?.trim() || 'USD',
                date: values[6]?.trim() || new Date().toISOString().split('T')[0]
              });
            }
          }
        }

        const response = await fetch('/api/admin/sales-data-import', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer mybonzo_admin_2025'
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();
        
        if (result.success) {
          alert(`Success! Imported ${result.imported} records`);
          location.reload();
        } else {
          alert(`Error: ${result.error}`);
        }
      } catch (error) {
        alert(`Import failed: ${error}`);
      }
    }

    function getCountryFlag(country) {
      const flags = {
        'USA': 'üá∫üá∏', 'Germany': 'üá©üá™', 'Japan': 'üáØüáµ', 'UK': 'üá¨üáß',
        'France': 'üá´üá∑', 'Canada': 'üá®üá¶', 'Australia': 'üá¶üá∫', 'Brazil': 'üáßüá∑',
        'India': 'üáÆüá≥', 'China': 'üá®üá≥', 'Russia': 'üá∑üá∫', 'Italy': 'üáÆüáπ',
        'Spain': 'üá™üá∏', 'Netherlands': 'üá≥üá±', 'Sweden': 'üá∏üá™', 'Norway': 'üá≥üá¥'
      };
      return flags[country] || 'üåç';
    }
  </script>
</Layout>

<script>
  {getCountryFlag}
</script>