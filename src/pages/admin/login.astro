---
import UniversalPageLayout from "../../layouts/UniversalPageLayout.astro";
import GlassPanel from "../../layouts/components/GlassPanel.astro";
import CyberpunkButton from "../../layouts/components/CyberpunkButton.astro";

const pageTitle = "Panel Administracyjny MyBonzo";
const pageDescription = "Centrum kontroli i zarzƒÖdzania systemem MyBonzo AI";
const pageQuote = "Z wielkƒÖ mocƒÖ idzie wielka odpowiedzialno≈õƒá.";
const pageAuthor = "Stan Lee";
---

<UniversalPageLayout 
  pageTitle={pageTitle}
  pageDescription={pageDescription}
  pageQuote={pageQuote}
  pageAuthor={pageAuthor}
  showRandomQuote={false}
>
    <!-- Login Section -->
    <div id="loginSection">
        <GlassPanel title="üîê Autoryzacja Administratora" variant="warning" padding="lg">
            <div style="text-align: center; margin-bottom: 20px;">
                <div style="color: rgba(255,255,255,0.8); margin-bottom: 20px;">
                    Dostƒôp tylko dla autoryzowanych administrator√≥w systemu MyBonzo
                </div>
            </div>

            <div style="max-width: 400px; margin: 0 auto;">
                <div style="margin-bottom: 20px;">
                    <label style="display: block; color: #00d9ff; font-weight: 600; margin-bottom: 8px;">Has≈Ço dostƒôpu</label>
                    <input 
                        type="password" 
                        id="adminPassword" 
                        placeholder="Wprowad≈∫ has≈Ço administratora..."
                        style="width: 100%; padding: 12px; background: rgba(0,0,0,0.6); border: 1px solid rgba(0,217,255,0.3); border-radius: 6px; color: white; font-size: 16px;"
                        onkeypress="handleEnterKey(event)"
                    />
                </div>

                <div style="text-align: center;">
                    <CyberpunkButton 
                        text="üöÄ Zaloguj siƒô" 
                        variant="primary" 
                        size="lg"
                        onclick="checkPassword()"
                    />
                </div>

                <div id="errorMessage" style="color: #ff4444; text-align: center; margin-top: 15px; display: none;">
                    Nieprawid≈Çowe has≈Ço! Dostƒôp zabroniony.
                </div>
            </div>
        </GlassPanel>
    </div>

    <!-- Admin Dashboard -->
    <div id="adminDashboard" style="display: none;">
        
        <!-- Admin Stats -->
        <GlassPanel title="üìä Status Systemu" variant="highlight" padding="lg">
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px;">
                <div style="background: rgba(0,217,255,0.1); padding: 15px; border: 1px solid rgba(0,217,255,0.3); border-radius: 8px; text-align: center;">
                    <div style="color: #00d9ff; font-size: 2rem; font-weight: 700;" id="activeUsers">247</div>
                    <div style="color: rgba(255,255,255,0.7);">Aktywni u≈ºytkownicy</div>
                </div>
                <div style="background: rgba(0,217,255,0.1); padding: 15px; border: 1px solid rgba(0,217,255,0.3); border-radius: 8px; text-align: center;">
                    <div style="color: #00d9ff; font-size: 2rem; font-weight: 700;" id="totalRequests">12,384</div>
                    <div style="color: rgba(255,255,255,0.7);">Zapytania dzisiaj</div>
                </div>
                <div style="background: rgba(0,217,255,0.1); padding: 15px; border: 1px solid rgba(0,217,255,0.3); border-radius: 8px; text-align: center;">
                    <div style="color: #00d9ff; font-size: 2rem; font-weight: 700;" id="systemUptime">99.8%</div>
                    <div style="color: rgba(255,255,255,0.7);">Uptime systemu</div>
                </div>
                <div style="background: rgba(0,217,255,0.1); padding: 15px; border: 1px solid rgba(0,217,255,0.3); border-radius: 8px; text-align: center;">
                    <div style="color: #00d9ff; font-size: 2rem; font-weight: 700;" id="aiModels">15</div>
                    <div style="color: rgba(255,255,255,0.7);">Aktywne modele AI</div>
                </div>
            </div>
        </GlassPanel>

        <!-- Admin Actions -->
        <GlassPanel title="‚ö° Szybkie Akcje" variant="default" padding="lg">
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px;">
                
                <!-- User Management -->
                <div style="background: rgba(0,0,0,0.4); border: 1px solid rgba(0,217,255,0.3); border-radius: 12px; padding: 20px;">
                    <h3 style="color: #00d9ff; margin-bottom: 15px; display: flex; align-items: center;">
                        üë• ZarzƒÖdzanie u≈ºytkownikami
                    </h3>
                    <p style="color: rgba(255,255,255,0.7); margin-bottom: 15px; font-size: 0.9rem;">
                        PrzeglƒÖdaj, edytuj i zarzƒÖdzaj kontami u≈ºytkownik√≥w
                    </p>
                    <CyberpunkButton 
                        text="ZarzƒÖdzaj u≈ºytkownikami" 
                        variant="outline" 
                        size="sm"
                        onclick="openUserManagement()"
                    />
                </div>

                <!-- System Monitoring -->
                <div style="background: rgba(0,0,0,0.4); border: 1px solid rgba(0,217,255,0.3); border-radius: 12px; padding: 20px;">
                    <h3 style="color: #00d9ff; margin-bottom: 15px; display: flex; align-items: center;">
                        üìä Monitoring systemu
                    </h3>
                    <p style="color: rgba(255,255,255,0.7); margin-bottom: 15px; font-size: 0.9rem;">
                        Monitoruj wydajno≈õƒá i logi systemowe
                    </p>
                    <CyberpunkButton 
                        text="Zobacz monitoring" 
                        variant="outline" 
                        size="sm"
                        onclick="openSystemMonitoring()"
                    />
                </div>

                <!-- AI Models Management -->
                <div style="background: rgba(0,0,0,0.4); border: 1px solid rgba(0,217,255,0.3); border-radius: 12px; padding: 20px;">
                    <h3 style="color: #00d9ff; margin-bottom: 15px; display: flex; align-items: center;">
                        ü§ñ Modele AI
                    </h3>
                    <p style="color: rgba(255,255,255,0.7); margin-bottom: 15px; font-size: 0.9rem;">
                        Konfiguruj i zarzƒÖdzaj modelami sztucznej inteligencji
                    </p>
                    <CyberpunkButton 
                        text="ZarzƒÖdzaj modelami" 
                        variant="outline" 
                        size="sm"
                        onclick="openAIModels()"
                    />
                </div>

                <!-- Database Management -->
                <div style="background: rgba(0,0,0,0.4); border: 1px solid rgba(0,217,255,0.3); border-radius: 12px; padding: 20px;">
                    <h3 style="color: #00d9ff; margin-bottom: 15px; display: flex; align-items: center;">
                        üóÑÔ∏è Baza danych
                    </h3>
                    <p style="color: rgba(255,255,255,0.7); margin-bottom: 15px; font-size: 0.9rem;">
                        ZarzƒÖdzaj bazƒÖ danych i wykonuj kopie zapasowe
                    </p>
                    <CyberpunkButton 
                        text="ZarzƒÖdzaj bazƒÖ" 
                        variant="outline" 
                        size="sm"
                        onclick="openDatabaseManagement()"
                    />
                </div>

                <!-- Security Center -->
                <div style="background: rgba(0,0,0,0.4); border: 1px solid rgba(0,217,255,0.3); border-radius: 12px; padding: 20px;">
                    <h3 style="color: #00d9ff; margin-bottom: 15px; display: flex; align-items: center;">
                        üîí Centrum bezpiecze≈Ñstwa
                    </h3>
                    <p style="color: rgba(255,255,255,0.7); margin-bottom: 15px; font-size: 0.9rem;">
                        Konfiguruj zabezpieczenia i kontrolƒô dostƒôpu
                    </p>
                    <CyberpunkButton 
                        text="Zabezpieczenia" 
                        variant="warning" 
                        size="sm"
                        onclick="openSecurityCenter()"
                    />
                </div>

                <!-- API Management -->
                <div style="background: rgba(0,0,0,0.4); border: 1px solid rgba(0,217,255,0.3); border-radius: 12px; padding: 20px;">
                    <h3 style="color: #00d9ff; margin-bottom: 15px; display: flex; align-items: center;">
                        üîå API Management
                    </h3>
                    <p style="color: rgba(255,255,255,0.7); margin-bottom: 15px; font-size: 0.9rem;">
                        ZarzƒÖdzaj kluczami API i limitami zapyta≈Ñ
                    </p>
                    <CyberpunkButton 
                        text="ZarzƒÖdzaj API" 
                        variant="outline" 
                        size="sm"
                        onclick="openAPIManagement()"
                    />
                </div>
            </div>
        </GlassPanel>

        <!-- Recent Activity -->
        <GlassPanel title="üïê Ostatnia aktywno≈õƒá" variant="default" padding="lg">
            <div style="max-height: 300px; overflow-y: auto;">
                <div id="activityLog" style="space-y: 10px;">
                    <!-- Activity items will be loaded here -->
                </div>
            </div>
            <div style="text-align: center; margin-top: 20px;">
                <CyberpunkButton 
                    text="Od≈õwie≈º logi" 
                    variant="outline" 
                    size="sm"
                    onclick="refreshActivityLog()"
                />
            </div>
        </GlassPanel>

        <!-- Logout -->
        <div style="text-align: center; margin-top: 30px;">
            <CyberpunkButton 
                text="üö™ Wyloguj siƒô" 
                variant="outline" 
                size="md"
                onclick="logout()"
            />
        </div>
    </div>

    <script>
        async function checkPassword() {
            const password = document.getElementById('adminPassword').value;
            const errorMessage = document.getElementById('errorMessage');
            
            if (!password) {
                showError('Wprowad≈∫ has≈Ço');
                return;
            }
            
            try {
                const response = await fetch('/api/admin/auth', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ password })
                });
                
                const data = await response.json();
                
                if (response.ok && data.authenticated) {
                    // Store session token in localStorage
                    localStorage.setItem('adminSession', data.sessionToken);
                    
                    document.getElementById('loginSection').style.display = 'none';
                    document.getElementById('adminDashboard').style.display = 'block';
                    loadDashboardData();
                } else {
                    showError(data.error || 'Nieprawid≈Çowe has≈Ço');
                }
                
            } catch (error) {
                console.error('Auth error:', error);
                showError('B≈ÇƒÖd po≈ÇƒÖczenia z serwerem');
            }
        }
        
        function showError(message) {
            const errorMessage = document.getElementById('errorMessage');
            errorMessage.textContent = message;
            errorMessage.style.display = 'block';
            setTimeout(() => {
                errorMessage.style.display = 'none';
            }, 3000);
        }

        function handleEnterKey(event) {
            if (event.key === 'Enter') {
                checkPassword();
            }
        }

        function logout() {
            // Clear session
            localStorage.removeItem('adminSession');
            
            document.getElementById('adminDashboard').style.display = 'none';
            document.getElementById('loginSection').style.display = 'block';
            document.getElementById('adminPassword').value = '';
        }
        
        // Check if user is already logged in on page load
        window.addEventListener('load', function() {
            const sessionToken = localStorage.getItem('adminSession');
            if (sessionToken) {
                // In production, validate token with server
                document.getElementById('loginSection').style.display = 'none';
                document.getElementById('adminDashboard').style.display = 'block';
                loadDashboardData();
            }
        });

        function loadDashboardData() {
            // Simulate real-time data updates
            updateStats();
            loadActivityLog();
            
            // Update stats every 30 seconds
            setInterval(updateStats, 30000);
        }

        async function updateStats() {
            try {
                // Pobieranie prawdziwych danych z API
                const response = await fetch('/api/admin/stats', {
                    headers: {
                        'Authorization': 'Bearer HAOS77'
                    }
                });
                
                if (response.ok) {
                    const data = await response.json();
                    
                    document.getElementById('activeUsers').textContent = data.activeUsers || 0;
                    document.getElementById('totalRequests').textContent = (data.totalAPIRequests || 0).toLocaleString();
                    document.getElementById('systemUptime').textContent = data.uptime || '0%';
                    document.getElementById('aiModels').textContent = data.aiModels || 13; // liczba modeli Cloudflare AI
                } else {
                    console.error('Failed to fetch stats:', response.status);
                    // Fallback values je≈õli API nie dzia≈Ça
                    document.getElementById('activeUsers').textContent = '247';
                    document.getElementById('totalRequests').textContent = '12,384';
                    document.getElementById('systemUptime').textContent = '99.8%';
                    document.getElementById('aiModels').textContent = '13';
                }
            } catch (error) {
                console.error('Error updating stats:', error);
                // Fallback values w przypadku b≈Çƒôdu
                document.getElementById('activeUsers').textContent = 'N/A';
                document.getElementById('totalRequests').textContent = 'N/A';
                document.getElementById('systemUptime').textContent = 'N/A';
                document.getElementById('aiModels').textContent = 'N/A';
            }
        }

        function loadActivityLog() {
            const activities = [
                { time: "14:23", action: "Nowy u≈ºytkownik zarejestrowany", type: "info" },
                { time: "14:18", action: "Model AI aktualizowany", type: "success" },
                { time: "14:15", action: "Backup bazy danych zako≈Ñczony", type: "success" },
                { time: "14:12", action: "Alert bezpiecze≈Ñstwa - podejrzana aktywno≈õƒá", type: "warning" },
                { time: "14:08", action: "API call limit przekroczony dla IP: 192.168.1.100", type: "warning" },
                { time: "14:05", action: "System restart zako≈Ñczony pomy≈õlnie", type: "success" }
            ];

            const logContainer = document.getElementById('activityLog');
            logContainer.innerHTML = activities.map(activity => `
                <div style="background: rgba(0,0,0,0.3); border-left: 3px solid ${getActivityColor(activity.type)}; padding: 12px; margin-bottom: 8px; border-radius: 4px;">
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                        <span style="color: white; font-size: 0.9rem;">${activity.action}</span>
                        <span style="color: rgba(255,255,255,0.6); font-size: 0.8rem;">${activity.time}</span>
                    </div>
                </div>
            `).join('');
        }

        function getActivityColor(type) {
            switch(type) {
                case 'success': return '#22c55e';
                case 'warning': return '#f59e0b';
                case 'error': return '#f59e0b';
                default: return '#00d9ff';
            }
        }

        function refreshActivityLog() {
            loadActivityLog();
        }

        // Quick action functions
        function openUserManagement() {
            alert('üöß Modu≈Ç zarzƒÖdzania u≈ºytkownikami w przygotowaniu...');
        }

        function openSystemMonitoring() {
            window.open('/status-workers', '_blank');
        }

        function openAIModels() {
            window.open('/ai-workers-manager', '_blank');
        }

        function openDatabaseManagement() {
            alert('üöß Modu≈Ç zarzƒÖdzania bazƒÖ danych w przygotowaniu...');
        }

        function openSecurityCenter() {
            alert('üöß Centrum bezpiecze≈Ñstwa w przygotowaniu...');
        }

        function openAPIManagement() {
            alert('üöß ZarzƒÖdzanie API w przygotowaniu...');
        }

        // Initialize on load
        document.addEventListener('DOMContentLoaded', function() {
            // Focus on password input
            document.getElementById('adminPassword').focus();
        });
    </script>
</UniversalPageLayout>