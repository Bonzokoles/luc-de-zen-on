---
import Layout from "../layouts/Layout.astro";
---

<Layout title="POLACZEK AGENTS SYSTEM - LUC de ZEN ON">
  <div class="header-with-help">
    <h1 class="page-title">ü§ñ POLACZEK AGENTS SYSTEM</h1>
    <button id="helpButton" class="help-icon">?</button>
  </div>

  <!-- Quick Actions -->
  <div class="quick-actions">
    <a href="/agent-builder-23" class="action-btn primary">
      <span class="btn-icon">üõ†Ô∏è</span>
      <span>Agents Builder 23</span>
    </a>
    <a href="/agent-dashboard" class="action-btn secondary">
      <span class="btn-icon">üìä</span>
      <span>Dashboard</span>
    </a>
    <a href="/agents" class="action-btn secondary">
      <span class="btn-icon">üë•</span>
      <span>Manage Agents</span>
    </a>
  </div>

  <!-- System Status -->
  <div class="system-status">
    <h2>System Status</h2>
    <div class="status-grid">
      <div class="status-card active">
        <div class="status-indicator"></div>
        <h3>Cloudflare Workers</h3>
        <p class="status-text">Operational</p>
        <div class="status-metrics">
          <span>Response Time: 23ms</span>
          <span>Uptime: 99.9%</span>
        </div>
      </div>
      
      <div class="status-card active">
        <div class="status-indicator"></div>
        <h3>Agent Engine</h3>
        <p class="status-text">Running</p>
        <div class="status-metrics">
          <span>Active Agents: 4</span>
          <span>Queue: 0</span>
        </div>
      </div>
      
      <div class="status-card warning">
        <div class="status-indicator"></div>
        <h3>MCP Servers</h3>
        <p class="status-text">Connecting</p>
        <div class="status-metrics">
          <span>Connected: 2/3</span>
          <span>Latency: 45ms</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Agent Templates -->
  <div class="agent-templates">
    <h2>Agent Templates</h2>
    <div class="templates-grid">
      <div class="template-card">
        <div class="template-icon">üíº</div>
        <h3>Business Assistant</h3>
        <p>ZarzƒÖdzanie zadaniami biznesowymi i komunikacjƒÖ</p>
        <div class="template-tools">
          <span class="tool-tag">Email</span>
          <span class="tool-tag">Calendar</span>
          <span class="tool-tag">CRM</span>
        </div>
        <button class="deploy-btn">Deploy Agent</button>
      </div>

      <div class="template-card">
        <div class="template-icon">üìä</div>
        <h3>Data Analyst</h3>
        <p>Analiza danych i generowanie raport√≥w</p>
        <div class="template-tools">
          <span class="tool-tag">BigQuery</span>
          <span class="tool-tag">Charts</span>
          <span class="tool-tag">Export</span>
        </div>
        <button class="deploy-btn">Deploy Agent</button>
      </div>

      <div class="template-card">
        <div class="template-icon">üîç</div>
        <h3>Research Agent</h3>
        <p>Wyszukiwanie i analiza informacji</p>
        <div class="template-tools">
          <span class="tool-tag">Tavily</span>
          <span class="tool-tag">Kaggle</span>
          <span class="tool-tag">Web</span>
        </div>
        <button class="deploy-btn">Deploy Agent</button>
      </div>

      <div class="template-card">
        <div class="template-icon">üé®</div>
        <h3>Creative Agent</h3>
        <p>Tworzenie tre≈õci i obraz√≥w</p>
        <div class="template-tools">
          <span class="tool-tag">GPT</span>
          <span class="tool-tag">Images</span>
          <span class="tool-tag">Content</span>
        </div>
        <button class="deploy-btn">Deploy Agent</button>
      </div>
    </div>
  </div>

  <!-- Integration Examples -->
  <div class="integration-examples">
    <h2>Cloudflare Worker Examples</h2>
    <div class="examples-grid">
      <div class="example-card">
        <h3>ü§ñ AI Bot Worker</h3>
        <pre><code>// Worker endpoint: /api/ai-bot-worker
export default &#123;
  async fetch(request) &#123;
    const aiResponse = await processAIRequest(request);
    return new Response(aiResponse, &#123;
      headers: &#123; 'Content-Type': 'application/json' &#125;
    &#125;);
  &#125;
&#125;</code></pre>
        <a href="/api/ai-bot-worker" class="test-link">Test Endpoint</a>
      </div>

      <div class="example-card">
        <h3>üìä BigQuery Integration</h3>
        <pre><code>// Worker endpoint: /api/bigquery
const query = `SELECT * FROM dataset.table 
WHERE timestamp > CURRENT_TIMESTAMP() - INTERVAL 1 DAY`;
const results = await bigquery.query(query);</code></pre>
        <a href="/api/bigquery" class="test-link">Test Endpoint</a>
      </div>

      <div class="example-card">
        <h3>üîç Tavily Search</h3>
        <pre><code>// Worker endpoint: /api/tavi
const searchResults = await tavily.search(&#123;
  query: userQuery,
  max_results: 10,
  include_domains: ['wikipedia.org', 'github.com']
&#125;);</code></pre>
        <a href="/api/tavi" class="test-link">Test Endpoint</a>
      </div>
    </div>
  </div>

  <!-- Help Modal -->
  <div id="helpModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>POLACZEK AGENTS SYSTEM - Szczeg√≥≈Çowy opis</h2>
        <span id="closeModal" class="close">&times;</span>
      </div>
      <div class="modal-body">
        <p>
          <strong>POLACZEK AGENTS SYSTEM to zaawansowany system zarzƒÖdzania agentami AI zintegrowany z Cloudflare Workers.</strong>
        </p>

        <h3>G≈Ç√≥wne funkcje:</h3>
        <ul>
          <li><strong>Agents Builder 23</strong> - narzƒôdzie do tworzenia i konfiguracji agent√≥w</li>
          <li><strong>Cloudflare Integration</strong> - pe≈Çna integracja z Workers i Edge Computing</li>
          <li><strong>Template System</strong> - gotowe szablony agent√≥w do r√≥≈ºnych zada≈Ñ</li>
          <li><strong>Real-time Monitoring</strong> - monitorowanie statusu i wydajno≈õci w czasie rzeczywistym</li>
        </ul>

        <h3>Typy agent√≥w:</h3>
        <ul>
          <li><strong>Business Assistant</strong> - zarzƒÖdzanie zadaniami biznesowymi</li>
          <li><strong>Data Analyst</strong> - analiza danych i raportowanie</li>
          <li><strong>Research Agent</strong> - wyszukiwanie i analiza informacji</li>
          <li><strong>Creative Agent</strong> - tworzenie tre≈õci i grafik</li>
        </ul>

        <div class="feature-highlight">
          <h3>Cloudflare Workers Integration:</h3>
          <ul>
            <li>‚ö° Edge Computing dla niskich op√≥≈∫nie≈Ñ</li>
            <li>üîÑ Automatyczne skalowanie</li>
            <li>üõ°Ô∏è Wbudowane zabezpieczenia</li>
            <li>üìä Monitoring i analityka</li>
            <li>üåç Globalny zasiƒôg</li>
          </ul>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Help modal functionality
    const helpButton = document.getElementById("helpButton");
    const helpModal = document.getElementById("helpModal");
    const closeModal = document.getElementById("closeModal");

    if (helpButton && helpModal && closeModal) {
      helpButton.addEventListener("click", () => {
        helpModal.style.display = "flex";
      });

      closeModal.addEventListener("click", () => {
        helpModal.style.display = "none";
      });

      helpModal.addEventListener("click", (e) => {
        if (e.target === helpModal) {
          helpModal.style.display = "none";
        }
      });
    }

    // Deploy button functionality
    document.querySelectorAll(".deploy-btn").forEach((btn) => {
      btn.addEventListener("click", (e) => {
        const target = e.target as HTMLButtonElement;
        if (!target) return;

        const templateCard = target.closest(".template-card");
        if (!templateCard) return;

        const templateName = templateCard.querySelector("h3")?.textContent;
        alert(`Deploying ${templateName} agent to Cloudflare Workers...`);
        
        // Simulate deployment
        target.textContent = "Deploying...";
        target.disabled = true;
        
        setTimeout(() => {
          target.textContent = "Deployed ‚úì";
          target.style.background = "#10b981";
        }, 2000);
      });
    });

    // Status update simulation
    setInterval(() => {
      const indicators = document.querySelectorAll(".status-indicator");
      indicators.forEach((indicator) => {
        const htmlIndicator = indicator as HTMLElement;
        const card = htmlIndicator.closest(".status-card");
        
        if (card && card.classList.contains("active")) {
          htmlIndicator.style.opacity = htmlIndicator.style.opacity === "0.5" ? "1" : "0.5";
        }
      });
    }, 1500);
  </script>
</Layout>

<style>
  .quick-actions {
    display: flex;
    gap: 20px;
    margin-bottom: 40px;
    flex-wrap: wrap;
  }

  .action-btn {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 15px 25px;
    border-radius: 10px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .action-btn.primary {
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    color: #ffffff;
    box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
  }

  .action-btn.primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(16, 185, 129, 0.5);
  }

  .action-btn.secondary {
    background: rgba(255, 255, 255, 0.1);
    color: #e0e0e0;
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .action-btn.secondary:hover {
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
  }

  .system-status, .agent-templates, .integration-examples {
    margin-bottom: 50px;
  }

  .system-status h2, .agent-templates h2, .integration-examples h2 {
    color: #ffffff;
    margin-bottom: 25px;
    font-size: 1.5rem;
  }

  .status-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
  }

  .status-card {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 15px;
    padding: 25px;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .status-card h3 {
    color: #ffffff;
    margin-bottom: 10px;
  }

  .status-indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    margin-bottom: 15px;
    transition: all 0.3s ease;
  }

  .status-card.active .status-indicator {
    background: #10b981;
    box-shadow: 0 0 10px rgba(16, 185, 129, 0.5);
  }

  .status-card.warning .status-indicator {
    background: #f59e0b;
    box-shadow: 0 0 10px rgba(245, 158, 11, 0.5);
  }

  .status-text {
    color: #cccccc;
    margin-bottom: 15px;
  }

  .status-metrics {
    display: flex;
    flex-direction: column;
    gap: 5px;
  }

  .status-metrics span {
    color: #999999;
    font-size: 0.9rem;
  }

  .templates-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 25px;
  }

  .template-card {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 15px;
    padding: 25px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
  }

  .template-card:hover {
    transform: translateY(-5px);
    border-color: rgba(16, 185, 129, 0.3);
    box-shadow: 0 15px 40px rgba(16, 185, 129, 0.2);
  }

  .template-icon {
    font-size: 2.5rem;
    margin-bottom: 15px;
  }

  .template-card h3 {
    color: #ffffff;
    margin-bottom: 10px;
  }

  .template-card p {
    color: #cccccc;
    margin-bottom: 15px;
  }

  .template-tools {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
    margin-bottom: 20px;
  }

  .tool-tag {
    background: rgba(16, 185, 129, 0.2);
    color: #10b981;
    padding: 4px 8px;
    border-radius: 8px;
    font-size: 0.75rem;
    font-weight: 500;
  }

  .deploy-btn {
    width: 100%;
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    color: #ffffff;
    border: none;
    padding: 12px;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .deploy-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(16, 185, 129, 0.3);
  }

  .examples-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 25px;
  }

  .example-card {
    background: rgba(255, 255, 255, 0.03);
    border-radius: 15px;
    padding: 25px;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .example-card h3 {
    color: #ffffff;
    margin-bottom: 15px;
    font-size: 1.1rem;
  }

  .example-card pre {
    background: rgba(0, 0, 0, 0.5);
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 15px;
    overflow-x: auto;
  }

  .example-card code {
    color: #10b981;
    font-size: 0.9rem;
    line-height: 1.4;
  }

  .test-link {
    display: inline-block;
    background: rgba(16, 185, 129, 0.2);
    color: #10b981;
    padding: 8px 15px;
    border-radius: 6px;
    text-decoration: none;
    font-size: 0.9rem;
    font-weight: 500;
    transition: all 0.3s ease;
  }

  .test-link:hover {
    background: rgba(16, 185, 129, 0.3);
    color: #ffffff;
  }

  @media (max-width: 768px) {
    .quick-actions {
      flex-direction: column;
    }

    .status-grid, .templates-grid, .examples-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
