---
import MyBonzoLayout from '../../layouts/MyBonzoLayout.astro';
---

<MyBonzoLayout title="Generator Tre≈õci AI - MyBonzo">
  <main class="min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900 text-white">
    <div class="container mx-auto px-4 py-8">
      <!-- Header -->
      <div class="text-center mb-8">
        <h1 class="text-4xl font-bold mb-4 bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent">
          ‚úçÔ∏è Generator Tre≈õci AI
        </h1>
        <p class="text-xl text-gray-300 mb-6">
          AI do generowania artyku≈Ç√≥w, opis√≥w i kontekstowych tekst√≥w
        </p>
      </div>

      <!-- Content Generator Interface -->
      <div class="max-w-4xl mx-auto">
        <div class="bg-black/40 backdrop-blur-md rounded-2xl border border-cyan-500/30 p-6">
          <!-- Content Type Selection -->
          <div class="mb-6">
            <label class="block text-cyan-400 font-bold mb-3">Typ tre≈õci:</label>
            <select id="contentType" class="w-full bg-black/50 border border-cyan-500/30 rounded-xl px-4 py-3 text-white">
              <option value="article">Artyku≈Ç</option>
              <option value="description">Opis produktu</option>
              <option value="blog-post">Post na blog</option>
              <option value="social-media">Post na social media</option>
              <option value="email">E-mail marketing</option>
              <option value="press-release">Komunikat prasowy</option>
            </select>
          </div>

          <!-- Topic Input -->
          <div class="mb-6">
            <label class="block text-cyan-400 font-bold mb-3">Temat:</label>
            <input 
              type="text" 
              id="contentTopic" 
              placeholder="Wpisz temat dla generowanej tre≈õci..."
              class="w-full bg-black/50 border border-cyan-500/30 rounded-xl px-4 py-3 text-white placeholder-gray-400"
            />
          </div>

          <!-- Additional Parameters -->
          <div class="grid md:grid-cols-2 gap-4 mb-6">
            <div>
              <label class="block text-cyan-400 font-bold mb-3">D≈Çugo≈õƒá:</label>
              <select id="contentLength" class="w-full bg-black/50 border border-cyan-500/30 rounded-xl px-4 py-3 text-white">
                <option value="short">Kr√≥tka (200-400 s≈Ç√≥w)</option>
                <option value="medium">≈örednia (400-800 s≈Ç√≥w)</option>
                <option value="long">D≈Çuga (800-1500 s≈Ç√≥w)</option>
              </select>
            </div>
            
            <div>
              <label class="block text-cyan-400 font-bold mb-3">Ton:</label>
              <select id="contentTone" class="w-full bg-black/50 border border-cyan-500/30 rounded-xl px-4 py-3 text-white">
                <option value="professional">Profesjonalny</option>
                <option value="casual">Swobodny</option>
                <option value="friendly">Przyjazny</option>
                <option value="authoritative">Autorytatywny</option>
                <option value="creative">Kreatywny</option>
              </select>
            </div>
          </div>

          <!-- Keywords -->
          <div class="mb-6">
            <label class="block text-cyan-400 font-bold mb-3">S≈Çowa kluczowe (opcjonalne):</label>
            <input 
              type="text" 
              id="contentKeywords" 
              placeholder="Wpisz s≈Çowa kluczowe oddzielone przecinkami..."
              class="w-full bg-black/50 border border-cyan-500/30 rounded-xl px-4 py-3 text-white placeholder-gray-400"
            />
          </div>

          <!-- Generate Button -->
          <button 
            id="generateContent"
            class="w-full bg-gradient-to-r from-cyan-500 to-purple-500 text-white px-6 py-4 rounded-xl font-bold hover:from-cyan-600 hover:to-purple-600 transition-all duration-300 mb-6"
          >
            üöÄ Generuj Tre≈õƒá
          </button>

          <!-- Generated Content Display -->
          <div id="generatedContent" class="hidden">
            <h3 class="text-xl font-bold text-cyan-400 mb-4">Wygenerowana tre≈õƒá:</h3>
            <div id="contentOutput" class="bg-black/30 rounded-xl p-6 border border-cyan-500/20 text-gray-200 whitespace-pre-wrap"></div>
            
            <!-- Copy and Download Options -->
            <div class="flex gap-4 mt-4">
              <button 
                id="copyContent"
                class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg transition-colors"
              >
                üìã Kopiuj
              </button>
              <button 
                id="downloadContent"
                class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors"
              >
                üì• Pobierz jako TXT
              </button>
            </div>
          </div>

          <!-- Loading Indicator -->
          <div id="loadingIndicator" class="hidden text-center py-4">
            <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-cyan-400"></div>
            <p class="mt-2 text-cyan-400">Generowanie tre≈õci...</p>
          </div>
        </div>
      </div>

      <!-- Features Info -->
      <div class="grid md:grid-cols-3 gap-6 mt-8">
        <div class="bg-black/30 backdrop-blur-md rounded-xl p-6 border border-cyan-500/20">
          <h3 class="text-xl font-bold text-cyan-400 mb-3">üéØ Inteligentne Generowanie</h3>
          <p class="text-gray-300">
            Wykorzystanie modeli Gemini AI do tworzenia wysokiej jako≈õci tre≈õci
          </p>
        </div>
        
        <div class="bg-black/30 backdrop-blur-md rounded-xl p-6 border border-purple-500/20">
          <h3 class="text-xl font-bold text-purple-400 mb-3">üé® Personalizacja</h3>
          <p class="text-gray-300">
            Mo≈ºliwo≈õƒá dostosowania tonu, d≈Çugo≈õci i stylu generowanej tre≈õci
          </p>
        </div>
        
        <div class="bg-black/30 backdrop-blur-md rounded-xl p-6 border border-green-500/20">
          <h3 class="text-xl font-bold text-green-400 mb-3">‚ö° Szybko≈õƒá</h3>
          <p class="text-gray-300">
            B≈Çyskawiczne generowanie tre≈õci z mo≈ºliwo≈õciƒÖ eksportu
          </p>
        </div>
      </div>

      <!-- Navigation -->
      <div class="text-center mt-8">
        <a href="/" class="inline-block bg-gradient-to-r from-cyan-500 to-purple-500 text-white px-6 py-3 rounded-xl font-bold hover:from-cyan-600 hover:to-purple-600 transition-all duration-300">
          ‚Üê Powr√≥t do g≈Ç√≥wnej
        </a>
      </div>
    </div>
  </main>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const generateBtn = document.getElementById('generateContent');
      const loadingIndicator = document.getElementById('loadingIndicator');
      const generatedContent = document.getElementById('generatedContent');
      const contentOutput = document.getElementById('contentOutput');
      const copyBtn = document.getElementById('copyContent');
      const downloadBtn = document.getElementById('downloadContent');

      generateBtn?.addEventListener('click', async () => {
        const contentType = (document.getElementById('contentType') as HTMLSelectElement)?.value;
        const topic = (document.getElementById('contentTopic') as HTMLInputElement)?.value;
        const length = (document.getElementById('contentLength') as HTMLSelectElement)?.value;
        const tone = (document.getElementById('contentTone') as HTMLSelectElement)?.value;
        const keywords = (document.getElementById('contentKeywords') as HTMLInputElement)?.value;

        if (!topic.trim()) {
          alert('Proszƒô wpisaƒá temat dla generowanej tre≈õci');
          return;
        }

        // Show loading
        loadingIndicator?.classList.remove('hidden');
        generatedContent?.classList.add('hidden');

        try {
          const response = await fetch('/api/generate-content', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              contentType,
              topic,
              length,
              tone,
              keywords: keywords.split(',').map(k => k.trim()).filter(k => k)
            }),
          });

          const data = await response.json();

          if (data.success) {
            contentOutput!.textContent = data.content;
            generatedContent?.classList.remove('hidden');
          } else {
            alert('B≈ÇƒÖd generowania tre≈õci: ' + data.message);
          }
        } catch (error) {
          console.error('Error generating content:', error);
          alert('B≈ÇƒÖd po≈ÇƒÖczenia z API');
        } finally {
          loadingIndicator?.classList.add('hidden');
        }
      });

      copyBtn?.addEventListener('click', async () => {
        try {
          await navigator.clipboard.writeText(contentOutput?.textContent || '');
          copyBtn.textContent = '‚úÖ Skopiowano!';
          setTimeout(() => {
            copyBtn.textContent = 'üìã Kopiuj';
          }, 2000);
        } catch (error) {
          alert('B≈ÇƒÖd kopiowania do schowka');
        }
      });

      downloadBtn?.addEventListener('click', () => {
        const content = contentOutput?.textContent || '';
        const blob = new Blob([content], { type: 'text/plain' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'wygenerowana-tresc.txt';
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
      });
    });
  </script>
</MyBonzoLayout>