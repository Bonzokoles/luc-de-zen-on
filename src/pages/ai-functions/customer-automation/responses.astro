---
import MyBonzoLayout from "../../../layouts/MyBonzoLayout.astro";
import DecorativeLines from "../../../components/DecorativeLines.astro";
---

<MyBonzoLayout siteTitle="Auto-Odpowiedzi AI - Customer Automation | KAROL LISSON">
  <DecorativeLines />

  <main class="min-h-svh relative z-10">
    <div class="fixed inset-0 bg-[#0a0a0a]">
      <div class="absolute inset-0 bg-gradient-to-br from-cyan-900/20 via-black to-black"></div>
      <div class="cyber-grid absolute inset-0"></div>
    </div>

    <section class="relative z-20 border-b border-[#333333] pt-20">
      <div class="max-w-6xl mx-auto px-4 py-8">
        <div class="flex items-center justify-between mb-8">
          <div>
            <h1 class="text-4xl md:text-5xl font-bold text-[#00ffff] mb-2 uppercase tracking-wider font-mono">
              Auto-Odpowiedzi AI
            </h1>
            <p class="text-[#a0a0a0] text-lg font-['Kenyan_Coffee']">
              Inteligentne odpowiedzi dostosowane do kontekstu i profilu klienta
            </p>
          </div>
          <div class="text-right text-sm text-[#a0a0a0] font-mono">
            <div class="mb-1">
              ACCURACY: <span class="text-[#00ffff]">96.8%</span>
            </div>
            <div>SENT: <span class="text-[#ff6699] animate-pulse">1,247 dzisiaj</span></div>
          </div>
        </div>
        <div class="flex gap-4 mb-8">
          <a href="../" class="px-4 py-2 bg-[#111111] border border-[#333333] text-[#00ffff] hover:brightness-125 transition-all duration-300 font-mono uppercase tracking-wide text-sm"> ‚Üê Customer Automation </a>
          <a href="../qualification/" class="px-4 py-2 bg-[#111111] border border-[#333333] text-[#e0e0e0] hover:text-[#00ffff] hover:brightness-125 transition-all duration-300 font-mono uppercase tracking-wide text-sm"> Kwalifikacja </a>
          <a href="../crm/" class="px-4 py-2 bg-[#111111] border border-[#333333] text-[#e0e0e0] hover:text-[#00ffff] hover:brightness-125 transition-all duration-300 font-mono uppercase tracking-wide text-sm"> Integracja CRM </a>
        </div>
      </div>
    </section>

    <section class="relative z-20 py-12">
      <div class="max-w-6xl mx-auto px-4">
        <div class="grid lg:grid-cols-2 gap-8">
          <div class="bg-gradient-to-br from-[#1a1a1a] to-[#111111] border border-[#333333] p-6 rounded-sm">
            <h3 class="text-[#00ffff] font-mono text-xl uppercase tracking-wide mb-6">ü§ñ Konfiguracja Odpowiedzi</h3>
            <div class="space-y-6">
              <div>
                <label for="responseType" class="block text-[#00ffff] font-mono text-sm uppercase mb-2">Typ Odpowiedzi</label>
                <select id="responseType" class="w-full bg-[#0a0a0a] border border-[#333333] text-[#e0e0e0] p-3 focus:border-[#00ffff] focus:outline-none">
                  <option>Zapytanie o cennik</option>
                  <option>Pro≈õba o demo</option>
                  <option>Pytanie techniczne</option>
                  <option>Reklamacja</option>
                  <option>Og√≥lne zapytanie</option>
                </select>
              </div>
              <div>
                <label for="leadScore" class="block text-[#00ffff] font-mono text-sm uppercase mb-2">Score Leada (0-100)</label>
                <input type="range" min="0" max="100" value="75" class="w-full h-2 bg-[#333333] rounded-lg appearance-none cursor-pointer slider" id="leadScore"/>
                <div class="flex justify-between text-xs text-[#a0a0a0] mt-1">
                  <span>COLD</span>
                  <span id="scoreValue" class="text-[#00ffff] font-bold">75</span>
                  <span>HOT</span>
                </div>
              </div>
              <div>
                <label for="industry" class="block text-[#00ffff] font-mono text-sm uppercase mb-2">Bran≈ºa</label>
                <select id="industry" class="w-full bg-[#0a0a0a] border border-[#333333] text-[#e0e0e0] p-3 focus:border-[#00ffff] focus:outline-none">
                  <option>Technologia</option>
                  <option>E-commerce</option>
                  <option>Finanse</option>
                  <option>Medycyna</option>
                  <option>Edukacja</option>
                  <option>Inne</option>
                </select>
              </div>
              <div>
                <label class="block text-[#00ffff] font-mono text-sm uppercase mb-2">Ton Odpowiedzi</label>
                <div id="tone-options" class="grid grid-cols-3 gap-2">
                  <label class="flex items-center">
                    <input type="radio" name="tone" value="professional" class="sr-only" />
                    <div class="w-full p-2 bg-[#0a0a0a] border border-[#333333] text-center cursor-pointer hover:border-[#00ffff] transition-all duration-300"><span class="text-[#e0e0e0] text-xs">Profesjonalny</span></div>
                  </label>
                  <label class="flex items-center">
                    <input type="radio" name="tone" value="friendly" class="sr-only" checked />
                    <div class="w-full p-2 bg-[#0a0a0a] border border-[#00ffff] text-center cursor-pointer hover:border-[#00ffff] transition-all duration-300"><span class="text-[#00ffff] text-xs">Przyjazny</span></div>
                  </label>
                  <label class="flex items-center">
                    <input type="radio" name="tone" value="urgent" class="sr-only" />
                    <div class="w-full p-2 bg-[#0a0a0a] border border-[#333333] text-center cursor-pointer hover:border-[#00ffff] transition-all duration-300"><span class="text-[#e0e0e0] text-xs">Pilny</span></div>
                  </label>
                </div>
              </div>
              <button id="generate-btn" class="w-full bg-[#00ffff] text-[#0a0a0a] py-3 px-6 font-bold hover:brightness-125 transition-all duration-300 font-mono uppercase tracking-wide">üöÄ Generuj Odpowied≈∫</button>
            </div>
          </div>

          <div class="bg-gradient-to-br from-[#1a1a1a] to-[#111111] border border-[#333333] p-6 rounded-sm">
            <h3 class="text-[#00ffff] font-mono text-xl uppercase tracking-wide mb-6">üìß Wygenerowana Odpowied≈∫</h3>
            <div id="response-output" class="bg-[#0a0a0a] border border-[#333333] p-4 rounded-sm mb-6 min-h-[300px]">
              <div id="response-placeholder" class="text-gray-500">Kliknij "Generuj Odpowied≈∫", aby AI stworzy≈Ço tre≈õƒá...</div>
              <div id="response-loading" class="hidden text-cyan-400">Analizujƒô zapytanie i generujƒô odpowied≈∫...</div>
              <div id="response-error" class="hidden text-red-500"></div>
              <div id="response-content"></div>
            </div>
            <div id="response-actions" class="flex gap-4 hidden">
              <button class="flex-1 bg-[#ff6699] text-[#0a0a0a] py-2 px-4 font-bold hover:brightness-125 transition-all duration-300 font-mono uppercase text-sm">Wy≈õlij</button>
              <button class="flex-1 bg-[#111111] border border-[#333333] text-[#e0e0e0] py-2 px-4 font-bold hover:border-[#00ffff] hover:text-[#00ffff] transition-all duration-300 font-mono uppercase text-sm">Edytuj</button>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <style>
    .cyber-grid { background-image: linear-gradient(rgba(0, 255, 255, 0.1) 1px, transparent 1px), linear-gradient(90deg, rgba(0, 255, 255, 0.1) 1px, transparent 1px); background-size: 20px 20px; }
    .slider::-webkit-slider-thumb { appearance: none; height: 20px; width: 20px; background: #00ffff; cursor: pointer; border-radius: 50%; }
    .slider::-moz-range-thumb { height: 20px; width: 20px; background: #00ffff; cursor: pointer; border-radius: 50%; border: none; }
    input[type='radio']:checked + div { border-color: #00ffff; box-shadow: 0 0 10px rgba(0, 255, 255, 0.5); }
    input[type='radio']:checked + div > span { color: #00ffff; }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const slider = document.getElementById('leadScore') as HTMLInputElement;
      const scoreValue = document.getElementById('scoreValue');
      const generateBtn = document.getElementById('generate-btn');
      const responsePlaceholder = document.getElementById('response-placeholder');
      const responseLoading = document.getElementById('response-loading');
      const responseError = document.getElementById('response-error');
      const responseContent = document.getElementById('response-content');
      const responseActions = document.getElementById('response-actions');
      const toneOptions = document.getElementById('tone-options');

      // Slider value update
      if (slider && scoreValue) {
        slider.addEventListener('input', () => { scoreValue.textContent = slider.value; });
      }

      // Tone selection visual update
      toneOptions.addEventListener('change', (e) => {
          const target = e.target as HTMLInputElement;
          if (target.name === 'tone') {
              // Reset all borders
              document.querySelectorAll('input[name="tone"] + div').forEach(div => {
                  div.classList.remove('border-[#00ffff]');
                  div.classList.add('border-[#333333]');
                  div.querySelector('span').classList.remove('text-[#00ffff]');
                  div.querySelector('span').classList.add('text-[#e0e0e0]');
              });
              // Highlight selected
              const selectedDiv = target.nextElementSibling;
              selectedDiv.classList.add('border-[#00ffff]');
              selectedDiv.classList.remove('border-[#333333]');
              selectedDiv.querySelector('span').classList.add('text-[#00ffff]');
              selectedDiv.querySelector('span').classList.remove('text-[#e0e0e0]');
          }
      });

      // Generate button click handler
      generateBtn.addEventListener('click', async () => {
        // 1. Collect data
        const responseType = (document.getElementById('responseType') as HTMLSelectElement).value;
        const leadScore = parseInt(slider.value);
        const industry = (document.getElementById('industry') as HTMLSelectElement).value;
        const tone = (document.querySelector('input[name="tone"]:checked') as HTMLInputElement).value;

        // 2. Set UI states
        responsePlaceholder.classList.add('hidden');
        responseError.classList.add('hidden');
        responseContent.innerHTML = '';
        responseActions.classList.add('hidden');
        responseLoading.classList.remove('hidden');
        generateBtn.disabled = true;
        (generateBtn.firstChild as Text).data = '‚è≥ Generowanie...';

        try {
          // 3. Call API
          const response = await fetch('/api/auto-response', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ responseType, leadScore, industry, tone })
          });

          if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.error || `B≈ÇƒÖd serwera: ${response.status}`);
          }

          const data = await response.json();

          // 4. Display results
          if (data.success) {
            responseContent.innerHTML = `<pre class="whitespace-pre-wrap font-['Kenyan_Coffee'] text-base">${data.text}</pre>`;
            responseActions.classList.remove('hidden');
          } else {
            throw new Error(data.error || 'Nieznany b≈ÇƒÖd API');
          }

        } catch (err) {
          responseError.textContent = `‚ö†Ô∏è ${err.message}`;
          responseError.classList.remove('hidden');
        } finally {
          // 5. Reset UI states
          responseLoading.classList.add('hidden');
          generateBtn.disabled = false;
          (generateBtn.firstChild as Text).data = 'üöÄ Generuj Odpowied≈∫';
        }
      });
    });
  </script>
</MyBonzoLayout>
