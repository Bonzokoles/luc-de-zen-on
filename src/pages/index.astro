---
import MyBonzoLayout from "../layouts/MyBonzoLayout.astro";
import RandomQuote from "../../Bielik/DO_WSTAWIENIA/RandomQuote.astro";
import ImageGeneratorWidget from "../components/ImageGeneratorWidget.svelte";
import PolaczekWidget from "../components/PolaczekWidget.svelte";
import MainChatWidget from "../components/MainChatWidget.svelte";
import AiHelpAssistant from "../components/AiHelpAssistant.svelte";
---

<MyBonzoLayout siteTitle="AI Workers Platform | KAROL LISSON">
  <main class="min-h-svh">
    <!-- Header Section -->
    <section class="border border-edge">
      <div class="max-w-6xl mx-auto border-x border-edge">
        <div class="flex justify-between max-h-72 min-h-64">
          <!-- Left corner - O_MNIE content -->
          <div class="mt-auto max-w-xs">
            <div class="text-edge text-sm italic px-2">
              Tworzę nowoczesne rozwiązania, które łączą sztuczną inteligencję z
              automatyzacją, aby użytkownicy mogli korzystać z mocy AI w prosty
              i intuicyjny sposób.
            </div>
          </div>
          <span class="mt-auto">
            <RandomQuote />
            <span
              style=""
              class="text-edge block px-2 text-xl font-semibold tracking-[0.3em]"
            >
              AUG 2025
            </span>
          </span>
        </div>
      </div>
    </section>

    <!-- Navigation Section -->
    <section class="border border-edge">
      <div class="max-w-6xl mx-auto border-x border-edge">
        <div class="flex flex-row p-2">
          <a class="hover:brightness-125" href="/">
            <h1 class="text-4xl sm:text-5xl">KAROL LISSON</h1>
            <h2 class="text-2xl sm:text-3xl">MY_Bonzo_AI_ZEnon_HuB</h2>
          </a>

          <div class="hidden ml-auto gap-4 md:gap-0 md:flex md:flex-col">
            <a
              class="ml-auto hover:brightness-125 duration-200"
              href="mailto:LissonKarol.msa@gmail.com"
            >
              LissonKarol.msa@gmail.com
              <svg
                style="--rotation: -45deg"
                class="stroke-primary-foreground inline aspect-square w-3 h-auto fill-transparent rotate-[var(--rotation)]"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M3 12L21 12M21 12L12.5 3.5M21 12L12.5 20.5"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
            </a>
            <div class="flex flex-row-reverse flex-wrap gap-4">
              <a
                class="hover:brightness-125 duration-200"
                href="https://www.linkedin.com/in/linkedinHandle"
              >
                LinkedIn
                <svg
                  style="--rotation: -45deg"
                  class="stroke-primary-foreground inline aspect-square w-3 h-auto fill-transparent rotate-[var(--rotation)]"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M3 12L21 12M21 12L12.5 3.5M21 12L12.5 20.5"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"></path>
                </svg>
              </a>
              <a
                class="hover:brightness-125 duration-200"
                href="https://www.github.com/githubUsername"
              >
                GitHub
                <svg
                  style="--rotation: -45deg"
                  class="stroke-primary-foreground inline aspect-square w-3 h-auto fill-transparent rotate-[var(--rotation)]"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M3 12L21 12M21 12L12.5 3.5M21 12L12.5 20.5"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"></path>
                </svg>
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- AI Workers Section - Centered -->
    <section
      class="ai-workers-section flex items-center justify-center py-16"
      id="ai-workers"
      data-astro-cid-my52qgmw
    >
      <div class="section-container" data-astro-cid-my52qgmw>
        <h2 class="system-title" data-astro-cid-my52qgmw>SYSTEM ZAAWANSOWANEJ AUTOMATYZACJI AI</h2>
        <p class="section-description" data-astro-cid-my52qgmw>
          Kompleksowe rozwiązania automatyzacji z wykorzystaniem sztucznej inteligencji
        </p>

        <!-- Dashboard Buttons Section (only buttons after login) -->
        <div class="dashboard-buttons-section hidden" id="dashboardButtons" data-astro-cid-my52qgmw>
          <a href="/dashboard/klienci" class="dashboard-btn" data-astro-cid-my52qgmw>KLIENCI_DSH_BON</a>
          <a href="/dashboard/statystyki" class="dashboard-btn" data-astro-cid-my52qgmw>AKYW_STATYSTIC</a>
          <a href="/dashboard/prywatne" class="dashboard-btn" data-astro-cid-my52qgmw>PRIV_STAFF</a>
        </div>

        <!-- Small Tags Section -->
        <div class="tags-section" data-astro-cid-my52qgmw>
          <button
            class="tag-btn"
            onclick="window.open('/polaczek-agents-system', '_blank')"
            data-astro-cid-my52qgmw>POLACZEK_AGENT_SYS_23</button
          >
          <button
            class="tag-btn"
            onclick="window.open('/hub/ai-agent-s', '_blank')"
            data-astro-cid-my52qgmw>BIELIK</button
          >
          <button
            class="tag-btn"
            onclick="window.open('/workers', '_blank')"
            data-astro-cid-my52qgmw>ZENON</button
          >
          <button
            class="tag-btn"
            onclick="window.open('/klf-sheed-shop', '_blank')"
            data-astro-cid-my52qgmw>KLF_SHEED_SHOOP</button
          >
        </div>

        <div class="workers-grid" data-astro-cid-my52qgmw>
          <!-- Image Generator -->
          <div class="worker-card" data-worker="image" data-astro-cid-my52qgmw>
            <h3 class="worker-title" data-astro-cid-my52qgmw>
              Generator Obrazów
            </h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Twórz niesamowite obrazy z tekstu używając Flux-1 Schnell
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw>Flux AI</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>512-1024px</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Tłumaczenie PL</span
              >
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <input
                type="text"
                placeholder="Opisz obraz..."
                class="quick-prompt"
                id="imagePrompt"
                data-astro-cid-my52qgmw
              />
              <button
                class="action-btn primary"
                onclick="openImageGenerator()"
                data-astro-cid-my52qgmw>Generuj</button
              >
              <button
                class="action-btn secondary"
                onclick="window.open('/image-generator', '_blank')"
                data-astro-cid-my52qgmw>Otwórz</button
              >
            </div>
          </div>

          <!-- AI Chatbot -->
          <div class="worker-card" data-worker="chat" data-astro-cid-my52qgmw>
            <h3 class="worker-title" data-astro-cid-my52qgmw>AI Chatbot</h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Inteligentny asystent do rozmów i odpowiadania na pytania
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw>OpenAI GPT</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Język polski</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw>Kontekst</span>
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <input
                type="text"
                placeholder="Zadaj pytanie..."
                class="quick-prompt"
                id="chatPrompt"
                data-astro-cid-my52qgmw
              />
              <button
                class="action-btn primary"
                onclick="openChatbot()"
                data-astro-cid-my52qgmw>Chat</button
              >
              <button
                class="action-btn secondary"
                onclick="window.open('/chatbot', '_blank')"
                data-astro-cid-my52qgmw>Otwórz</button
              >
            </div>
          </div>

          <!-- BigQuery Analytics -->
          <div
            class="worker-card"
            data-worker="bigquery"
            data-astro-cid-my52qgmw
          >
            <h3 class="worker-title" data-astro-cid-my52qgmw>
              BigQuery Analytics
            </h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Analizuj dane z Google BigQuery, wykonuj zapytania SQL
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Google Cloud</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw>SQL Query</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>Analytics</span>
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <input
                type="text"
                placeholder="SELECT * FROM..."
                class="quick-prompt"
                id="bigqueryPrompt"
                data-astro-cid-my52qgmw
              />
              <button
                class="action-btn primary"
                onclick="openBigQuery()"
                data-astro-cid-my52qgmw>Analizuj</button
              >
              <button
                class="action-btn secondary"
                onclick="window.open('/bigquery-analytics', '_blank')"
                data-astro-cid-my52qgmw>Otwórz</button
              >
            </div>
          </div>

          <!-- Kaggle Datasets -->
          <div class="worker-card" data-worker="kaggle" data-astro-cid-my52qgmw>
            <h3 class="worker-title" data-astro-cid-my52qgmw>
              Kaggle Datasets
            </h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Przeszukuj zbiory danych, konkursy i profile Kaggle
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Machine Learning</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw>Datasets</span>
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Competitions</span
              >
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <input
                type="text"
                placeholder="machine learning..."
                class="quick-prompt"
                id="kagglePrompt"
                data-astro-cid-my52qgmw
              />
              <button
                class="action-btn primary"
                onclick="openKaggle()"
                data-astro-cid-my52qgmw>Wyszukaj</button
              >
              <button
                class="action-btn secondary"
                onclick="window.open('/kaggle-datasets', '_blank')"
                data-astro-cid-my52qgmw>Otwórz</button
              >
            </div>
          </div>

          <!-- Tavily Search -->
          <div class="worker-card" data-worker="tavily" data-astro-cid-my52qgmw>
            <h3 class="worker-title" data-astro-cid-my52qgmw>
              Tavily AI Search
            </h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Zaawansowane wyszukiwanie internetowe powered by AI
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw>AI Search</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>Real-time</span>
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Deep Analysis</span
              >
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <input
                type="text"
                placeholder="wyszukaj w sieci..."
                class="quick-prompt"
                id="tavilyPrompt"
                data-astro-cid-my52qgmw
              />
              <button
                class="action-btn primary"
                onclick="openTavily()"
                data-astro-cid-my52qgmw>Szukaj</button
              >
              <button
                class="action-btn secondary"
                onclick="window.open('/tavily-search', '_blank')"
                data-astro-cid-my52qgmw>Otwórz</button
              >
            </div>
          </div>

          <!-- Status Monitor -->
          <div class="worker-card" data-worker="status" data-astro-cid-my52qgmw>
            <h3 class="worker-title" data-astro-cid-my52qgmw>
              Status Workerów
            </h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Sprawdź status i dostępność wszystkich API workerów
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Health Check</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw>Monitoring</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw>API Status</span
              >
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <div
                class="status-indicator"
                id="overallStatus"
                data-astro-cid-my52qgmw
              >
                <span class="status-dot" data-astro-cid-my52qgmw></span>
                <span data-astro-cid-my52qgmw>Częściowo online (1/5)</span>
              </div>
              <button
                class="action-btn primary"
                onclick="checkAllStatus()"
                data-astro-cid-my52qgmw>Sprawdź wszystkie</button
              >
              <button
                class="action-btn secondary"
                onclick="window.open('/dashboard', '_blank')"
                data-astro-cid-my52qgmw>Monitor</button
              >
            </div>
          </div>

          <!-- API Testing Card -->
          <div
            class="worker-card"
            data-worker="api-tests"
            data-astro-cid-my52qgmw
          >
            <h3 class="worker-title" data-astro-cid-my52qgmw>🧪 API Tests</h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Testuj wszystkie Workers API endpoints i sprawdź połączenia
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw>Testing</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>API</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>Debug</span>
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <button
                class="action-btn primary"
                onclick="runAllAPITests()"
                data-astro-cid-my52qgmw>Testuj wszystkie API</button
              >
              <button
                class="action-btn secondary"
                onclick="openAPITestConsole()"
                data-astro-cid-my52qgmw>Konsola testów</button
              >
            </div>
          </div>

          <!-- Flowise AI Card -->
          <div
            class="worker-card"
            data-worker="flowise"
            data-astro-cid-my52qgmw
          >
            <h3 class="worker-title" data-astro-cid-my52qgmw>🧠 Flowise AI</h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Visual AI workflow builder with drag-and-drop interface
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw>Visual Builder</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>Workflows</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>Integration</span>
            </div>
          <div class="worker-actions" data-astro-cid-my52qgmw>
            <button
              class="action-btn primary"
              onclick="window.open('https://flowise.ai', '_blank')"
              data-astro-cid-my52qgmw>Open Flowise</button
            >
            <button
              class="action-btn secondary"
              onclick="launchFlowise()"
              data-astro-cid-my52qgmw>Launch</button
            >
          </div>
        </div>

        <!-- Activepieces Card -->
        <div
          class="worker-card"
          data-worker="activepieces"
          data-astro-cid-my52qgmw
        >
          <h3 class="worker-title" data-astro-cid-my52qgmw>⚡ Activepieces</h3>
          <p class="worker-description" data-astro-cid-my52qgmw>
            Open-source automation platform for workflow automation
          </p>
          <div class="worker-features" data-astro-cid-my52qgmw>
            <span class="feature-tag" data-astro-cid-my52qgmw>Automation</span>
            <span class="feature-tag" data-astro-cid-my52qgmw>Open Source</span>
            <span class="feature-tag" data-astro-cid-my52qgmw>Workflows</span>
          </div>
          <div class="worker-actions" data-astro-cid-my52qgmw>
            <button
              class="action-btn primary"
              onclick="window.open('https://activepieces.com', '_blank')"
              data-astro-cid-my52qgmw>Open Activepieces</button
            >
            <button
              class="action-btn secondary"
              onclick="launchActivepieces()"
              data-astro-cid-my52qgmw>Launch</button
            >
          </div>
        </div>
      </div>

      <!-- 9 New Functions Grid -->
      <div class="additional-functions-section" data-astro-cid-my52qgmw>
        <h3 class="additional-title" data-astro-cid-my52qgmw>
          ZAAWANSOWANE FUNKCJE AI
        </h3>
        <div class="additional-grid" data-astro-cid-my52qgmw>
          <!-- Row 1 -->
          <div class="feature-tile" data-function="function2" data-astro-cid-my52qgmw>
            <div class="feature-icon" data-astro-cid-my52qgmw>🎯</div>
            <div class="feature-title" data-astro-cid-my52qgmw>Personalizowane rekomendacje</div>
            <div class="feature-desc" data-astro-cid-my52qgmw>System rekomendacyjny produktów i usług z analizą preferencji użytkowników</div>
          </div>
          
          <div class="feature-tile" data-function="function3" data-astro-cid-my52qgmw>
            <div class="feature-icon" data-astro-cid-my52qgmw>📞</div>
            <div class="feature-title" data-astro-cid-my52qgmw>Automatyzacja obsługi klienta</div>
            <div class="feature-desc" data-astro-cid-my52qgmw>AI do kwalifikacji leadów i automatycznych odpowiedzi z integracją CRM</div>
          </div>
          
          <div class="feature-tile" data-function="function4" data-astro-cid-my52qgmw>
            <div class="feature-icon" data-astro-cid-my52qgmw>📊</div>
            <div class="feature-title" data-astro-cid-my52qgmw>Monitorowanie i raportowanie</div>
            <div class="feature-desc" data-astro-cid-my52qgmw>Dashboard z automatycznym generowaniem raportów i alertami o anomaliach</div>
          </div>

          <!-- Row 2 -->
          <div class="feature-tile" data-function="function6" data-astro-cid-my52qgmw>
            <div class="feature-icon" data-astro-cid-my52qgmw>🔔</div>
            <div class="feature-title" data-astro-cid-my52qgmw>Harmonogramowanie i przypomnienia</div>
            <div class="feature-desc" data-astro-cid-my52qgmw>Inteligentny system przypomnień z integracją z kalendarzami i AI przewidywaniem</div>
          </div>
          
          <div class="feature-tile" data-function="function7" data-astro-cid-my52qgmw>
            <div class="feature-icon" data-astro-cid-my52qgmw>❓</div>
            <div class="feature-title" data-astro-cid-my52qgmw>Generator FAQ dynamiczny</div>
            <div class="feature-desc" data-astro-cid-my52qgmw>AI generujący dynamicznie pytania i odpowiedzi na podstawie bazy wiedzy</div>
          </div>
          
          <div class="feature-tile" data-function="function8" data-astro-cid-my52qgmw>
            <div class="feature-icon" data-astro-cid-my52qgmw>📚</div>
            <div class="feature-title" data-astro-cid-my52qgmw>Rekomendacje edukacyjne</div>
            <div class="feature-desc" data-astro-cid-my52qgmw>System rekomendacji kursów i materiałów edukacyjnych z profilowaniem użytkownika</div>
          </div>

          <!-- Row 3 -->
          <div class="feature-tile" data-function="function9" data-astro-cid-my52qgmw>
            <div class="feature-icon" data-astro-cid-my52qgmw>🎫</div>
            <div class="feature-title" data-astro-cid-my52qgmw>System ticketów AI</div>
            <div class="feature-desc" data-astro-cid-my52qgmw>Automatyczna klasyfikacja zgłoszeń z integracją Jira/Zendesk</div>
          </div>
          
          <div class="feature-tile" data-function="quiz" data-astro-cid-my52qgmw>
            <div class="feature-icon" data-astro-cid-my52qgmw>🧠</div>
            <div class="feature-title" data-astro-cid-my52qgmw>Quizy i testy interaktywne</div>
            <div class="feature-desc" data-astro-cid-my52qgmw>Framework do tworzenia quizów z AI oceną i spersonalizowanym feedbackiem</div>
          </div>
          
          <div class="feature-tile" data-function="marketing" data-astro-cid-my52qgmw>
            <div class="feature-icon" data-astro-cid-my52qgmw>✍️</div>
            <div class="feature-title" data-astro-cid-my52qgmw>Generator treści marketingowych</div>
            <div class="feature-desc" data-astro-cid-my52qgmw>Automatyczne generowanie i publikacja treści marketingowych przez AI</div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <!-- Interactive Widgets Section -->
  <section
    class="ai-workers-section flex items-center justify-center py-16"
    id="interactive-tools"
    data-astro-cid-my52qgmw
  >
    <div class="section-container" data-astro-cid-my52qgmw>
      <div class="text-center mb-12">
        <h2 class="section-title" data-astro-cid-my52qgmw>
          🚀 Interaktywne Narzędzia
        </h2>
        <p class="section-description" data-astro-cid-my52qgmw>
          Przetestuj nasze AI Workers bezpośrednio ze strony głównej
        </p>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
        <!-- Image Generator Widget -->
        <div class="widget-container">
          <ImageGeneratorWidget client:load />
        </div>

        <!-- POLACZEK Assistant Widget -->
        <div class="widget-container">
          <PolaczekWidget client:load />
        </div>

        <!-- Main AI Chat Widget -->
        <div class="widget-container">
          <MainChatWidget client:load />
        </div>
      </div>
    </div>
  </section>

  <!-- Footer Section -->
  <section class="border border-edge">
    <div class="max-w-6xl mx-auto border-x border-edge">
      <div class="flex flex-row justify-between items-center py-16 px-8">
        <!-- Left corner - O_MNIE content -->
        <div class="max-w-xs text-left">
          <div class="text-edge text-sm italic">
            W mojej pracy skupiam się na integracji technologii w chmurze,
            nowoczesnych frameworków i AI, aby stworzyć asystenta, który rozumie
            i wspiera użytkownika w jego potrzebach.
          </div>
        </div>

        <div class="flex flex-row justify-center gap-8 text-center">
          <a
            class="hover:brightness-125 duration-200"
            target="_blank"
            rel="noopener noreferrer"
            href="/workers"
          >
            SYSTEM AGENTS
            <svg
              style="--rotation: -45deg"
              class="stroke-primary-foreground inline aspect-square w-3 h-auto fill-transparent rotate-[var(--rotation)]"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 12L21 12M21 12L12.5 3.5M21 12L12.5 20.5"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </svg>
          </a>
          <div
            class="group w-24 p-1 border border-primary-foreground rounded-interactive text-primary-foreground text-xs font-black text-nowrap opacity-60"
          >
            <span class="group-hover:hidden">100% HANDMADE</span>
            <span class="hidden group-hover:inline">0% AI</span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- AI Help Assistant -->
  <AiHelpAssistant client:load />

  <!-- Panel Administracyjny with Login - Fixed Left Side -->
  <div class="admin-panel-fixed">
    <a href="/admin" class="admin-btn">
      Panel Administracyjny
    </a>
    
    <!-- Login Section Below Admin Panel -->
    <div class="login-container-fixed" id="loginContainer">
      <input
        type="text"
        id="dashboardLogin"
        maxlength="16"
        placeholder="Podaj login"
        class="login-input-fixed"
      />
      <button
        onclick="checkDashboardLogin()"
        class="login-btn-fixed"
      >
        Zaloguj się
      </button>
    </div>
  </div>
</MyBonzoLayout>

<!-- JavaScript Functions -->
<script>
  // Type declarations for window object - extend Window interface
  declare global {
    interface Window {
      apiTests: {
        [key: string]: any;
        testChatAPI?: () => Promise<{ success: boolean; message: string; data?: any; }>;
        testImageGeneration?: () => Promise<{ success: boolean; message: string; data?: any; }>;
        testAIBot?: () => Promise<{ success: boolean; message: string; data?: any; }>;
        testBigQuery?: () => Promise<{ success: boolean; message: string; data?: any; }>;
        testKaggle?: () => Promise<{ success: boolean; message: string; data?: any; }>;
        testTavily?: () => Promise<{ success: boolean; message: string; data?: any; }>;
        testAllAPIs?: () => Promise<{ success: boolean; message: string; data?: any; }>;
      };
      openImageGenerator: () => void;
      openChatbot: () => void;
      openBigQuery: () => void;
      openKaggle: () => void;
      openTavily: () => void;
      testButtonFunction: (buttonType: string) => boolean;
      checkDashboardLogin: () => void;
    }
  }

  // Initialize window properties
  (window as any).apiTests = (window as any).apiTests || {};
  (window as any).openImageGenerator = (window as any).openImageGenerator || function () {};
  (window as any).openChatbot = (window as any).openChatbot || function () {};
  (window as any).openBigQuery = (window as any).openBigQuery || function () {};
  (window as any).openKaggle = (window as any).openKaggle || function () {};
  (window as any).openTavily = (window as any).openTavily || function () {};
  (window as any).testButtonFunction = (window as any).testButtonFunction || function () {};
  (window as any).checkDashboardLogin = (window as any).checkDashboardLogin || function () {};

  // Init when page loads
  window.addEventListener("DOMContentLoaded", async () => {
    console.log("Loading API test functions...");
    try {
      const module = await import("../utils/apiTests.ts");
      window.apiTests = module;
      console.log(
        "API Tests module loaded, available functions:",
        Object.keys(module)
      );
    } catch (error) {
      console.log("Failed to load API tests:", error);
    }
  });

  // Worker Functions
  function openImageGenerator() {
    console.log("openImageGenerator() called");
    const promptElement = document.getElementById("imagePrompt") as HTMLInputElement;
    const prompt = promptElement ? promptElement.value.trim() : "";
    console.log("Image prompt:", prompt);
    if (prompt) {
      localStorage.setItem("quickPrompt", prompt);
      console.log("Prompt saved in localStorage");
    }
    console.log("Opening /image-generator");
    window.open("/image-generator", "_blank");
  }

  function openChatbot() {
    console.log("💬 openChatbot() wywołana");
    const promptElement = document.getElementById("chatPrompt") as HTMLInputElement;
    const prompt = promptElement ? promptElement.value.trim() : "";
    console.log("Chat prompt:", prompt);
    if (prompt) {
      localStorage.setItem("quickChatPrompt", prompt);
      console.log("Prompt saved in localStorage");
    }
    console.log("Opening /chatbot");
    window.open("/chatbot", "_blank");
  }

  function openBigQuery() {
    console.log("📊 openBigQuery() wywołana");
    const promptElement = document.getElementById("bigqueryPrompt") as HTMLInputElement;
    const prompt = promptElement ? promptElement.value.trim() : "";
    console.log("BigQuery prompt:", prompt);
    if (prompt) {
      localStorage.setItem("quickSQLQuery", prompt);
      console.log("SQL Query saved in localStorage");
    }
    console.log("Opening /bigquery-analytics");
    window.open("/bigquery-analytics", "_blank");
  }

  function openKaggle() {
    console.log("🔍 openKaggle() wywołana");
    const promptElement = document.getElementById("kagglePrompt") as HTMLInputElement;
    const prompt = promptElement ? promptElement.value.trim() : "";
    console.log("Kaggle prompt:", prompt);
    if (prompt) {
      localStorage.setItem("quickKaggleSearch", prompt);
      console.log("Kaggle search saved in localStorage");
    }
    console.log("Opening /kaggle-datasets");
    window.open("/kaggle-datasets", "_blank");
  }

  function openTavily() {
    console.log("🌐 openTavily() wywołana");
    const promptElement = document.getElementById("tavilyPrompt") as HTMLInputElement;
    const prompt = promptElement ? promptElement.value.trim() : "";
    console.log("Tavily prompt:", prompt);
    if (prompt) {
      localStorage.setItem("quickTavilySearch", prompt);
      console.log("Tavily search saved in localStorage");
    }
    console.log("Opening /tavily-search");
    window.open("/tavily-search", "_blank");
  }

  // Test function without popup (to test if buttons respond)
  function testButtonFunction(buttonType: string) {
    console.log(`🧪 TEST: Przycisk ${buttonType} został kliknięty!`);
    alert(`Test udany! Przycisk ${buttonType} działa.`);
    return false; // Prevent actual navigation
  }

  // API Testing Functions
  async function runAllAPITests() {
    console.log("Rozpoczynam testy wszystkich API...");

    if (window.apiTests && window.apiTests.testAllAPIs) {
      try {
        await window.apiTests.testAllAPIs();
        console.log("All API tests completed");
      } catch (error) {
        console.log("Error during API tests:", error);
      }
    } else {
      console.log(
        "⏳ API tests nie są jeszcze załadowane, próbuję ponownie..."
      );
      setTimeout(runAllAPITests, 1000);
    }
  }

  function openAPITestConsole() {
    console.log("Opening API test console...");
    console.log("Available API tests:");
    console.log("- window.apiTests.testChatAPI()");
    console.log("- window.apiTests.testImageGeneration()");
    console.log("- window.apiTests.testAIBot()");
    console.log("- window.apiTests.testAllAPIs()");

    if (window.apiTests) {
      console.log(
        "API Tests module loaded, available functions:",
        Object.keys(window.apiTests)
      );
    } else {
      console.log("API Tests module not loaded yet");
    }
  }

  // Cloudflare Workers Integration
  function openCloudflareWorkers() {
    // Check if workers dashboard is available
    const cloudflareUrl = "https://dash.cloudflare.com/";
    window.open(cloudflareUrl, "_blank");
  }

  // Status Check Function
  async function checkAllStatus() {
    const statusElement = document.getElementById("overallStatus");
    if (!statusElement) return;

    const statusDot = statusElement.querySelector(".status-dot");
    const statusText = statusElement.querySelector("span:last-child");

    if (!statusDot || !statusText) return;

    statusText.textContent = "Sprawdzanie...";
    statusDot.className = "status-dot";

    try {
      const apis = [
        "/api/generate-image",
        "/api/chat",
        "/api/bigquery",
        "/api/kaggle",
        "/api/tavi",
      ];

      const results = await Promise.allSettled(
        apis.map((api) => fetch(api).then((res) => ({ api, ok: res.ok })))
      );

      const onlineCount = results.filter(
        (result) => result.status === "fulfilled" && result.value.ok
      ).length;

      const totalCount = apis.length;

      if (onlineCount === totalCount) {
        statusDot.className = "status-dot online";
        statusText.textContent = `Wszystkie online (${onlineCount}/${totalCount})`;
      } else if (onlineCount > 0) {
        statusDot.className = "status-dot";
        statusText.textContent = `Częściowo online (${onlineCount}/${totalCount})`;
      } else {
        statusDot.className = "status-dot offline";
        statusText.textContent = `Offline (${onlineCount}/${totalCount})`;
      }
    } catch (error) {
      statusDot.className = "status-dot offline";
      statusText.textContent = "Błąd sprawdzania";
    }
  }

  // Dashboard Login Function
  function checkDashboardLogin() {
    const loginInput = document.getElementById("dashboardLogin") as HTMLInputElement;
    const loginContainer = document.getElementById("loginContainer");
    const dashboardButtons = document.getElementById("dashboardButtons");

    if (!loginInput || !loginContainer || !dashboardButtons) return;

    const login = loginInput.value.trim();
    console.log("Checking login:", login);

    if (login === "HAOS77") {
      loginContainer.classList.add("hidden");
      dashboardButtons.classList.remove("hidden");
      console.log("Login successful, showing dashboard buttons");
    } else {
      console.log("Invalid login");
      loginInput.style.borderColor = "#ef4444";
      setTimeout(() => {
        loginInput.style.borderColor = "";
      }, 2000);
    }
  }

  // Auto-check status on load and add Enter key handlers
  document.addEventListener("DOMContentLoaded", function () {
    console.log("🚀 DOM załadowany, inicjalizacja funkcji");

    // Test czy wszystkie funkcje są dostępne
    console.log("🧪 Test dostępności funkcji:");
    console.log("- openImageGenerator:", typeof openImageGenerator);
    console.log("- openChatbot:", typeof openChatbot);
    console.log("- openBigQuery:", typeof openBigQuery);
    console.log("- openKaggle:", typeof openKaggle);
    console.log("- openTavily:", typeof openTavily);

    // Test czy wszystkie elementy input istnieją
    console.log("🧪 Test dostępności elementów input:");
    console.log("- imagePrompt:", document.getElementById("imagePrompt"));
    console.log("- chatPrompt:", document.getElementById("chatPrompt"));
    console.log("- bigqueryPrompt:", document.getElementById("bigqueryPrompt"));
    console.log("- kagglePrompt:", document.getElementById("kagglePrompt"));
    console.log("- tavilyPrompt:", document.getElementById("tavilyPrompt"));

    // Add quick prompt handlers
    document.querySelectorAll(".quick-prompt").forEach((input) => {
      const inputElement = input;
      inputElement.addEventListener("keydown", function (e) {
        // Use type assertion to bypass TypeScript strict typing
        if ((e as any).code === "Enter" || (e as any).key === "Enter") {
          const type = inputElement.id.replace("Prompt", "");
          if (type === "image") openImageGenerator();
          else if (type === "chat") openChatbot();
          else if (type === "bigquery") openBigQuery();
          else if (type === "kaggle") openKaggle();
          else if (type === "tavily") openTavily();
        }
      });
    });

    // Add Enter key handler for dashboard login
    const dashboardLoginInput = document.getElementById("dashboardLogin");
    if (dashboardLoginInput) {
      dashboardLoginInput.addEventListener("keydown", function (e) {
        if ((e as any).key === "Enter") {
          checkDashboardLogin();
        }
      });
    }

    // Check status on load
    checkAllStatus();

    // Make functions globally available for debugging
    window.openImageGenerator = openImageGenerator;
    window.openChatbot = openChatbot;
    window.openBigQuery = openBigQuery;
    window.openKaggle = openKaggle;
    window.openTavily = openTavily;
    window.testButtonFunction = testButtonFunction;
    window.checkDashboardLogin = checkDashboardLogin;

    console.log("All functions assigned to window object");
  });
</script>

<style>
  /* System title - enlarged and bold */
  .system-title {
    color: #00d7ef !important;
    font-weight: 900 !important;
    font-size: 3.5rem !important;
    margin-bottom: 1rem !important;
    text-align: center !important;
    text-shadow: 0 0 20px rgba(0, 215, 239, 0.5);
    letter-spacing: 0.02em;
  }

  /* Dashboard login section */
  .dashboard-login-section {
    background: rgba(0, 0, 0, 0.6);
    padding: 32px 24px;
    margin: 24px 0;
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px;
    box-shadow: 0 2px 18px rgba(0, 217, 255, 0.2);
  }

  .login-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 12px;
  }

  .login-input {
    background: #131e28;
    color: #00d7ef;
    padding: 12px 16px;
    border: 2px solid rgba(0, 217, 255, 0.4);
    border-radius: 0px;
    font-size: 1.1rem;
    font-weight: 600;
    text-align: center;
    min-width: 200px;
    transition: all 0.2s ease;
  }

  .login-input:focus {
    outline: none;
    border-color: #00d7ef;
    box-shadow: 0 0 12px rgba(0, 217, 255, 0.4);
  }

  .login-btn {
    background-color: #164e63;
    color: white;
    padding: 12px 24px;
    border: none;
    border-radius: 0px;
    font-weight: 600;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.2s ease;
    box-shadow: 0 2px 12px rgba(0, 217, 255, 0.2);
  }

  .login-btn:hover {
    background-color: #1be1ff;
    color: #000;
    transform: translateY(-1px);
  }

  .dashboard-buttons {
    display: flex;
    flex-direction: column;
    gap: 12px;
    align-items: center;
  }

  .dashboard-btn {
    background-color: #164e63;
    color: white;
    padding: 14px 28px;
    border-radius: 0px;
    font-weight: 600;
    font-size: 1.2rem;
    text-decoration: none;
    display: block;
    text-align: center;
    min-width: 220px;
    box-shadow: 0 2px 18px rgba(0, 217, 255, 0.3);
    transition: all 0.2s ease;
    border: 1px solid rgba(0, 217, 255, 0.3);
  }

  .dashboard-btn:hover {
    background-color: #1be1ff;
    color: #000;
    transform: translateY(-2px);
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.5);
  }

  /* Feature tiles for 9 functions */
  .feature-tile {
    background: rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px;
    box-shadow: 0 1px 26px rgba(20, 215, 230, 0.2);
    padding: 34px 24px 24px 24px;
    margin: 14px;
    text-align: left;
    min-width: 270px;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .feature-tile:hover {
    border-color: #00d7ef;
    box-shadow: 0 4px 30px rgba(0, 217, 255, 0.4);
    transform: translateY(-3px);
  }

  .feature-title {
    color: #00d7ef;
    font-weight: 700;
    font-size: 1.24rem;
    margin-bottom: 0.46em;
  }

  .feature-desc {
    color: #94aec4;
    font-size: 1.09rem;
    line-height: 1.5;
  }

  .feature-icon {
    font-size: 2.7rem;
    margin-bottom: 14px;
    color: #1be1ff;
    display: block;
  }

  /* Admin panel - fixed left side */
  .admin-panel-fixed {
    position: fixed;
    top: 50%;
    left: 20px;
    transform: translateY(-50%);
    z-index: 100;
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .admin-btn {
    background: rgba(0, 0, 0, 0.5);
    color: #00d7ef;
    padding: 12px 24px;
    border-radius: 0px;
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.3);
    font-size: 1.1rem;
    font-weight: 600;
    text-decoration: none;
    border: 1px solid rgba(0, 217, 255, 0.4);
    transition: all 0.2s ease;
    display: block;
    text-align: center;
    min-width: 180px;
  }

  .admin-btn:hover {
    background: #00d7ef;
    color: #131e28;
    transform: translateY(-2px);
    box-shadow: 0 6px 25px rgba(0, 217, 255, 0.5);
  }

  /* Login container - fixed below admin panel */
  .login-container-fixed {
    display: flex;
    flex-direction: column;
    gap: 12px;
    background: rgba(0, 0, 0, 0.5);
    padding: 16px;
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px;
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.2);
  }

  .login-input-fixed {
    background: #131e28;
    color: #00d7ef;
    padding: 10px 12px;
    border: 2px solid rgba(0, 217, 255, 0.4);
    border-radius: 0px;
    font-size: 1rem;
    font-weight: 600;
    text-align: center;
    min-width: 150px;
    transition: all 0.2s ease;
  }

  .login-input-fixed:focus {
    outline: none;
    border-color: #00d7ef;
    box-shadow: 0 0 12px rgba(0, 217, 255, 0.4);
  }

  .login-input-fixed::placeholder {
    color: rgba(0, 217, 255, 0.6);
  }

  .login-btn-fixed {
    background-color: #164e63;
    color: white;
    padding: 10px 16px;
    border: none;
    border-radius: 0px;
    font-weight: 600;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.2s ease;
    box-shadow: 0 2px 12px rgba(0, 217, 255, 0.2);
  }

  .login-btn-fixed:hover {
    background-color: #1be1ff;
    color: #000;
    transform: translateY(-1px);
    box-shadow: 0 4px 16px rgba(0, 217, 255, 0.4);
  }

  /* Override any existing rounded corners - FORCE 0px everywhere */
  * {
    border-radius: 0px !important;
  }

  .widget-container {
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px !important;
    transition: all 0.3s ease;
    overflow: hidden;
    position: relative;
  }

  .widget-container:hover {
    border-color: #00d9ff;
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.2);
    transform: translateY(-2px);
  }

  /* Force 0px border radius on specific elements */
  .additional-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 20px;
    margin-top: 2rem;
  }

  .hidden {
    display: none !important;
  }

  @media (max-width: 1024px) {
    .grid-cols-1.lg\\:grid-cols-2.xl\\:grid-cols-3 {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    
    .system-title {
      font-size: 2.5rem !important;
    }
    
    .admin-panel-fixed {
      top: auto;
      bottom: 20px;
      left: 10px;
      transform: none;
      gap: 12px;
    }

    .admin-btn {
      min-width: 160px;
      font-size: 1rem;
      padding: 10px 20px;
    }

    .login-container-fixed {
      padding: 12px;
    }

    .login-input-fixed {
      min-width: 130px;
      font-size: 0.9rem;
      padding: 8px 10px;
    }

    .login-btn-fixed {
      font-size: 0.9rem;
      padding: 8px 12px;
    }
  }

  @media (max-width: 768px) {
    .admin-panel-fixed {
      left: 8px;
      bottom: 15px;
      gap: 10px;
    }

    .admin-btn {
      min-width: 140px;
      font-size: 0.9rem;
      padding: 8px 16px;
    }

    .login-container-fixed {
      padding: 10px;
    }

    .login-input-fixed {
      min-width: 120px;
      font-size: 0.85rem;
      padding: 7px 8px;
    }

    .login-btn-fixed {
      font-size: 0.85rem;
      padding: 7px 10px;
    }
  }

  @media (min-width: 1024px) and (max-width: 1280px) {
    .grid-cols-1.lg\\:grid-cols-2.xl\\:grid-cols-3 {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1280px) {
    .grid-cols-1.lg\\:grid-cols-2.xl\\:grid-cols-3 {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
