---
import Head from '../components/Head.astro';
import Footer from '../components/Footer.astro';
import Header from "../components/Header.astro";
import Section from "../components/Section.astro";
import Tag from '../components/Tag.astro';
import Date from '../components/Date.astro';
import XMark from "../components/XMark.astro";

import { USER_PROFESSIONAL_DESCRIPTION } from "../data/user-professional";
import { USER_NAME, USER_INTRODUCTION } from '../data/user-personal';
import { getCollection } from 'astro:content';

const posts = (await getCollection('posts')).sort(
	(a: any, b: any) => b.data.date.valueOf() - a.data.date.valueOf(),
);

const heroTags: string[] = ["Tag A", "Tag B", "Tag C"];
---

<!doctype html>
<html lang="en" class="bg-primary-desaturated">
	<head><Head pageTitle=`${ USER_NAME }'s Portfolio` pageDescription=`Home page of ${USER_NAME}'s portfolio.`  /></head>
	<body>
		<main class="min-h-svh bg-linear-to-b from-primary-desaturated to-primary">
			<!-- HEADER -->
			<Header />

			<Section class="p-6" />

			<!-- HERO -->
			<Section class='flex min-h-72'>
				<div class="m-auto">
					<span class="text-lg">{ USER_PROFESSIONAL_DESCRIPTION }</span>
					<div class="flex flex-row flex-wrap justify-center gap-2 mt-4">
						{
							heroTags.map((tag) => (
								<Tag onClick={`addTagToFilters("${tag}")`} >{ tag }</Tag>
							))
						}
					</div>
				</div>	
			</Section>

			<Section class="p-6" />

			<!-- POSTS -->
			<Section class="p-2">

				<div id="post-filter-container" class="flex gap-2 mb-2">
				</div>

				<div class="group grid grid-cols-2 gap-4 p-8 border rounded-lg border-accent bg-linear-to-b from-accent/15 to-transparent pointer-events-none hover:border-primary-border duration-200">					
					{
						posts.map((post: any) => (
							<a href={post.id} class="min-h-32 h-min border rounded-xl border-primary-border bg-primary/80 pointer-events-auto hover:border-accent duration-200">
								<div class="p-2">
									<h3 class="text-primary-foreground/50"><Date date={post.data.date} /></h3>
									<h2 class="text-lg font-semibold">{ post.data.title }</h2>
									<p>{ post.data.description }</p>
								</div>
							</a>
						))
					}
				</div>
			</Section>

			<Section class="p-6" />

			<!-- ABOUT -->
			<Section class="flex flex-row gap-4 max-w-2xl mx-auto p-2">
				<div class="aspect-square w-96 h-auto rounded-lg bg-accent/70"></div>

				<div class="text-pretty my-auto">
					{ USER_INTRODUCTION }
				</div>
			</Section>

			<Section class="p-6" />
			
			<!-- FOOTER -->
			<Footer />
		</main>
	</body>
</html>

<!-- Script that handles adding and removing post filters -->
<script is:inline>
	const postFilterContainer = document.getElementById('post-filter-container');
	let postFilters = [];

	class PostFilter extends HTMLElement {
    	connectedCallback() {
      		const tag = this.getAttribute('data-tag');
      		this.innerHTML = `<button onClick="removeTagFromFilters('${tag}')">${tag}</button>`;
			this.addEventListener("onClick", () => removeTagFromFilters(tag));
			// console.log(this.innerHTML)
    	}
  	}

	customElements.define('post-filter', PostFilter);

	function addTagToFilters(tag) {
		if(postFilters.includes(tag)) {
			return;
		}

		postFilters.push(tag);
		clearPostFilterContainer();
		renderPostFilters();
	}

	function removeTagFromFilters(tag) {
		const index = postFilters.indexOf(tag);

		if (index !== -1) {
			postFilters.splice(index, 1);
		}

		console.log(postFilters)

		clearPostFilterContainer();
		renderPostFilters();
	}

	function clearPostFilterContainer() {
		postFilterContainer.innerHTML = "";
	}

	function renderPostFilters() {
		postFilters.forEach((filter) => {
			const newPostFilterElement = document.createElement('post-filter');
    		newPostFilterElement.setAttribute('data-tag', filter);
    		postFilterContainer.appendChild(newPostFilterElement);
		})
  	}
</script>