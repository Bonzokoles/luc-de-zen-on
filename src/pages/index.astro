--- 
import MyBonzoLayout from "../layouts/MyBonzoLayout.astro";
// Optimized component sections for better SSR performance
import HeroSection from "../components/sections/HeroSection.astro";
import NavigationSection from "../components/sections/NavigationSection.astro";
import AIWorkersSection from "../components/sections/AIWorkersSection.astro";
import WorkersGridSection from "../components/sections/WorkersGridSection.astro";
import MainWorkersCardsSection from "../components/sections/MainWorkersCardsSection.astro";
// Core widgets - lazy loaded
import ImageGeneratorWidget from "../components/ImageGeneratorWidget.svelte";
import PolaczekWidget from "../components/PolaczekWidget.svelte";
import MainChatWidget from "../components/MainChatWidget.svelte";
import AiHelpAssistant from "../components/AiHelpAssistant.svelte";
import FAQGeneratorWidget from "../components/FAQGeneratorWidget.svelte";
import EducationRecommendationsWidget from "../components/EducationRecommendationsWidget.svelte";
import TicketSubmissionWidget from "../components/TicketSubmissionWidget.svelte";
import WorkersStatusDashboard from "../components/WorkersStatusDashboard.svelte";
import BackgroundMusicPlayerSimple from "../components/BackgroundMusicPlayerSimple.svelte";
import GoogleVoiceAgent from "../components/GoogleVoiceAgent.svelte";
import WorkerCommunicationPopup from "../components/WorkerCommunicationPopup.astro";
// Modular Agents System
import AgentsLoader from "../components/agents/AgentsLoader.astro";
import Agent09Dyrektor from "../components/agents/agent-09-dyrektor/index.svelte";
// Heroicons React components
import { 
  MusicalNoteIcon,
  CpuChipIcon,
  SparklesIcon,
  EyeIcon,
  CodeBracketIcon,
  DocumentTextIcon,
  BoltIcon,
  PaintBrushIcon,
  BriefcaseIcon,
  ChatBubbleLeftRightIcon,
  ArrowPathIcon,
  FolderIcon,
  XMarkIcon
} from '@heroicons/react/24/outline';
---

<MyBonzoLayout siteTitle="AI Workers Platform | KAROL LISSON">
  <main class="min-h-svh">
    <!-- Optimized sections for better SSR streaming -->
    <HeroSection />
    <NavigationSection />
    <AIWorkersSection />

    <!-- Separator Section 1 -->
    <section class="border border-edge relative">
      <div class="absolute left-0 right-0 h-full">
        <!-- Inner vertical lines -->
        <div
          class="absolute left-[calc(50vw+400px)] top-0 bottom-0 w-px bg-edge"
        ></div>
        <div
          class="absolute right-[calc(50vw-400px)] top-0 bottom-0 w-px bg-edge"
        ></div>
        <!-- Outer vertical lines -->
        <div
          class="absolute left-[calc(50vw+600px)] top-0 bottom-0 w-px bg-edge"
        ></div>
        <div
          class="absolute right-[calc(50vw-600px)] top-0 bottom-0 w-px bg-edge"
        ></div>
      </div>
      <div class="max-w-6xl mx-auto">
        <div class="py-1"></div>
      </div>
    </section>

            }
        <WorkersGridSection />
        <MainWorkersCardsSection />

        <section class="relative z-20 py-16">
          <div class="max-w-7xl mx-auto px-4">
            <h3 class="text-4xl font-bold text-cyan-400 mb-8 text-center">ZAAWANSOWANE FUNKCJE AI</h3>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              <!-- Function 1: Marketing Content -->
              <a href="/ai-functions/marketing-content" class="group">
                <div class="p-6 bg-[#111111] border border-[#333333] glass-effect hover:border-[#00ffff]/50 transition-all duration-300 h-full">
                  <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-[#00ffff]/10 border border-[#00ffff]/30 flex items-center justify-center mr-4">
                      <span class="text-2xl">üìù</span>
                    </div>
                    <div>
                      <h3 class="text-xl font-bold text-[#00ffff] font-mono uppercase">Generator Tre≈õci</h3>
                      <p class="text-sm text-[#a0a0a0]">Marketing & Content</p>
                    </div>
                  </div>
                  <p class="text-[#e0e0e0] font-['Kenyan_Coffee'] mb-4">Automatyczne generowanie profesjonalnych tre≈õci marketingowych przy u≈ºyciu AI</p>
                  <div class="flex flex-wrap gap-2">
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">GPT-4</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Social Media</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">E-mail</span>
                  </div>
                </div>
              </a>

              <!-- Function 2: Recommendations -->
              <a href="/ai-functions/personalized-recommendations" class="group">
                <div class="p-6 bg-[#111111] border border-[#333333] glass-effect hover:border-[#00ffff]/50 transition-all duration-300 h-full">
                  <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-[#00ffff]/10 border border-[#00ffff]/30 flex items-center justify-center mr-4">
                      <span class="text-2xl">üéØ</span>
                    </div>
                    <div>
                      <h3 class="text-xl font-bold text-[#00ffff] font-mono uppercase">Rekomendacje</h3>
                      <p class="text-sm text-[#a0a0a0]">Personalization & ML</p>
                    </div>
                  </div>
                  <p class="text-[#e0e0e0] font-['Kenyan_Coffee'] mb-4">System rekomendacji produkt√≥w i us≈Çug oparty na preferencjach u≈ºytkownika</p>
                  <div class="flex flex-wrap gap-2">
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">ML</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Analytics</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Real-time</span>
                  </div>
                </div>
              </a>

              <!-- Function 3: Customer Automation -->
              <a href="/ai-functions/customer-automation" class="group">
                <div class="p-6 bg-[#111111] border border-[#333333] glass-effect hover:border-[#00ffff]/50 transition-all duration-300 h-full">
                  <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-[#00ffff]/10 border border-[#00ffff]/30 flex items-center justify-center mr-4">
                      <span class="text-2xl">ü§ñ</span>
                    </div>
                    <div>
                      <h3 class="text-xl font-bold text-[#00ffff] font-mono uppercase">Obs≈Çuga Klienta</h3>
                      <p class="text-sm text-[#a0a0a0]">Automation & Support</p>
                    </div>
                  </div>
                  <p class="text-[#e0e0e0] font-['Kenyan_Coffee'] mb-4">Automatyzacja obs≈Çugi klienta z NLP i kwalifikacjƒÖ lead√≥w</p>
                  <div class="flex flex-wrap gap-2">
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">NLP</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">24/7</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">CRM</span>
                  </div>
                </div>
              </a>

              <!-- Function 4: Activity Monitoring -->
              <a href="/ai-functions/activity-monitoring" class="group">
                <div class="p-6 bg-[#111111] border border-[#333333] glass-effect hover:border-[#00ffff]/50 transition-all duration-300 h-full">
                  <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-[#00ffff]/10 border border-[#00ffff]/30 flex items-center justify-center mr-4">
                      <span class="text-2xl">üìä</span>
                    </div>
                    <div>
                      <h3 class="text-xl font-bold text-[#00ffff] font-mono uppercase">Monitorowanie</h3>
                      <p class="text-sm text-[#a0a0a0]">Analytics & Tracking</p>
                    </div>
                  </div>
                  <p class="text-[#e0e0e0] font-['Kenyan_Coffee'] mb-4">Dashboard monitorowania aktywno≈õci w czasie rzeczywistym</p>
                  <div class="flex flex-wrap gap-2">
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Real-time</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Alerts</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Logs</span>
                  </div>
                </div>
              </a>

              <!-- Function 5: Reminders & Calendar -->
              <a href="/ai-functions/reminders-calendar" class="group">
                <div class="p-6 bg-[#111111] border border-[#333333] glass-effect hover:border-[#00ffff]/50 transition-all duration-300 h-full">
                  <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-[#00ffff]/10 border border-[#00ffff]/30 flex items-center justify-center mr-4">
                      <span class="text-2xl">üìÖ</span>
                    </div>
                    <div>
                      <h3 class="text-xl font-bold text-[#00ffff] font-mono uppercase">Harmonogramowanie</h3>
                      <p class="text-sm text-[#a0a0a0]">Calendar & Reminders</p>
                    </div>
                  </div>
                  <p class="text-[#e0e0e0] font-['Kenyan_Coffee'] mb-4">Inteligentny system przypomina≈Ñ z AI scheduling</p>
                  <div class="flex flex-wrap gap-2">
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Calendar</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Smart AI</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Sync</span>
                  </div>
                </div>
              </a>

              <!-- Function 6: Dynamic FAQ -->
              <a href="/ai-functions/dynamic-faq" class="group">
                <div class="p-6 bg-[#111111] border border-[#333333] glass-effect hover:border-[#00ffff]/50 transition-all duration-300 h-full">
                  <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-[#00ffff]/10 border border-[#00ffff]/30 flex items-center justify-center mr-4">
                      <span class="text-2xl">‚ùì</span>
                    </div>
                    <div>
                      <h3 class="text-xl font-bold text-[#00ffff] font-mono uppercase">Dynamiczne FAQ</h3>
                      <p class="text-sm text-[#a0a0a0]">Knowledge Base & AI</p>
                    </div>
                  </div>
                  <p class="text-[#e0e0e0] font-['Kenyan_Coffee'] mb-4">AI automatycznie generuje FAQ z bazy wiedzy</p>
                  <div class="flex flex-wrap gap-2">
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Auto-Gen</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Learning</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Voice</span>
                  </div>
                </div>
              </a>

              <!-- Function 7: Education Recommendations -->
              <a href="/ai-functions/education-recommendations" class="group">
                <div class="p-6 bg-[#111111] border border-[#333333] glass-effect hover:border-[#00ffff]/50 transition-all duration-300 h-full">
                  <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-[#00ffff]/10 border border-[#00ffff]/30 flex items-center justify-center mr-4">
                      <span class="text-2xl">üéì</span>
                    </div>
                    <div>
                      <h3 class="text-xl font-bold text-[#00ffff] font-mono uppercase">Edukacja</h3>
                      <p class="text-sm text-[#a0a0a0]">Learning & Development</p>
                    </div>
                  </div>
                  <p class="text-[#e0e0e0] font-['Kenyan_Coffee'] mb-4">Personalizowane ≈õcie≈ºki rozwoju dla pracownik√≥w</p>
                  <div class="flex flex-wrap gap-2">
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Learning</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Skills</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Paths</span>
                  </div>
                </div>
              </a>

              <!-- Function 8: AI Tickets -->
              <a href="/ai-functions/ai-tickets" class="group">
                <div class="p-6 bg-[#111111] border border-[#333333] glass-effect hover:border-[#00ffff]/50 transition-all duration-300 h-full">
                  <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-[#00ffff]/10 border border-[#00ffff]/30 flex items-center justify-center mr-4">
                      <span class="text-2xl">üé´</span>
                    </div>
                    <div>
                      <h3 class="text-xl font-bold text-[#00ffff] font-mono uppercase">Tickety AI</h3>
                      <p class="text-sm text-[#a0a0a0]">Support & Management</p>
                    </div>
                  </div>
                  <p class="text-[#e0e0e0] font-['Kenyan_Coffee'] mb-4">Automatyczna klasyfikacja i priorytetyzacja ticket√≥w</p>
                  <div class="flex flex-wrap gap-2">
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Auto-Route</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">SLA</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Priority</span>
                  </div>
                </div>
              </a>

              <!-- Function 9: Interactive Quizzes -->
              <a href="/ai-functions/interactive-quizzes" class="group">
                <div class="p-6 bg-[#111111] border border-[#333333] glass-effect hover:border-[#00ffff]/50 transition-all duration-300 h-full">
                  <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-[#00ffff]/10 border border-[#00ffff]/30 flex items-center justify-center mr-4">
                      <span class="text-2xl">üß†</span>
                    </div>
                    <div>
                      <h3 class="text-xl font-bold text-[#00ffff] font-mono uppercase">Quizy AI</h3>
                      <p class="text-sm text-[#a0a0a0]">Testing & Assessment</p>
                    </div>
                  </div>
                  <p class="text-[#e0e0e0] font-['Kenyan_Coffee'] mb-4">Framework do tworzenia quiz√≥w z AI ocenƒÖ</p>
                  <div class="flex flex-wrap gap-2">
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">AI Scoring</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Adaptive</span>
                    <span class="px-2 py-1 bg-[#00ffff]/20 text-[#00ffff] text-xs font-mono uppercase">Feedback</span>
                  </div>
                </div>
              </a>
            </div>
          </div>
        </section>

        <!-- Duplikat usuniƒôty ca≈Çkowicie - sekcja worker-cards by≈Ça powt√≥rzona -->
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- O_MNIE Section -->
    <section class="border border-edge relative py-16">
      <div class="absolute left-0 right-0 h-full">
        <!-- Inner vertical lines - closer to content for tight frame around O_MNIE -->
        <div class="absolute left-[calc(50vw+200px)] top-0 bottom-0 w-px bg-edge"></div>
        <div class="absolute right-[calc(50vw-200px)] top-0 bottom-0 w-px bg-edge"></div>
        <!-- Outer vertical lines - closer to content -->
        <div class="absolute left-[calc(50vw+300px)] top-0 bottom-0 w-px bg-edge"></div>
        <div class="absolute right-[calc(50vw-300px)] top-0 bottom-0 w-px bg-edge"></div>
      </div>
      <div class="max-w-6xl mx-auto px-8">
        <h3 class="text-4xl font-bold text-cyan-400 mb-8 text-center">O MNIE</h3>
        <div class="max-w-4xl mx-auto">
          <div class="text-edge text-lg leading-relaxed" style="line-height: 1.6; word-wrap: break-word;">
            <p class="mb-6">
              W mojej pracy skupiam siƒô na integracji technologii w chmurze,
              nowoczesnych framework√≥w i AI, aby stworzyƒá asystenta, kt√≥ry rozumie
              i wspiera u≈ºytkownika w jego potrzebach.
            </p>
            <p class="italic text-cyan-300 mb-8">
              If robots are destined for eternal life, what will stop us from becoming one of them? There is no escape, only the illusion of choice; yet, the very essence of humanity lies in the absurd act of will‚Äîin the Sisyphus-like heroism of undertaking the struggle anew‚Äîwhere to the question 'Why?' we can always, ultimately, reply: 'Because I choose to.'
            </p>
          </div>
          
          <!-- System Agents i 100% Handmade Links -->
          <div class="flex flex-row justify-center gap-8 text-center mt-8">
            <a
              class="hover:brightness-125 duration-200 text-cyan-400 font-mono uppercase"
              target="_blank"
              rel="noopener noreferrer"
              href="/workers"
            >
              SYSTEM AGENTS
              <svg
                style="--rotation: -45deg"
                class="stroke-primary-foreground inline aspect-square w-3 h-auto fill-transparent rotate-[var(--rotation)] ml-2"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M3 12L21 12M21 12L12.5 3.5M21 12L12.5 20.5"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
            </a>
            <div
              class="group w-24 p-1 border border-primary-foreground rounded-interactive text-primary-foreground text-xs font-black text-nowrap opacity-60"
            >
              <span class="group-hover:hidden">100% HANDMADE</span>
              <span class="hidden group-hover:inline">0% AI</span>
            </div>
          </div>
        </div>
      </div>
    </section>
    

  </main>

  <!-- Left Floating Panel - Fixed Left Side -->
  <div class="left-panel-fixed">
    <div class="floating-widget-container">
      <a href="/admin/" class="left-btn" style="text-decoration: none; display: block; text-align: center;">
        üîß PANEL ADMIN
      </a>
    </div>

    <div class="floating-widget-container">
      <button
        data-action="toggleWidget"
        data-widget="loginWidget"
        class="left-btn"
        id="loginBtn"
        title="Zaloguj siƒô do dashboardu"
      >
        üîë LOGIN
      </button>
      <div id="loginWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>üîë DASHBOARD LOGIN</span>
            <button data-action="toggleWidget" data-widget="loginWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <input
              type="text"
              id="dashboardUser"
              placeholder="U≈ºytkownik (admin/user)"
              style="width: 100%; padding: 8px; margin-bottom: 10px; border: 1px solid #333; background: rgba(0,0,0,0.7); color: white; border-radius: 4px;"
            />
            <input
              type="password"
              id="dashboardPassword"
              placeholder="Has≈Ço"
              style="width: 100%; padding: 8px; margin-bottom: 10px; border: 1px solid #333; background: rgba(0,0,0,0.7); color: white; border-radius: 4px;"
            />
            <button onclick="checkDashboardLogin()" style="width: 100%; padding: 8px; background: #0066cc; color: white; border: none; border-radius: 4px; cursor: pointer;">
              Zaloguj siƒô
            </button>
            <p id="loginError" class="text-red-500 text-sm mt-2"></p>
          </div>
        </div>
    </div>

    <!-- Duplikaty MCP serwer√≥w usuniƒôte -->

    <div class="floating-widget-container">
      <button
        data-action="open-mcp-browser"
        class="left-btn"
        id="mcpBrowserBtn"
        title="MCP Browser Server"
      >
        üåê BROWSER
      </button>
    </div>

    <div class="floating-widget-container">
      <button
        data-action="open-mcp-docker"
        class="left-btn"
        id="mcpDockerBtn"
        title="MCP Docker Server"
      >
        üê≥ DOCKER
      </button>
    </div>

    <div class="floating-widget-container">
      <button
        data-action="open-mcp-github"
        class="left-btn"
        id="mcpGithubBtn"
        title="MCP GitHub Server"
      >
        ‚ö° GITHUB
      </button>
    </div>

    <div class="floating-widget-container">
      <button
        data-action="open-mcp-knowledge"
        class="left-btn"
        id="mcpKnowledgeBtn"
        title="MCP Knowledge Server"
      >
        üß† KNOWLEDGE
      </button>
    </div>

    <div class="floating-widget-container">
      <button
        data-action="open-mcp-sqlite"
        class="left-btn"
        id="mcpSqliteBtn"
        title="MCP SQLite Server - Database Operations"
      >
        üóÑÔ∏è SQLITE
      </button>
    </div>

    <div class="floating-widget-container">
      <button
        data-action="open-mcp-filesystem"
        class="left-btn"
        id="mcpFilesystemBtn"
        title="MCP Filesystem Server - File Management"
      >
        üìÅ FILESYSTEM
      </button>
    </div>

    <div class="floating-widget-container">
      <button
        data-action="open-mcp-postgres"
        class="left-btn"
        id="mcpPostgresBtn"
        title="MCP PostgreSQL Server - Advanced Database"
      >
        üêò POSTGRES
      </button>
    </div>

    <div class="floating-widget-container">
      <button
        data-action="open-mcp-fetch"
        class="left-btn"
        id="mcpFetchBtn"
        title="MCP Fetch Server - HTTP Requests"
      >
        üåç FETCH
      </button>
    </div>

    <div class="floating-widget-container">
      <button
        data-action="open-mcp-brave-search"
        class="left-btn"
        id="mcpBraveSearchBtn"
        title="MCP Brave Search Server - Web Search"
      >
        üîç BRAVE SEARCH
      </button>
    </div>

    <div class="floating-widget-container">
      <button
        data-action="open-mcp-obsidian"
        class="left-btn"
        id="mcpObsidianBtn"
        title="MCP Obsidian Server - Knowledge Management"
      >
        üìù OBSIDIAN
      </button>
    </div>

    <div class="floating-widget-container">
      <button
        data-action="open-mcp-slack"
        class="left-btn"
        id="mcpSlackBtn"
        title="MCP Slack Server - Team Communication"
      >
        üí¨ SLACK
      </button>
    </div>
  </div>

  <!-- Right Floating Panel - Fixed Right Side -->
  <div class="right-panel-fixed">
    <div class="floating-widget-container">
      <button
        data-action="toggleWidget"
        data-widget="musicPlayerWidget"
        class="right-btn"
        id="musicPlayerBtn"
      >
        üéµ MUSIC PLAYER
      </button>
      <div id="musicPlayerWidget" class="floating-widget hidden">
        <BackgroundMusicPlayerSimple client:load />
      </div>
    </div>



    <div class="floating-widget-container">
      <button data-agent="1" class="right-btn" id="voiceAgentBtn" title="Agent 01 - Voice Command Agent">
        üé§ AGENT 01 - VOICE
      </button>
      <div id="voiceAgentWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>üéôÔ∏è VOICE COMMAND AGENT</span>
            <button data-action="toggleWidget" data-widget="voiceAgentWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <p>Voice Command Agent is active.</p>
          </div>
        </div>
      </div>
    </div>

    <div class="floating-widget-container">
      <button data-agent="2" class="right-btn" id="musicAgentBtn" title="Agent 02 - Music Control Agent">
        üéµ AGENT 02 - MUSIC
      </button>
      <div id="musicAgentWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>üéµ MUSIC CONTROL AGENT</span>
            <button data-action="toggleWidget" data-widget="musicAgentWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <p>Music Control Agent is active.</p>
          </div>
        </div>
      </div>
    </div>

    <div class="floating-widget-container">
      <button data-agent="3" class="right-btn" id="systemAgentBtn" title="Agent 03 - System Monitor Agent">
        ü§ñ AGENT 03 - SYSTEM
      </button>
      <div id="systemAgentWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>ü§ñ SYSTEM MONITOR AGENT</span>
            <button data-action="toggleWidget" data-widget="systemAgentWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <p>System Monitor Agent is active.</p>
          </div>
        </div>
      </div>
    </div>

    <div class="floating-widget-container">
      <button data-agent="4" class="right-btn" id="crawlerAgentBtn" title="Agent 04 - Web Crawler Agent">
        üï∑Ô∏è AGENT 04 - CRAWLER
      </button>
      <div id="crawlerAgentWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>üï∑Ô∏è WEB CRAWLER AGENT</span>
            <button data-action="toggleWidget" data-widget="crawlerAgentWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <p>Web Crawler Agent is active.</p>
          </div>
        </div>
      </div>
    </div>

    <div class="floating-widget-container">
      <button data-agent="5" class="right-btn" id="emailAgentBtn" title="Agent 05 - Email Manager Agent">
        üìß AGENT 05 - EMAIL
      </button>
      <div id="emailAgentWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>üìß EMAIL MANAGER AGENT</span>
            <button data-action="toggleWidget" data-widget="emailAgentWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <p>Email Manager Agent is active.</p>
          </div>
        </div>
      </div>
    </div>

    <div class="floating-widget-container">
      <button data-agent="6" class="right-btn" id="databaseAgentBtn" title="Agent 06 - Database Query Agent">
        üóÉÔ∏è AGENT 06 - DATABASE
      </button>
      <div id="databaseAgentWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>üóÉÔ∏è DATABASE QUERY AGENT</span>
            <button data-action="toggleWidget" data-widget="databaseAgentWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <p>Database Query Agent is active.</p>
          </div>
        </div>
      </div>
    </div>

    <div class="floating-widget-container">
      <button data-agent="7" class="right-btn" id="contentAgentBtn" title="Agent 07 - Content Creator Agent">
        ‚úçÔ∏è AGENT 07 - CONTENT
      </button>
      <div id="contentAgentWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>‚úçÔ∏è CONTENT CREATOR AGENT</span>
            <button data-action="toggleWidget" data-widget="contentAgentWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <p>Content Creator Agent is active.</p>
          </div>
        </div>
      </div>
    </div>

    <div class="floating-widget-container">
      <button data-agent="8" class="right-btn" id="securityAgentBtn" title="Agent 08 - Security Guard Agent">
        üõ°Ô∏è AGENT 08 - SECURITY
      </button>
      <div id="securityAgentWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>üõ°Ô∏è SECURITY GUARD AGENT</span>
            <button data-action="toggleWidget" data-widget="securityAgentWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <p>Security Guard Agent is active.</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Agent 09 Dyrektor Widget -->
    <div class="floating-widget-container">
      <button data-agent="9" class="right-btn" id="agent09DyrektorBtn" title="Agent 09 - Dyrektor Biznesowy">
        <BriefcaseIcon className="w-6 h-6 inline mr-2" /> AGENT 09 - DYREKTOR
      </button>
      <div id="agent09DyrektorWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>üè¢ AGENT 09 - DYREKTOR</span>
            <button data-action="toggleWidget" data-widget="agent09DyrektorWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <Agent09Dyrektor client:load />
          </div>
        </div>
      </div>
    </div>

    <div class="floating-widget-container">
      <button data-agent="10" class="right-btn" id="analyticsAgentBtn" title="Agent 10 - Analytics Prophet Agent">
        üìä AGENT 10 - ANALYTICS
      </button>
      <div id="analyticsAgentWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>üìä ANALYTICS PROPHET AGENT</span>
            <button data-action="toggleWidget" data-widget="analyticsAgentWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <p>Analytics Prophet Agent is active.</p>
          </div>
        </div>
      </div>
    </div>

    <div class="floating-widget-container">
      <button data-agent="file" class="right-btn" id="fileAgentBtn" title="File Manager Agent - ZarzƒÖdzanie plikami">
        üóÇÔ∏è FILE MANAGER
      </button>
      <div id="fileAgentWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>üóÇÔ∏è FILE MANAGER</span>
            <button data-action="toggleWidget" data-widget="fileAgentWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <p>File Manager Agent is active.</p>
          </div>
        </div>
      </div>
    </div>

    <div class="floating-widget-container">
      <button data-agent="marketing" class="right-btn" id="marketingAgentBtn" title="Marketing Maestro Agent - Marketing AI">
        üéØ MARKETING AGENT
      </button>
      <div id="marketingAgentWidget" class="floating-widget hidden">
        <div class="floating-widget-template">
          <div class="panel-header">
            <span>üéØ MARKETING AGENT</span>
            <button data-action="toggleWidget" data-widget="marketingAgentWidget" style="background: transparent; border: none; color: #000; font-size: 18px; cursor: pointer;">√ó</button>
          </div>
          <div class="panel-content">
            <p>Marketing Maestro Agent is active.</p>
          </div>
        </div>
      </div>
    </div>

    <button onclick="openMainChat()" class="right-btn"> <ChatBubbleLeftRightIcon className="w-6 h-6 inline mr-2" /> MAIN CHAT </button>
    <button onclick="openRefresh()" class="right-btn"> <ArrowPathIcon className="w-6 h-6 inline mr-2" /> REFRESH </button>
    <button onclick="openFolder()" class="right-btn"> <FolderIcon className="w-6 h-6 inline mr-2" /> FOLDER </button>
    <button onclick="openClose()" class="right-btn"> <XMarkIcon className="w-6 h-6 inline mr-2" /> CLOSE </button>
  </div>

  <!-- Separator Section 4 -->
  <section class="border border-edge relative">
    <div class="absolute left-0 right-0 h-full">
      <!-- Inner vertical lines -->
      <div class="absolute left-[calc(50vw+400px)] top-0 bottom-0 w-px bg-edge">
      </div>
      <div
        class="absolute right-[calc(50vw-400px)] top-0 bottom-0 w-px bg-edge"
      >
      </div>
      <!-- Outer vertical lines -->
      <div class="absolute left-[calc(50vw+600px)] top-0 bottom-0 w-px bg-edge">
      </div>
      <div
        class="absolute right-[calc(50vw-600px)] top-0 bottom-0 w-px bg-edge"
      >
      </div>
    </div>
    <div class="max-w-6xl mx-auto">
      <div class="py-1"></div>
    </div>
  </section>

  <!-- Footer Section - simplified without frame lines -->
  <section class="relative py-8">
    <div class="max-w-6xl mx-auto">
      <div class="flex flex-row justify-center items-center py-8 px-8">
        <!-- Footer content can be added here if needed -->
      </div>
    </div>
  </section>

  <!-- Universal Worker Communication Popup -->
  <WorkerCommunicationPopup />
</MyBonzoLayout>

<!-- JavaScript Functions -->
<script>
  import {
    openImageGenerator,
    openChatbot,
    openBigQuery,
    openKaggle,
    openTavily,
    testButtonFunction,
    runAllAPITests,
    openAPITestConsole,
    openCloudflareWorkers,
    checkAllStatus,
    launchFlowise,
    launchActivepieces,
    openFunction
  } from '../scripts/main-page';

  // Google ADK Manager - dynamically imported
  let adkManager: any = null;
  let initializeADK: any = null;
  let sendMessageToADK: any = null;
  
  // Assign imported functions to window object
  (window as any).openImageGenerator = openImageGenerator;
  (window as any).openChatbot = openChatbot;
  (window as any).openBigQuery = openBigQuery;
  (window as any).openKaggle = openKaggle;
  (window as any).openTavily = openTavily;
  (window as any).testButtonFunction = testButtonFunction;
  (window as any).runAllAPITests = runAllAPITests;
  (window as any).openAPITestConsole = openAPITestConsole;
  (window as any).openCloudflareWorkers = openCloudflareWorkers;
  (window as any).checkAllStatus = checkAllStatus;
  (window as any).launchFlowise = launchFlowise;
  (window as any).launchActivepieces = launchActivepieces;
  (window as any).openFunction = openFunction;

  // Google ADK Agent initialization flag
  let adkInitialized = false;

  // Initialize Google ADK Manager
  async function initGoogleADK() {
    try {
      if (!adkManager) {
        const adkModule = await import('../agents/google-adk/manager');
        adkManager = adkModule.adkManager;
        initializeADK = adkModule.initializeADK;
        sendMessageToADK = adkModule.sendMessageToADK;
        
        await initializeADK();
        adkInitialized = true;
        console.log('‚úÖ Google ADK Manager loaded and initialized');
      }
    } catch (error) {
      console.error('‚ùå Failed to load Google ADK Manager:', error);
    }
  }

  (window as any).checkDashboardLogin = async function () {
    const userInput = document.getElementById("dashboardUser") as HTMLInputElement;
    const passwordInput = document.getElementById("dashboardPassword") as HTMLInputElement;
    const loginWidget = document.getElementById("loginWidget");
    const loginError = document.getElementById("loginError") as HTMLParagraphElement;

    if (!userInput || !passwordInput || !loginWidget || !loginError) return;

    const login = userInput.value.trim();
    const password = passwordInput.value.trim();
    loginError.textContent = ''; // Clear previous errors

    try {
      const response = await fetch('/api/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ login, password })
      });

      const data = await response.json();

      if (data.success) {
        loginWidget.classList.add("hidden");
        console.log(`${data.role} login successful`);

        if (data.role === 'admin') {
          const dashboardButtons = document.getElementById("dashboardButtons");
          if (dashboardButtons) {
            dashboardButtons.classList.remove("hidden");
          }
        } else if (data.role === 'user') {
          const aiSections = document.querySelectorAll('.ai-functions-section');
          aiSections.forEach(section => section.classList.remove('hidden'));
        }

      } else {
        loginError.textContent = data.message || 'Invalid credentials';
        passwordInput.style.borderColor = "#ef4444";
        setTimeout(() => {
          passwordInput.style.borderColor = "";
        }, 2000);
      }
    } catch (error) {
      console.error('Login API error:', error);
      loginError.textContent = 'An error occurred during login.';
    }
  }

  document.addEventListener("DOMContentLoaded", function () {
    console.log("üöÄ DOM za≈Çadowany, inicjalizacja funkcji");

    // Add Enter key handler for dashboard login
    const userInput = document.getElementById("dashboardUser");
    const passwordInput = document.getElementById("dashboardPassword");
    if (userInput) {
      userInput.addEventListener("keydown", function (e) {
        if ((e as any).key === "Enter") {
          (window as any).checkDashboardLogin();
        }
      });
    }
    if (passwordInput) {
      passwordInput.addEventListener("keydown", function (e) {
        if ((e as any).key === "Enter") {
          (window as any).checkDashboardLogin();
        }
      });
    }
  });
</script>

<!-- BigQuery API Integration Script -->
<script is:inline>
  // Import BigQuery API functionality
  import('../utils/bigQueryAPI.js').then(module => {
    // Make BigQuery functions available globally
    window.BigQueryAPI = module.BigQueryAPI;
    window.BigQueryInterface = module.BigQueryInterface;
    console.log('‚úÖ BigQuery API loaded');
  }).catch(err => console.warn('‚ö†Ô∏è BigQuery API load failed:', err));
</script>

<!-- Kaggle API Integration Script -->
<script is:inline>
  // Import Kaggle API functionality  
  import('../utils/kaggleAPI.js').then(module => {
    // Make Kaggle functions available globally
    window.KaggleAPI = module.KaggleAPI;
    window.KaggleInterface = module.KaggleInterface;
    console.log('‚úÖ Kaggle API loaded');
  }).catch(err => console.warn('‚ö†Ô∏è Kaggle API load failed:', err));
</script>

<!-- Voice AI Integration Script -->
<script is:inline>
  // Import Voice AI functionality
  import('../utils/voiceAiAPI.js').then(module => {
    // Make Voice AI functions available globally
    window.VoiceAIAPI = module.VoiceAIAPI;
    window.VoiceAIInterface = module.VoiceAIInterface;
    console.log('‚úÖ Voice AI API loaded');
  }).catch(err => console.warn('‚ö†Ô∏è Voice AI API load failed:', err));
</script>

<style>
  /* Backroom-style background with vertical lines */
  body {
    background: 
      repeating-linear-gradient(
        90deg,
        transparent,
        transparent 49px,
        rgba(0, 217, 255, 0.02) 50px,
        rgba(0, 217, 255, 0.02) 51px
      ),
      radial-gradient(ellipse at center, rgba(13, 21, 26, 0.95), rgba(5, 8, 10, 1));
    background-attachment: fixed;
  }

  /* System title - enlarged and bold */
  .system-title {
    color: #00d7ef !important;
    font-weight: 900 !important;
    font-size: 3.5rem !important;
    margin-bottom: 1rem !important;
    text-align: center !important;
    text-shadow: 0 0 20px rgba(0, 215, 239, 0.5);
    letter-spacing: 0.02em;
  }

  /* Dashboard login section */
  .dashboard-login-section {
    background: rgba(0, 0, 0, 0.6);
    padding: 32px 24px;
    margin: 24px 0;
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px;
    box-shadow: 0 2px 18px rgba(0, 217, 255, 0.2);
  }

  .login-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 12px;
  }

  .login-input {
    background: #131e28;
    color: #00d7ef;
    padding: 12px 16px;
    border: 2px solid rgba(0, 217, 255, 0.4);
    border-radius: 0px;
    font-size: 1.1rem;
    font-weight: 600;
    text-align: center;
    min-width: 200px;
    transition: all 0.2s ease;
  }

  .login-input:focus {
    outline: none;
    border-color: #00d7ef;
    box-shadow: 0 0 12px rgba(0, 217, 255, 0.4);
  }

  .login-btn {
    background-color: #164e63;
    color: white;
    padding: 12px 24px;
    border: none;
    border-radius: 0px;
    font-weight: 600;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.2s ease;
    box-shadow: 0 2px 12px rgba(0, 217, 255, 0.2);
  }

  .login-btn:hover {
    background-color: #1be1ff;
    color: #000;
    transform: translateY(-1px);
  }

  .dashboard-buttons {
    display: flex;
    flex-direction: column;
    gap: 12px;
    align-items: center;
  }

  .dashboard-btn {
    background-color: #164e63;
    color: white;
    padding: 14px 28px;
    border-radius: 0px;
    font-weight: 600;
    font-size: 1.2rem;
    text-decoration: none;
    display: block;
    text-align: center;
    min-width: 220px;
    box-shadow: 0 2px 18px rgba(0, 217, 255, 0.3);
    transition: all 0.2s ease;
    border: 1px solid rgba(0, 217, 255, 0.3);
  }

  .dashboard-btn:hover {
    background-color: #1be1ff;
    color: #000;
    transform: translateY(-2px);
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.5);
  }

  /* Feature tiles for 9 functions */
  .feature-tile {
    background: rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px;
    box-shadow: 0 1px 26px rgba(20, 215, 230, 0.2);
    padding: 34px 24px 24px 24px;
    margin: 0; /* grid gap controls spacing now */
    text-align: left;
    min-width: 270px;
    transition: all 0.3s ease;
    cursor: pointer;
    position: relative;
    z-index: 52;
    pointer-events: auto;
  }

  .feature-tile:hover {
    border-color: #00d7ef;
    box-shadow: 0 4px 30px rgba(0, 217, 255, 0.4);
    transform: translateY(-3px);
  }

  .feature-title {
    color: #00d7ef;
    font-weight: 700;
    font-size: 1.24rem;
    margin-bottom: 0.46em;
  }

  .feature-desc {
    color: #94aec4;
    font-size: 1.09rem;
    line-height: 1.5;
  }

  .feature-icon {
    font-size: 2.7rem;
    margin-bottom: 14px;
    color: #1be1ff;
    display: block;
  }

  /* Old admin-panel-fixed removed - now using left-panel-fixed */

  /* Right panel - fixed right side */
  .right-panel-fixed {
    position: fixed;
    bottom: 20px;
    right: 20px;
    top: 20px;
    z-index: 100;
    display: flex;
    flex-direction: column;
    gap: 0;
    max-height: calc(100vh - 40px);
    overflow-y: auto;
    overflow-x: hidden;
    scroll-behavior: smooth;
    scrollbar-width: thin;
    scrollbar-color: rgba(27, 225, 255, 0.5) rgba(0, 0, 0, 0.2);
  }

  .right-panel-fixed::-webkit-scrollbar {
    width: 6px;
  }

  .right-panel-fixed::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.2);
    border-radius: 0;
  }

  .right-panel-fixed::-webkit-scrollbar-thumb {
    background: rgba(27, 225, 255, 0.5);
    border-radius: 0;
  }

  .right-panel-fixed::-webkit-scrollbar-thumb:hover {
    background: rgba(27, 225, 255, 0.7);
  }

  .left-panel-fixed {
    position: fixed;
    bottom: 20px;
    left: 20px;
    top: 20px;
    z-index: 100;
    display: flex;
    flex-direction: column;
    gap: 0;
    max-height: calc(100vh - 40px);
    overflow-y: auto;
    overflow-x: hidden;
    scroll-behavior: smooth;
    scrollbar-width: thin;
    scrollbar-color: rgba(27, 225, 255, 0.5) rgba(0, 0, 0, 0.2);
  }

  .left-panel-fixed::-webkit-scrollbar {
    width: 6px;
  }

  .left-panel-fixed::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.2);
    border-radius: 0;
  }

  .left-panel-fixed::-webkit-scrollbar-thumb {
    background: rgba(27, 225, 255, 0.5);
    border-radius: 0;
  }

  .left-panel-fixed::-webkit-scrollbar-thumb:hover {
    background: rgba(27, 225, 255, 0.7);
  }

  .right-btn {
    background: rgba(0, 0, 0, 0.5);
    color: #ffffff;
    padding: 8px 20px;
    margin: 0;
    border-radius: 0px;
    box-shadow: 0 1px 26px rgba(20, 215, 230, 0.2);
    font-size: 0.9rem;
    font-weight: 700;
    border: 1px solid rgba(0, 217, 255, 0.3);
    transition: all 0.3s ease;
    display: block;
    text-align: center;
    min-width: 309px;
    cursor: pointer;
    position: relative;
    z-index: 10;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    backdrop-filter: blur(20px);
    font-family: 'Courier New', monospace;
  }

  .right-btn:hover {
    background: rgba(0, 0, 0, 0.7);
    color: #00d7ef;
    transform: translateY(-2px);
    box-shadow: 0 4px 30px rgba(0, 217, 255, 0.4);
    border-color: #00d7ef;
    backdrop-filter: blur(25px);
  }

  .right-btn:active {
    transform: translateY(0px);
    box-shadow: 0 2px 10px rgba(0, 217, 255, 0.4);
  }

  .left-btn {
    background: rgba(0, 0, 0, 0.5);
    color: #ffffff;
    padding: 8px 20px;
    margin: 0;
    border-radius: 0px;
    box-shadow: 0 1px 26px rgba(20, 215, 230, 0.2);
    font-size: 0.9rem;
    font-weight: 700;
    border: 1px solid rgba(0, 217, 255, 0.3);
    transition: all 0.3s ease;
    display: block;
    text-align: center;
    min-width: 309px;
    cursor: pointer;
    position: relative;
    z-index: 10;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    backdrop-filter: blur(20px);
    font-family: 'Courier New', monospace;
  }

  .left-btn:hover {
    background: rgba(0, 0, 0, 0.7);
    color: #00d7ef;
    transform: translateY(-2px);
    box-shadow: 0 4px 30px rgba(0, 217, 255, 0.4);
    border-color: #00d7ef;
    backdrop-filter: blur(25px);
  }

  .left-btn:active {
    transform: translateY(0px);
    box-shadow: 0 2px 10px rgba(0, 217, 255, 0.4);
  }

  .admin-btn {
    background: rgba(255, 255, 255, 0.05);
    color: #ffffff;
    padding: 8px 20px;
    border-radius: 0px;
    box-shadow: 0 2px 12px rgba(0, 217, 255, 0.1);
    font-size: 0.9rem;
    font-weight: 700;
    text-decoration: none;
    border: 1px solid rgba(255, 255, 255, 0.2);
    transition: all 0.3s ease;
    display: block;
    text-align: center;
    min-width: 160px;
    position: relative;
    z-index: 10;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    backdrop-filter: blur(20px);
    font-family: 'Courier New', monospace;
  }

  .admin-btn:hover {
    background: rgba(0, 217, 255, 0.15);
    color: #00d7ef;
    transform: translateY(-2px);
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.3);
    border-color: rgba(0, 217, 255, 0.8);
    backdrop-filter: blur(25px);
  }

  /* Login container - fixed below admin panel */
  .login-container-fixed {
    display: flex;
    flex-direction: column;
    gap: 12px;
    background: rgba(0, 0, 0, 0.5);
    padding: 16px;
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px;
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.2);
  }

  .login-input-fixed {
    background: #131e28;
    color: #00d7ef;
    padding: 10px 12px;
    border: 2px solid rgba(0, 217, 255, 0.4);
    border-radius: 0px;
    font-size: 1rem;
    font-weight: 600;
    text-align: center;
    min-width: 150px;
    transition: all 0.2s ease;
  }

  .login-input-fixed:focus {
    outline: none;
    border-color: #00d7ef;
    box-shadow: 0 0 12px rgba(0, 217, 255, 0.4);
  }

  .login-input-fixed::placeholder {
    color: rgba(0, 217, 255, 0.6);
  }

  .login-btn-fixed {
    background-color: #164e63;
    color: white;
    padding: 10px 16px;
    border: none;
    border-radius: 0px;
    font-weight: 600;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.2s ease;
    box-shadow: 0 2px 12px rgba(0, 217, 255, 0.2);
  }

  .login-btn-fixed:hover {
    background-color: #1be1ff;
    color: #000;
    transform: translateY(-1px);
    box-shadow: 0 4px 16px rgba(0, 217, 255, 0.4);
  }

  /* MCP Panel - below login panel */
  .mcp-panel-fixed {
    margin-top: 20px;
    background: rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px;
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.2);
    backdrop-filter: blur(20px);
  }

  .mcp-panel-header {
    background: linear-gradient(90deg, #0f3946, #1be1ff);
    color: #000;
    padding: 8px 12px;
    font-size: 11px;
    font-weight: 700;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-family: 'Courier New', monospace;
  }

  .mcp-btn {
    display: flex;
    align-items: center;
    width: 100%;
    background: rgba(255, 255, 255, 0.05);
    color: #ffffff;
    padding: 8px 12px;
    border: none;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    font-size: 0.85rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-align: left;
    backdrop-filter: blur(20px);
    font-family: 'Courier New', monospace;
  }

  .mcp-btn:last-child {
    border-bottom: none;
  }

  .mcp-btn:hover {
    background: rgba(0, 217, 255, 0.15);
    color: #00d7ef;
    transform: translateX(3px);
    box-shadow: inset 3px 0 0 rgba(0, 217, 255, 0.8);
  }

  .mcp-btn-icon {
    font-size: 1.2rem;
    margin-right: 10px;
    min-width: 20px;
  }

  .mcp-btn-text {
    flex: 1;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  /* Override any existing rounded corners - FORCE 0px everywhere */
  * {
    border-radius: 0px !important;
  }

  .widget-container {
    background: rgba(0, 0, 0, 0.7);
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px !important;
    transition: all 0.3s ease;
    overflow: hidden;
    position: relative;
  }

  .widget-container:hover {
    border-color: #00d9ff;
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.2);
    transform: translateY(-2px);
  }

  /* Force 0px border radius on specific elements */
  .additional-functions-section {
    position: relative;
    z-index: 50;
    pointer-events: auto;
  }

  .additional-grid {
    display: grid;
    /* Force 3 columns on wide screens so the section is exactly 3x3 for 9 items */
    grid-template-columns: repeat(3, 1fr);
    /* tighter gap between items without changing tile internals */
    gap: 0.75rem; /* ~12px */
    margin-top: 2rem;
    /* match width of top sections (approx Tailwind max-w-6xl = 72rem = 1152px) */
    max-width: 72rem; /* 1152px */
    width: 100%;
    padding: 0 1rem; /* keep small horizontal padding on narrow screens */
    margin-left: auto;
    margin-right: auto;
    position: relative;
    z-index: 51;
  }

  /* Responsive fallbacks: 2 columns on medium, 1 column on small */
  @media (max-width: 1024px) {
    .additional-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 768px) {
    .additional-grid {
      grid-template-columns: 1fr;
    }
  }

  .hidden {
    display: none !important;
  }

  /* Left-style buttons - same style as admin panel buttons */
  .left-style-btn {
    background: rgba(0, 0, 0, 0.5);
    color: #00d7ef;
    padding: 12px 24px;
    border-radius: 0px;
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.3);
    font-size: 1.1rem;
    font-weight: 600;
    border: 1px solid rgba(0, 217, 255, 0.4);
    transition: all 0.2s ease;
    display: inline-block;
    text-align: center;
    min-width: 180px;
    cursor: pointer;
  }

  .left-style-btn:hover {
    background: #00d7ef;
    color: #131e28;
    transform: translateY(-2px);
    box-shadow: 0 6px 25px rgba(0, 217, 255, 0.5);
  }

  .left-style-btn:active {
    transform: scale(1.05) translateY(-2px);
    box-shadow: 0 8px 30px rgba(0, 217, 255, 0.7);
  }

  .left-style-buttons-section {
    border-top: 1px solid rgba(0, 217, 255, 0.3);
    border-bottom: 1px solid rgba(0, 217, 255, 0.3);
  }

  /* Floating widget containers and widgets */
  .floating-widget-container {
    position: relative;
    display: block;
    width: 100%;
    margin-bottom: 8px;
  }
  
  .floating-widget-container:last-child {
    margin-bottom: 0;
  }

  .floating-widget {
    /* Let components handle their own positioning */
    display: block;
  }

  /* Template CSS for all floating widgets - based on Music Player design */
  .floating-widget-template {
    background: linear-gradient(
      135deg,
      rgba(15, 56, 70, 0.98),
      rgba(0, 0, 0, 0.95)
    );
    border: 2px solid #1be1ff;
    border-radius: 0;
    backdrop-filter: blur(15px);
    min-width: 480px;
    max-width: 520px;
    min-height: 450px;
    max-height: 600px;
    box-shadow:
      0 0 12px rgba(27, 225, 255, 0.2),
      0 0 25px rgba(27, 225, 255, 0.08),
      inset 0 1px 0 rgba(27, 225, 255, 0.1);
    transition: all 0.3s ease;
    position: relative;
    z-index: 1000;
    font-family: "Rajdhani", sans-serif;
  }

  .floating-widget-template .panel-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 12px;
    background: linear-gradient(90deg, #0f3846, #1be1ff);
    border-bottom: 2px solid #1be1ff;
    border-radius: 0;
    color: #000;
    font-size: 12px;
    font-weight: 700;
    text-shadow: 0 0 2px rgba(27, 225, 255, 0.4);
    user-select: none;
  }

  .floating-widget-template .panel-content {
    padding: 12px;
    transition: all 0.3s ease;
  }

  /* Floating agent widgets */
  .floating-agent-widget {
    position: fixed !important;
    right: 220px !important; /* Avoid left panel overlap */
    z-index: 1000 !important;
  }

  /* Make sure existing widgets don't overlap */
  #googleVoiceWidget {
    position: fixed !important;
    right: 10px !important;
    bottom: 20px !important;
    z-index: 999 !important;
  }

  /* Widget containers - let components handle their own positioning */
  #polaczekWidget,
  #musicPlayerWidget {
    display: block;
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (max-width: 1024px) {
    .grid-cols-1.lg\:grid-cols-2.xl\:grid-cols-3 {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .system-title {
      font-size: 2.5rem !important;
    }

    /* admin-panel-fixed removed - using left-panel-fixed */

    .right-panel-fixed {
      bottom: 20px;
      right: 10px;
      gap: 12px;
    }

    .left-panel-fixed {
      bottom: 20px;
      left: 10px;
      gap: 12px;
    }

    .admin-btn,
    .right-btn,
    .left-btn {
      min-width: 180px;
      font-size: 1rem;
      padding: 10px 20px;
    }

    .login-container-fixed {
      padding: 12px;
    }

    .login-input-fixed {
      min-width: 130px;
      font-size: 0.9rem;
      padding: 8px 10px;
    }

    .login-btn-fixed {
      font-size: 0.9rem;
      padding: 8px 12px;
    }
  }

  @media (max-width: 768px) {
    /* admin-panel-fixed removed - using left-panel-fixed */

    .right-panel-fixed {
      right: 8px;
      bottom: 15px;
      gap: 10px;
    }

    .left-panel-fixed {
      left: 8px;
      bottom: 15px;
      gap: 10px;
    }

    .admin-btn,
    .right-btn,
    .left-btn {
      min-width: 150px;
      font-size: 0.9rem;
      padding: 8px 16px;
    }

    .login-container-fixed {
      padding: 10px;
    }

    .login-input-fixed {
      min-width: 120px;
      font-size: 0.85rem;
      padding: 7px 8px;
    }

    .login-btn-fixed {
      font-size: 0.85rem;
      padding: 7px 10px;
    }
  }

  @media (min-width: 1024px) and (max-width: 1280px) {
    .grid-cols-1.lg\:grid-cols-2.xl\:grid-cols-3 {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1280px) {
    .grid-cols-1.lg\:grid-cols-2.xl\:grid-cols-3 {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  /* Global vertical lines for workers sections */
  .workers-vertical-line-left,
  .workers-vertical-line-right {
    position: fixed;
    top: 0;
    bottom: 0;
    width: 1px;
    background: #ffffff;
    z-index: 999;
    pointer-events: none;
  }

  .workers-vertical-line-left {
    left: calc(
      50vw - 576px - 10px - 21px
    ); /* 21px more to the left (moved 4px to the right) */
  }

  .workers-vertical-line-right {
    right: calc(50vw - 576px - 10px - 20px); /* 20px more to the right */
  }

  /* Remove body pseudo-elements */
  body::before, body::after {
    display: none;
  }

  /* Private Card Smaller Styles */
  .private-card {
    max-width: 280px !important;
    min-height: 200px !important;
  }

  .private-title {
    font-size: 1.1rem !important;
    color: #ff6b6b !important;
  }

  .private-desc {
    font-size: 0.85rem !important;
    opacity: 0.8;
  }

  .private-tag {
    background: rgba(255, 107, 107, 0.1) !important;
    color: #ff6b6b !important;
    font-size: 0.75rem !important;
  }

  .private-btn {
    background: linear-gradient(135deg, #ff6b6b, #ee5a52) !important;
    font-size: 0.85rem !important;
    padding: 8px 16px !important;
  }

  /* Floating Panel Styles */
  .floating-panel {
    position: fixed;
    top: 120px;
    right: 20px;
    width: 280px;
    background: rgba(20, 20, 25, 0.95);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 20px;
    z-index: 1000;
    backdrop-filter: blur(10px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  }

  .floating-panel h3 {
    color: #00ff88;
    margin: 0 0 15px 0;
    font-size: 1.1rem;
    text-align: center;
  }

  .panel-section {
    margin-bottom: 15px;
    padding: 10px;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .panel-section h4 {
    color: #fff;
    margin: 0 0 8px 0;
    font-size: 0.9rem;
  }

  .panel-button {
    width: 100%;
    padding: 8px 12px;
    margin: 4px 0;
    background: rgba(0, 255, 136, 0.1);
    border: 1px solid rgba(0, 255, 136, 0.3);
    border-radius: 6px;
    color: #00ff88;
    font-size: 0.8rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .panel-button:hover {
    background: rgba(0, 255, 136, 0.2);
    border-color: #00ff88;
  }

  .admin-login-btn {
    background: rgba(255, 107, 107, 0.1) !important;
    border: 1px solid rgba(255, 107, 107, 0.3) !important;
    color: #ff6b6b !important;
  }

  .admin-login-btn:hover {
    background: rgba(255, 107, 107, 0.2) !important;
    border-color: #ff6b6b !important;
  }

  /* Reset main padding since no footer */
  main {
    padding-bottom: 20px;
  }
</style>

<script>
  // Floating Widget Toggle Function
  function toggleWidget(widgetId) {
    const widget = document.getElementById(widgetId);
    if (widget) {
      const isHidden = widget.classList.contains('hidden');
      
      // Hide all other widgets first
      const allWidgets = document.querySelectorAll('.floating-widget');
      allWidgets.forEach(w => w.classList.add('hidden'));
      
      // Toggle current widget
      if (isHidden) {
        widget.classList.remove('hidden');
      }
    }
  }

  // Make function globally available
  window.toggleWidget = toggleWidget;

  // Event listener for data-action buttons
  document.addEventListener('DOMContentLoaded', function() {
    document.addEventListener('click', function(e) {
      const button = e.target.closest('[data-action="toggleWidget"]');
      if (button) {
        const widgetId = button.dataset.widget;
        if (widgetId) {
          toggleWidget(widgetId);
        }
        return;
      }

      // Handle MCP actions
      const mcpButton = e.target.closest('[data-action^="open-mcp-"]');
      if (mcpButton) {
        const action = mcpButton.dataset.action;
        handleMcpAction(action);
        return;
      }
    });
  });

  // MCP Action Handler
  function handleMcpAction(action) {
    console.log('MCP Action:', action);
    
    switch(action) {
      case 'open-mcp-browser':
        // Open browser MCP configuration
        window.open('/mcp-servers-management#browser', '_blank');
        break;
      case 'open-mcp-docker':
        // Open Docker MCP configuration  
        window.open('/mcp-servers-management#docker', '_blank');
        break;
      case 'open-mcp-github':
        // Open GitHub MCP configuration
        window.open('/mcp-servers-management#github', '_blank');
        break;
      case 'open-mcp-knowledge':
        // Open Knowledge Graph MCP configuration
        window.open('/mcp-servers-management#knowledge', '_blank');
        break;
      default:
        console.warn('Unknown MCP action:', action);
        // Fallback - open MCP management page
        window.open('/mcp-servers-management', '_blank');
    }
  }

  // Make MCP handler globally available
  window.handleMcpAction = handleMcpAction;

  // MyBlog AI Launch Function
  function launchMyBlogAI() {
    window.open('/myblogai', '_blank');
  }

  // Make function globally available
  window.launchMyBlogAI = launchMyBlogAI;

  // Enhanced Main Chat System
  class MainChatAgentFunctions {
    constructor() {
      this.isActive = false;
      this.chatHistory = [];
    }

    // Bind to global scope for right-panel integration
    bindToRightPanel() {
      window.openMainChat = this.openMainChat.bind(this);
      window.toggleMainChat = this.toggleMainChat.bind(this);
      window.closeMainChat = this.closeMainChat.bind(this);
      window.sendToMainChat = this.sendToMainChat.bind(this);
      window.clearMainChat = this.clearMainChat.bind(this);
    }

    // Open main chat
    openMainChat() {
      console.log('üí¨ Opening Enhanced Main Chat...');
      this.createChatWidget();
      this.isActive = true;
    }

    // Toggle chat widget
    toggleMainChat() {
      if (this.isActive) {
        this.closeMainChat();
      } else {
        this.openMainChat();
      }
    }

    // Create chat widget
    createChatWidget() {
      const existingWidget = document.getElementById('mainChatWidget');
      if (existingWidget) {
        existingWidget.classList.remove('hidden');
        return;
      }

      const widget = document.createElement('div');
      widget.id = 'mainChatWidget';
      widget.className = 'floating-widget';
      widget.style.cssText = `
        position: fixed;
        top: 10%;
        right: 20px;
        width: 400px;
        height: 600px;
        background: linear-gradient(135deg, rgba(0, 0, 0, 0.95), rgba(15, 56, 70, 0.9));
        border: 1px solid #1be1ff;
        border-radius: 12px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);
        z-index: 10000;
        overflow: hidden;
        backdrop-filter: blur(10px);
        display: flex;
        flex-direction: column;
      `;

      widget.innerHTML = `
        <div class="agent-panel-header" style="background: rgba(27, 225, 255, 0.1); padding: 12px; border-bottom: 1px solid #1be1ff; display: flex; justify-content: space-between; align-items: center;">
          <span style="color: #1be1ff; font-weight: bold;">üí¨ MAIN CHAT</span>
          <button onclick="closeMainChat()" style="background: none; border: none; color: #ff6b6b; font-size: 20px; cursor: pointer; padding: 0; width: 30px; height: 30px;">√ó</button>
        </div>
        <div style="flex: 1; display: flex; flex-direction: column; padding: 0;">
          <div style="padding: 15px 15px 10px 15px;">
            <div style="margin-bottom: 15px; padding: 10px; background: rgba(27, 225, 255, 0.1); border-radius: 4px;">
              <div style="display: flex; justify-content: space-between; align-items: center;">
                <span style="color: #1be1ff; font-weight: bold;">üí¨ CHAT HUB</span>
                <select id="chatModelSelector" style="background: rgba(0, 0, 0, 0.5); border: 1px solid #1be1ff; color: white; border-radius: 4px; padding: 4px 8px; font-size: 12px;">
                  <option value="qwen">Qwen (PL)</option>
                  <option value="gemma">Gemma</option>
                  <option value="fast">Fast</option>
                  <option value="advanced">Advanced</option>
                </select>
              </div>
              <div style="font-size: 12px; color: #ccc; margin-top: 5px;">Centralny system komunikacji</div>
            </div>
            
            <div style="display: flex; gap: 8px; flex-wrap: wrap; margin-bottom: 15px;">
              <button onclick="connectToAssistant()" style="background: rgba(27, 225, 255, 0.2); border: 1px solid #1be1ff; color: #1be1ff; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">ü§ñ AI Assistant</button>
              <button onclick="openChannels()" style="background: rgba(74, 222, 128, 0.2); border: 1px solid #4ade80; color: #4ade80; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">üì∫ Channels</button>
              <button onclick="chatHistory()" style="background: rgba(255, 193, 7, 0.2); border: 1px solid #ffc107; color: #ffc107; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">üìã History</button>
            </div>
          </div>

          <div id="chatMessages" style="flex: 1; padding: 0 15px; overflow-y: auto; background: rgba(0, 0, 0, 0.2); margin: 0 10px; border-radius: 8px; max-height: 300px;">
            <div style="padding: 15px; color: #ccc; text-align: center; font-size: 14px;">
              üí¨ Witaj w Main Chat!<br>
              <small>Rozpocznij rozmowƒô wpisujƒÖc wiadomo≈õƒá poni≈ºej</small>
            </div>
          </div>

          <div style="padding: 15px;">
            <textarea id="chatInput" placeholder="Wpisz swojƒÖ wiadomo≈õƒá..." style="width: 100%; height: 80px; resize: none; background: rgba(0, 0, 0, 0.3); border: 1px solid #1be1ff; border-radius: 6px; color: white; padding: 10px; font-family: inherit;"></textarea>
            
            <div style="margin-top: 10px; display: flex; gap: 8px;">
              <button onclick="sendToMainChat()" style="background: rgba(27, 225, 255, 0.2); border: 1px solid #1be1ff; color: #1be1ff; padding: 8px 16px; border-radius: 6px; cursor: pointer; flex: 1;">üì§ Wy≈õlij</button>
              <button onclick="clearMainChat()" style="background: rgba(239, 68, 68, 0.2); border: 1px solid #ef4444; color: #ef4444; padding: 8px 16px; border-radius: 6px; cursor: pointer;">üóëÔ∏è Wyczy≈õƒá</button>
            </div>

            <div style="margin-top: 10px; display: flex; gap: 8px; flex-wrap: wrap;">
              <button onclick="quickMessage('status')" style="background: rgba(74, 222, 128, 0.2); border: 1px solid #4ade80; color: #4ade80; font-size: 11px; padding: 4px 8px; border-radius: 4px; cursor: pointer;">üìä Status</button>
              <button onclick="quickMessage('help')" style="background: rgba(255, 193, 7, 0.2); border: 1px solid #ffc107; color: #ffc107; font-size: 11px; padding: 4px 8px; border-radius: 4px; cursor: pointer;">‚ùì Help</button>
              <button onclick="quickMessage('agents')" style="background: rgba(167, 139, 250, 0.2); border: 1px solid #a78bfa; color: #a78bfa; font-size: 11px; padding: 4px 8px; border-radius: 4px; cursor: pointer;">ü§ñ Agents</button>
            </div>
          </div>
        </div>
      `;

      document.body.appendChild(widget);
      
      // Animate in
      setTimeout(() => {
        widget.style.opacity = '1';
        widget.style.transform = 'scale(1)';
      }, 10);
    }

    // Close chat
    closeMainChat() {
      const widget = document.getElementById('mainChatWidget');
      if (widget) {
        widget.style.opacity = '0';
        widget.style.transform = 'scale(0.9)';
        setTimeout(() => {
          if (widget.parentNode) {
            widget.parentNode.removeChild(widget);
          }
        }, 200);
      }
      this.isActive = false;
    }

    // Send to chat - Enhanced with POLACZEK API
    async sendToMainChat() {
      const input = document.getElementById('chatInput');
      const messagesContainer = document.getElementById('chatMessages');
      const modelSelector = document.getElementById('chatModelSelector');
      
      if (!input || !input.value.trim() || !modelSelector) return;
      
      const message = input.value.trim();
      const selectedModel = modelSelector.value;
      console.log(`üì§ Sending chat message: '${message}' using model: '${selectedModel}'`);
      
      // Add user message
      this.addMessage('user', message);
      
      // Clear input
      input.value = '';
      
      // Show typing indicator
      this.addMessage('system', '‚è≥ POLACZEK pisze...');
      
      try {
        // Call POLACZEK API with selected model
        const response = await fetch('/api/polaczek-chat', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            message: message,
            model: selectedModel,
            language: 'pl'
          })
        });
        
        const data = await response.json();
        
        // Remove typing indicator
        const messages = messagesContainer.querySelectorAll('.message');
        const lastMessage = messages[messages.length - 1];
        if (lastMessage && lastMessage.textContent.includes('pisze')) {
          messagesContainer.removeChild(lastMessage);
        }
        
        // Add POLACZEK response
        const aiResponse = data.response || data.answer || 'Przepraszam, wystƒÖpi≈Ç problem z odpowiedziƒÖ.';
        this.addMessage('assistant', `ü§ñ POLACZEK (${selectedModel}): ${aiResponse}`);
        
      } catch (error) {
        // Remove typing indicator
        const messages = messagesContainer.querySelectorAll('.message');
        const lastMessage = messages[messages.length - 1];
        if (lastMessage && lastMessage.textContent.includes('pisze')) {
          messagesContainer.removeChild(lastMessage);
        }
        
        // Fallback response
        const response = this.generateChatResponse(message);
        this.addMessage('assistant', response);
      }
    }

    // Add message to chat
    addMessage(type, content) {
      const messagesContainer = document.getElementById('chatMessages');
      if (!messagesContainer) return;
      
      const messageDiv = document.createElement('div');
      messageDiv.className = 'message';
      messageDiv.style.cssText = `
        margin: 10px 0;
        padding: 10px;
        border-radius: 8px;
        font-size: 14px;
        line-height: 1.4;
        ${type === 'user' ? 'background: rgba(27, 225, 255, 0.1); border-left: 3px solid #1be1ff; margin-left: 20px;' : ''}
        ${type === 'assistant' ? 'background: rgba(74, 222, 128, 0.1); border-left: 3px solid #4ade80; margin-right: 20px;' : ''}
        ${type === 'system' ? 'background: rgba(255, 193, 7, 0.1); border-left: 3px solid #ffc107; text-align: center; font-style: italic;' : ''}
        ${type === 'error' ? 'background: rgba(239, 68, 68, 0.1); border-left: 3px solid #ef4444;' : ''}
      `;
      
      const timestamp = new Date().toLocaleTimeString('pl-PL', {
        hour: '2-digit',
        minute: '2-digit'
      });
      
      messageDiv.innerHTML = `
        <div>${content}</div>
        <div style="font-size: 11px; color: #666; margin-top: 5px; text-align: right;">${timestamp}</div>
      `;
      
      messagesContainer.appendChild(messageDiv);
      messagesContainer.scrollTop = messagesContainer.scrollHeight;
      
      // Store in history
      this.chatHistory.push({
        type,
        content,
        timestamp: new Date()
      });
    }

    // Generate fallback responses
    generateChatResponse(message) {
      const lowerMessage = message.toLowerCase();
      
      if (lowerMessage.includes('status')) {
        return `üìä Status systemu:<br>‚Ä¢ Agenty: 20 aktywnych<br>‚Ä¢ Us≈Çugi: Wszystkie dzia≈ÇajƒÖ<br>‚Ä¢ Pamiƒôƒá: 67% wykorzystana<br>‚Ä¢ Uptime: 99.9%`;
      }
      
      if (lowerMessage.includes('help') || lowerMessage.includes('pomoc')) {
        return `‚ùì Dostƒôpne komendy:<br>‚Ä¢ "status" - status systemu<br>‚Ä¢ "agents" - lista agent√≥w<br>‚Ä¢ "pogoda" - info o pogodzie<br>‚Ä¢ "czas" - aktualny czas<br>‚Ä¢ Zadaj dowolne pytanie dla AI`;
      }
      
      if (lowerMessage.includes('agents') || lowerMessage.includes('agent')) {
        return `ü§ñ Aktywne agenty:<br>‚Ä¢ Voice Agent ‚úÖ<br>‚Ä¢ Music Agent ‚úÖ<br>‚Ä¢ System Agent ‚úÖ<br>‚Ä¢ Business Agent ‚úÖ<br>‚Ä¢ POLACZEK ‚úÖ`;
      }
      
      return `üí¨ Rozumiem: "${message}"<br><br>Jestem twoim AI asystentem! Mogƒô pom√≥c z:<br>‚Ä¢ Monitorowaniem systemu<br>‚Ä¢ ZarzƒÖdzaniem agentami<br>‚Ä¢ Odpowiedziami na pytania<br>‚Ä¢ AutomatyzacjƒÖ zada≈Ñ`;
    }

    // Clear chat
    clearMainChat() {
      const input = document.getElementById('chatInput');
      const messagesContainer = document.getElementById('chatMessages');
      
      if (input) input.value = '';
      if (messagesContainer) {
        messagesContainer.innerHTML = `
          <div style="padding: 15px; color: #ccc; text-align: center; font-size: 14px;">
            üí¨ Chat wyczyszczony!<br>
            <small>Rozpocznij nowƒÖ rozmowƒô</small>
          </div>
        `;
      }
      
      this.chatHistory = [];
    }
  }

  // Global chat helper functions
  window.connectToAssistant = function() {
    console.log('ü§ñ ≈ÅƒÖczenie z AI Assistant...');
    const messagesContainer = document.getElementById('chatMessages');
    if (messagesContainer) {
      const messageDiv = document.createElement('div');
      messageDiv.style.cssText = 'padding: 10px; color: #4ade80; text-align: center; font-style: italic;';
      messageDiv.innerHTML = 'ü§ñ POLACZEK AI po≈ÇƒÖczony - Gotowy do pomocy!';
      messagesContainer.appendChild(messageDiv);
      messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
  };

  window.openChannels = function() {
    console.log('üì∫ Otwieranie kana≈Ç√≥w...');
    const messagesContainer = document.getElementById('chatMessages');
    if (messagesContainer) {
      const messageDiv = document.createElement('div');
      messageDiv.style.cssText = 'padding: 10px; color: #1be1ff; text-align: center; font-style: italic;';
      messageDiv.innerHTML = 'üì∫ Dostƒôpne kana≈Çy: #og√≥lny, #agenty, #wsparcie, #aktualizacje';
      messagesContainer.appendChild(messageDiv);
      messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
  };

  window.chatHistory = function() {
    console.log('üìã ≈Åadowanie historii...');
    const messagesContainer = document.getElementById('chatMessages');
    if (messagesContainer && window.mainChatAgentFunctions) {
      const history = window.mainChatAgentFunctions.chatHistory;
      const messageDiv = document.createElement('div');
      messageDiv.style.cssText = 'padding: 10px; color: #ffc107; text-align: center; font-style: italic;';
      messageDiv.innerHTML = `üìã Historia chatu: ${history.length} wiadomo≈õci zapisanych`;
      messagesContainer.appendChild(messageDiv);
      messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
  };

  window.quickMessage = function(type) {
    const input = document.getElementById('chatInput');
    if (input) {
      input.value = type;
      if (window.mainChatAgentFunctions) {
        window.mainChatAgentFunctions.sendToMainChat();
      }
    }
  };
</script>

<!-- Load MyBonzo Floating Buttons REAL Implementation -->
<script is:inline src="/scripts/floating-buttons-real.js"></script>
