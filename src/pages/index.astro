
---
import MyBonzoLayout from "../layouts/MyBonzoLayout.astro";
import RandomQuote from "../components/RandomQuote.astro";
import PolaczekWidget from "../components/PolaczekWidget.svelte";
import MainChatWidget from "../components/MainChatWidget.svelte";
import MyBonzoChat from "../components/MyBonzoChat.svelte";
import AiHelpAssistant from "../components/AiHelpAssistant.svelte";
import FAQGeneratorWidget from "../components/FAQGeneratorWidget.svelte";
import EducationRecommendationsWidget from "../components/EducationRecommendationsWidget.svelte";
import TicketSubmissionWidget from "../components/TicketSubmissionWidget.svelte";
import WorkersStatusDashboard from "../components/WorkersStatusDashboard.svelte";
import QuickVoiceAI from "../components/QuickVoiceAI.tsx";
import EdgeAudioVisualizer from "../components/voice-ai/EdgeAudioVisualizer.tsx";
import BackgroundMusicPlayerRevived from "../components/BackgroundMusicPlayerRevived.svelte";
import DecorativeLines from "../components/DecorativeLines.astro";
import { Icon } from 'astro-icon/components';
---

<MyBonzoLayout siteTitle="AI Workers Platform | KAROL LISSON">
  <DecorativeLines />

  <!-- Global vertical lines for workers sections -->
  <div class="workers-vertical-line-left"></div>
  <div class="workers-vertical-line-right"></div>

  <main class="min-h-svh">
    <!-- Top Separator Section -->
    <section class="border border-edge relative">
      <div class="absolute left-0 right-0 h-full">
        <!-- Inner vertical lines -->
        <div
          class="absolute left-[calc(50vw+400px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <div
          class="absolute right-[calc(50vw-400px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <!-- Outer vertical lines -->
        <div
          class="absolute left-[calc(50vw+600px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <div
          class="absolute right-[calc(50vw-600px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
      </div>
      <div class="max-w-6xl mx-auto">
        <div class="py-1"></div>
      </div>
    </section>

    <!-- Header Section -->
    <section class="border border-edge relative">
      <div class="absolute left-0 right-0 h-full">
        <!-- Inner vertical lines -->
        <div
          class="absolute left-[calc(50vw+400px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <div
          class="absolute right-[calc(50vw-400px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <!-- Outer vertical lines -->
        <div
          class="absolute left-[calc(50vw+600px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <div
          class="absolute right-[calc(50vw-600px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
      </div>
      <div class="max-w-6xl mx-auto">
        <div class="flex justify-between max-h-72 min-h-64">
          <!-- Left corner - O_MNIE content -->
          <div class="mt-auto" style="max-width: 45vw;">
            <div
              class="text-edge text-sm italic px-2"
              style="
                transform: scale(1.32);
                transform-origin: left center;
                margin: 15px;
                margin-left: 0px;
                width: calc(45vw - 30px);
                max-width: 380px;
                line-height: 1.4;
                word-wrap: break-word;
                hyphens: auto;
              "
            >
              Pasjonat technologii i programista z misją.<br />
              Tworzę nowoczesne rozwiązania, które łączą<br />
              sztuczną inteligencję z automatyzacją.<br />
              Moim celem jest budowanie użytecznych narzędzi.
            </div>
          </div>
          <span class="mt-auto">
            <div
              style="
              transform: scale(1.56);
              transform-origin: center right;
              margin: 15px;
              width: calc(50vw - 576px - 10px - 20px - 30px);
              max-width: 400px;
              text-align: right;
              word-wrap: break-word;
              hyphens: auto;
            "
            >
              <RandomQuote />
            </div>
            <span
              style=""
              class="text-edge block px-2 text-xl font-semibold tracking-[0.3em]"
            >
              AUG 2025
            </span>
          </span>
        </div>
      </div>
    </section>

    <!-- Header-Navigation Separator -->
    <section class="border border-edge relative">
      <div class="absolute left-0 right-0 h-full">
        <!-- Inner vertical lines -->
        <div
          class="absolute left-[calc(50vw+400px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <div
          class="absolute right-[calc(50vw-400px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <!-- Outer vertical lines -->
        <div
          class="absolute left-[calc(50vw+600px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <div
          class="absolute right-[calc(50vw-600px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
      </div>
      <div class="max-w-6xl mx-auto">
        <div class="py-1"></div>
      </div>
    </section>

    <!-- Navigation Section -->
    <section class="border border-edge relative">
      <div class="absolute left-0 right-0 h-full">
        <!-- Inner vertical lines -->
        <div
          class="absolute left-[calc(50vw+400px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <div
          class="absolute right-[calc(50vw-400px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <!-- Outer vertical lines -->
        <div
          class="absolute left-[calc(50vw+600px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <div
          class="absolute right-[calc(50vw-600px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
      </div>
      <div class="max-w-6xl mx-auto">
        <div class="flex flex-row p-2">
          <a class="hover:brightness-125" href="/">
            <h1 class="text-4xl sm:text-5xl">KAROL LISSON</h1>
            <h2 class="text-2xl sm:text-3xl">MY_Bonzo_AI_ZEnon_HuB</h2>
          </a>

          <div class="hidden ml-auto gap-4 md:gap-0 md:flex md:flex-col">
            <a
              class="ml-auto hover:brightness-125 duration-200"
              href="mailto:LissonKarol.msa@gmail.com"
            >
              LissonKarol.msa@gmail.com
              <svg
                style="--rotation: -45deg"
                class="stroke-primary-foreground inline aspect-square w-3 h-auto fill-transparent rotate-[var(--rotation)]"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M3 12L21 12M21 12L12.5 3.5M21 12L12.5 20.5"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
            </a>
            <div class="flex flex-row-reverse flex-wrap gap-4">
              <a
                class="hover:brightness-125 duration-200"
                href="https://www.linkedin.com/in/linkedinHandle"
              >
                LinkedIn
                <svg
                  style="--rotation: -45deg"
                  class="stroke-primary-foreground inline aspect-square w-3 h-auto fill-transparent rotate-[var(--rotation)]"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M3 12L21 12M21 12L12.5 3.5M21 12L12.5 20.5"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"></path>
                </svg>
              </a>
              <a
                class="hover:brightness-125 duration-200"
                href="https://www.github.com/githubUsername"
              >
                GitHub
                <svg
                  style="--rotation: -45deg"
                  class="stroke-primary-foreground inline aspect-square w-3 h-auto fill-transparent rotate-[var(--rotation)]"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M3 12L21 12M21 12L12.5 3.5M21 12L12.5 20.5"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"></path>
                </svg>
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Separator Section 1 -->
    <section class="border border-edge relative">
      <div class="absolute left-0 right-0 h-full">
        <!-- Inner vertical lines -->
        <div
t          class="absolute left-[calc(50vw+400px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <div
          class="absolute right-[calc(50vw-400px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <!-- Outer vertical lines -->
        <div
          class="absolute left-[calc(50vw+600px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <div
          class="absolute right-[calc(50vw-600px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
      </div>
      <div class="max-w-6xl mx-auto">
        <div class="py-1"></div>
      </div>
    </section>

    <!-- AI Workers Section - Centered -->
    <section
      class="border border-edge ai-workers-section flex items-center justify-center py-16 relative"
      id="ai-workers"
    >
      <div class="absolute left-0 right-0 h-full">
        <!-- Inner vertical lines -->
        <div
          class="absolute left-[calc(50vw+400px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <div
          class="absolute right-[calc(50vw-400px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <!-- Outer vertical lines -->
        <div
          class="absolute left-[calc(50vw+600px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
        <div
          class="absolute right-[calc(50vw-600px)] top-0 bottom-0 w-px bg-edge"
        >
        </div>
      </div>
      <div class="max-w-6xl mx-auto w-full">
        <div class="section-container">
          <h2 class="system-title">SYSTEM ZAAWANSOWANEJ AUTOMATYZACJI AI</h2>

          <!-- Separator after title -->
          <div
            style="
            width: calc(100vw - 2 * (50vw - 576px - 10px - 20px));
            max-width: 1212px;
            margin: 0 auto;
            border-t: 1px solid #ffffff;
            margin-top: 1rem;
            margin-bottom: 1.5rem;
          "
          >
          </div>

          <p
            class="section-description"
            style="
            width: calc(100vw - 2 * (50vw - 576px - 10px - 20px) - 40px);
            max-width: 1100px;
            margin: 0 auto;
            margin-left: calc(50% - 10px);
            transform: translateX(-50%);
            text-align: center;
            font-size: 1.1rem;
            line-height: 1.6;
            padding: 0 15px;
          "
          >
            Platforma integruje wyspecjalizowane Workery AI, działające w
            chmurze Cloudflare, aby dostarczać kompleksowe rozwiązania
            automatyzacji z wykorzystaniem sztucznej inteligencji.
          </p>
        </div>

        {
          /* Keep the avatar + start/stop controls mounted as before (unchanged position) */
        }
        <QuickVoiceAI client:load />

        {/* Voice Avatar Component - animowany avatar z synchronizacją ust */}
        {
          /* Temporarily disabled - working on generator graphics 
        <div class="my-8 flex justify-center">
          <VoiceAvatarComponent
            client:load
            variant="hero"
            avatarType="animated"
            enableLipSync={true}
            className="max-w-md"
          />
        </div>
        */
        }

        <!-- Full-width Music Visualizer - Extended to Left Screen Edge -->
        <div
          style="
            position: relative;
            left: 0;
            right: 0;
            width: 100vw;
            margin-top: 1rem;
            margin-bottom: 1.5rem;
            padding: 12px 0;
            margin-left: -50vw;
            margin-right: -50vw;
            left: 50%;
            background: rgba(0, 0, 0, 0.4);
          "
        >
          <!-- White lines extending to full screen width -->
          <div
            style="position:absolute; left:0; right:0; top:0; height:1px; background:#ffffff;"
          >
          </div>
          <div
            style="position:absolute; left:0; right:0; bottom:0; height:1px; background:#ffffff;"
          >
          </div>
          
          <!-- Music Visualizer - Two waves: Music Player and Mic -->
          <div
            style="
              width: 100vw;
              height: 120px;
              position: relative;
              display: flex;
              justify-content: center;
              align-items: center;
            "
          >
            <!-- Back layer: reacts to Music Player, same height but wave 3% taller -->
            <div 
              style="
                position:absolute; 
                left: 50%; 
                transform: translateX(-50%) scaleY(1.03); 
                width: calc(100vw - 2 * (50vw - 576px - 10px - 20px));
                max-width: 1212px;
                height: 120px;
                opacity: 0.4;
                filter: hue-rotate(30deg) brightness(1.2);
                pointer-events:none;
              "
            >
              <EdgeAudioVisualizer
                client:only="react"
                height={120}
                source="music"
                variant="music"
              />
            </div>
            
            <!-- Back layer mirrored: reacts to Music Player, flipped horizontally with darker color -->
            <div 
              style="
                position:absolute; 
                left: 50%; 
                transform: translateX(-50%) scaleY(1.03) scaleX(-1); 
                width: calc(100vw - 2 * (50vw - 576px - 10px - 20px));
                max-width: 1212px;
                height: 120px;
                opacity: 0.3;
                filter: hue-rotate(30deg) brightness(0.8);
                pointer-events:none;
              "
            >
              <EdgeAudioVisualizer
                client:only="react"
                height={120}
                source="music"
                variant="music"
              />
            </div>
            
            <!-- Front layer: reacts to Avatar (mic) -->
            <div 
              style="
                position:absolute; 
                left: 50%; 
                transform: translateX(-50%); 
                width: calc(100vw - 2 * (50vw - 576px - 10px - 20px));
                max-width: 1212px;
                height: 120px;
                opacity: 0.8;
                pointer-events:none;
              "
            >
              <EdgeAudioVisualizer
                client:only="react"
                height={120}
                source="mic"
                variant="mic"
              />
            </div>
          </div>
        
        <!-- Script to connect music player with visualizer -->
        <script>
          // Ensure music player analyser is available for visualizer
          function connectMusicToVisualizer() {
            if (typeof window !== 'undefined' && window.MUSIC) {
              // Make sure music player has analyser ready
              const audioContext = new (window.AudioContext || window.webkitAudioContext)();
              const musicElement = document.querySelector('audio');
              
              if (musicElement && !window.MUSIC_ANALYSER) {
                try {
                  const analyser = audioContext.createAnalyser();
                  analyser.fftSize = 256;
                  
                  const source = audioContext.createMediaElementSource(musicElement);
                  source.connect(analyser);
                  analyser.connect(audioContext.destination);
                  
                  window.MUSIC_ANALYSER = analyser;
                  window.dispatchEvent(new CustomEvent('music-analyser-ready'));
                  console.log('🎵 Music visualizer connected to player');
                } catch (e) {
                  console.warn('Failed to connect music visualizer:', e);
                }
              }
            }
            
            // Retry connection after music player loads
            setTimeout(connectMusicToVisualizer, 1000);
          }
          
          // Start connection attempts
          document.addEventListener('DOMContentLoaded', connectMusicToVisualizer);
          setTimeout(connectMusicToVisualizer, 500);
          
          // Fix audio issue - ensure audio context is resumed on user interaction
          document.addEventListener('click', function resumeAudio() {
            if (typeof window !== 'undefined' && window.AudioContext) {
              const audioContext = new (window.AudioContext || window.webkitAudioContext)();
              if (audioContext.state === 'suspended') {
                audioContext.resume().then(() => {
                  console.log('🎵 Audio context resumed');
                });
              }
            }
          }, { once: true });
        </script>
        </div>

        <!-- Dashboard Buttons Section (only buttons after login) -->
        <div class="dashboard-buttons-section hidden" id="dashboardButtons">
          <a
            href="/dashboard/klienci"
            class="dashboard-btn"
            data-astro-cid-my52qgmw>KLIENCI_DSH_BON</a
          >
          <a
            href="/dashboard/statystyki"
            class="dashboard-btn"
            data-astro-cid-my52qgmw>AKYW_STATYSTIC</a
          >
          <a
            href="/dashboard/prywatne"
            class="dashboard-btn"
            data-astro-cid-my52qgmw>PRIV_STAFF</a
          >
        </div>

        <!-- Small Tags Section -->
        <div
          class="tags-section"
          style="
               display: flex !important;
               justify-content: center !important;
               gap: 1rem !important;
               margin-bottom: 2rem !important;
               width: 100% !important;
               z-index: 1000 !important;
               position: relative !important;
             "
          data-astro-cid-my52qgmw
        >
          <button
            class="tag-btn"
            onclick="window.open('/POLACZEK_AGENT_SYS_23', '_blank')"
            style="
              background: rgba(0, 217, 255, 0.1) !important;
              border: 1px solid rgba(0, 217, 255, 0.4) !important;
              color: #00d9ff !important;
              padding: 0.8rem 2rem !important;
              font-size: 0.9rem !important;
              font-weight: 600 !important;
              text-transform: uppercase !important;
              letter-spacing: 1px !important;
              cursor: pointer !important;
              transition: all 0.3s ease !important;
              font-family: Rajdhani, sans-serif !important;
              flex: 1 !important;
              text-align: center !important;
              min-width: 0 !important;
            "
            data-astro-cid-my52qgmw>POLACZEK_AGENT_SYS_23</button
          >
          <button
            class="tag-btn"
            onclick="window.open('/hub/ai-agent-s', '_blank')"
            style="
              background: rgba(0, 217, 255, 0.1) !important;
              border: 1px solid rgba(0, 217, 255, 0.4) !important;
              color: #00d9ff !important;
              padding: 0.8rem 2rem !important;
              font-size: 0.9rem !important;
              font-weight: 600 !important;
              text-transform: uppercase !important;
              letter-spacing: 1px !important;
              cursor: pointer !important;
              transition: all 0.3s ease !important;
              font-family: Rajdhani, sans-serif !important;
              flex: 1 !important;
              text-align: center !important;
              min-width: 0 !important;
            "
            data-astro-cid-my52qgmw>BIELIK</button
          >
          <button
            class="tag-btn"
            onclick="window.open('/workers-status', '_blank')"
            style="
              background: rgba(0, 217, 255, 0.1) !important;
              border: 1px solid rgba(0, 217, 255, 0.4) !important;
              color: #00d9ff !important;
              padding: 0.8rem 2rem !important;
              font-size: 0.9rem !important;
              font-weight: 600 !important;
              text-transform: uppercase !important;
              letter-spacing: 1px !important;
              cursor: pointer !important;
              transition: all 0.3s ease !important;
              font-family: Rajdhani, sans-serif !important;
              flex: 1 !important;
              text-align: center !important;
              min-width: 0 !important;
            "
            data-astro-cid-my52qgmw>ZENON</button
          >
          <button
            class="tag-btn"
            onclick="window.open('/klf-sheed-shop', '_blank')"
            style="
              background: rgba(0, 217, 255, 0.1) !important;
              border: 1px solid rgba(0, 217, 255, 0.4) !important;
              color: #00d9ff !important;
              padding: 0.8rem 2rem !important;
              font-size: 0.9rem !important;
              font-weight: 600 !important;
              text-transform: uppercase !important;
              letter-spacing: 1px !important;
              cursor: pointer !important;
              transition: all 0.3s ease !important;
              font-family: Rajdhani, sans-serif !important;
              flex: 1 !important;
              text-align: center !important;
              min-width: 0 !important;
            "
            data-astro-cid-my52qgmw>KLF_SHEED_SHOOP</button
          >
        </div>

        <div class="workers-grid" data-astro-cid-my52qgmw>
          <!-- Image Generator -->
          <div class="worker-card" data-worker="image" data-astro-cid-my52qgmw>
            <h3 class="worker-title" data-astro-cid-my52qgmw>
              Generator Obrazów
            </h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Twórz niesamowite obrazy z tekstu używając Flux-1 Schnell
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw>Flux AI</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>512-1024px</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Tłumaczenie PL</span
              >
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <input
                type="text"
                placeholder="Opisz obraz..."
                class="quick-prompt"
                id="imagePrompt"
                data-astro-cid-my52qgmw
              />
              <button
                class="action-btn primary"
                onclick="openImageGenerator()"
                data-astro-cid-my52qgmw>Generuj</button
              >
              <button
                class="action-btn secondary"
                onclick="window.open('/image-generator', '_blank')"
                data-astro-cid-my52qgmw>Otwórz</button
              >
            </div>
          </div>

          <!-- AI Chatbot -->
          <div class="worker-card" data-worker="chat" data-astro-cid-my52qgmw>
            <h3 class="worker-title" data-astro-cid-my52qgmw>AI Chatbot</h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Inteligentny asystent do rozmów i odpowiadania na pytania
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw>OpenAI GPT</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Język polski</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw>Kontekst</span>
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <input
                type="text"
                placeholder="Zadaj pytanie..."
                class="quick-prompt"
                id="chatPrompt"
                data-astro-cid-my52qgmw
              />
              <button
                class="action-btn primary"
                onclick="openChatbot()"
                data-astro-cid-my52qgmw>Chat</button
              >
              <button
                class="action-btn secondary"
                onclick="window.open('/chatbot', '_blank')"
                data-astro-cid-my52qgmw>Otwórz</button
              >
            </div>
          </div>

          <!-- BigQuery Analytics -->
          <div
            class="worker-card"
            data-worker="bigquery"
            data-astro-cid-my52qgmw
          >
            <h3 class="worker-title" data-astro-cid-my52qgmw>
              BigQuery Analytics
            </h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Analizuj dane z Google BigQuery, wykonuj zapytania SQL
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Google Cloud</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw>SQL Query</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>Analytics</span>
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <input
                type="text"
                placeholder="SELECT * FROM..."
                class="quick-prompt"
                id="bigqueryPrompt"
                data-astro-cid-my52qgmw
              />
              <button
                class="action-btn primary"
                onclick="openBigQuery()"
                data-astro-cid-my52qgmw>Analizuj</button
              >
              <button
                class="action-btn secondary"
                onclick="window.open('/bigquery-analytics', '_blank')"
                data-astro-cid-my52qgmw>Otwórz</button
              >
            </div>
          </div>

          <!-- Kaggle Datasets -->
          <div class="worker-card" data-worker="kaggle" data-astro-cid-my52qgmw>
            <h3 class="worker-title" data-astro-cid-my52qgmw>
              Kaggle Datasets
            </h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Przeszukuj zbiory danych, konkursy i profile Kaggle
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Machine Learning</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw>Datasets</span>
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Competitions</span
              >
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <input
                type="text"
                placeholder="machine learning..."
                class="quick-prompt"
                id="kagglePrompt"
                data-astro-cid-my52qgmw
              />
              <button
                class="action-btn primary"
                onclick="openKaggle()"
                data-astro-cid-my52qgmw>Wyszukaj</button
              >
              <button
                class="action-btn secondary"
                onclick="window.open('/kaggle-datasets', '_blank')"
                data-astro-cid-my52qgmw>Otwórz</button
              >
            </div>
          </div>

          <!-- Tavily Search -->
          <div class="worker-card" data-worker="tavily" data-astro-cid-my52qgmw>
            <h3 class="worker-title" data-astro-cid-my52qgmw>
              Tavily AI Search
            </h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Zaawansowane wyszukiwanie internetowe powered by AI
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw>AI Search</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>Real-time</span>
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Deep Analysis</span
              >
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <input
                type="text"
                placeholder="wyszukaj w sieci..."
                class="quick-prompt"
                id="tavilyPrompt"
                data-astro-cid-my52qgmw
              />
              <button
                class="action-btn primary"
                onclick="openTavily()"
                data-astro-cid-my52qgmw>Szukaj</button
              >
              <button
                class="action-btn secondary"
                onclick="window.open('/tavily-search', '_blank')"
                data-astro-cid-my52qgmw>Otwórz</button
              >
            </div>
          </div>

          <!-- STATUS WORKERS - Basic Opening Element -->
          <div class="worker-card" data-worker="status" data-astro-cid-my52qgmw>
            <h3 class="worker-title" data-astro-cid-my52qgmw>
              🔧 STATUS WORKERS
            </h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Zaawansowany system monitorowania statusu wszystkich Cloudflare
              Workers
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw>Real-time</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>Monitoring</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw>Analytics</span>
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <button
                class="action-btn primary"
                onclick="checkAllStatus()"
                data-astro-cid-my52qgmw>Sprawdź Status</button
              >
              <button
                class="action-btn secondary"
                onclick="window.open('/status-workers', '_blank')"
                data-astro-cid-my52qgmw>Otwórz Dashboard</button
              >
            </div>
          </div>

          <!-- API Testing Card -->
          <div
            class="worker-card"
            data-worker="api-tests"
            data-astro-cid-my52qgmw
          >
            <h3 class="worker-title" data-astro-cid-my52qgmw>🧪 API Tests</h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Testuj wszystkie Workers API endpoints i sprawdź połączenia
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw>Testing</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>API</span>
              <span class="feature-tag" data-astro-cid-my52qgmw>Debug</span>
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <button
                class="action-btn primary"
                onclick="runAllAPITests()"
                data-astro-cid-my52qgmw>Testuj wszystkie API</button
              >
              <button
                class="action-btn secondary"
                onclick="openAPITestConsole()"
                data-astro-cid-my52qgmw>Konsola testów</button
              >
            </div>
          </div>

          <!-- Flowise AI Card -->
          <div
            class="worker-card"
            data-worker="flowise"
            data-astro-cid-my52qgmw
          >
            <h3 class="worker-title" data-astro-cid-my52qgmw>🧠 Flowise AI</h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Visual AI workflow builder with drag-and-drop interface
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Visual Builder</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw>Workflows</span>
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Integration</span
              >
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <button
                class="action-btn primary"
                onclick="window.open('https://flowise.ai', '_blank')"
                data-astro-cid-my52qgmw>Open Flowise</button
              >
              <button
                class="action-btn secondary"
                onclick="launchFlowise()"
                data-astro-cid-my52qgmw>Launch</button
              >
            </div>
          </div>

          <!-- Activepieces Card -->
          <div
            class="worker-card"
            data-worker="activepieces"
            data-astro-cid-my52qgmw
          >
            <h3 class="worker-title" data-astro-cid-my52qgmw>
              ⚡ Activepieces
            </h3>
            <p class="worker-description" data-astro-cid-my52qgmw>
              Open-source automation platform for workflow automation
            </p>
            <div class="worker-features" data-astro-cid-my52qgmw>
              <span class="feature-tag" data-astro-cid-my52qgmw>Automation</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw
                >Open Source</span
              >
              <span class="feature-tag" data-astro-cid-my52qgmw>Workflows</span>
            </div>
            <div class="worker-actions" data-astro-cid-my52qgmw>
              <button
                class="action-btn primary"
                onclick="window.open('https://activepieces.com', '_blank')"
                data-astro-cid-my52qgmw>Open Activepieces</button
              >
              <button
                class="action-btn secondary"
                onclick="launchActivepieces()"
                data-astro-cid-my52qgmw>Launch</button
              >
            </div>
          </div>
        </div>

        <!-- 9 New Functions Grid -->
        <div class="additional-functions-section" data-astro-cid-my52qgmw>
          <h3 class="additional-title" data-astro-cid-my52qgmw>
            ZAAWANSOWANE FUNKCJE AI
          </h3>
          <div class="additional-grid" data-astro-cid-my52qgmw>
            <!-- Row 1 -->
            <div
              class="feature-tile"
              data-function="function2"
              onclick="openFunction('rekomendacje')"
              data-astro-cid-my52qgmw
            >
              <div class="feature-icon" data-astro-cid-my52qgmw>🎯</div>
              <div class="feature-title" data-astro-cid-my52qgmw>
                Personalizowane rekomendacje
              </div>
              <div class="feature-desc" data-astro-cid-my52qgmw>
                System rekomendacyjny produktów i usług z analizą preferencji
                użytkowników
              </div>
            </div>

            <div
              class="feature-tile"
              data-function="function3"
              onclick="openFunction('obsługa-klienta')"
              data-astro-cid-my52qgmw
            >
              <div class="feature-icon" data-astro-cid-my52qgmw>📞</div>
              <div class="feature-title" data-astro-cid-my52qgmw>
                Automatyzacja obsługi klienta
              </div>
              <div class="feature-desc" data-astro-cid-my52qgmw>
                AI do kwalifikacji leadów i automatycznych odpowiedzi z
                integracją CRM
              </div>
            </div>

            <div
              class="feature-tile"
              data-function="function4"
              onclick="openFunction('monitorowanie')"
              data-astro-cid-my52qgmw
            >
              <div class="feature-icon" data-astro-cid-my52qgmw>📊</div>
              <div class="feature-title" data-astro-cid-my52qgmw>
                Monitorowanie i raportowanie
              </div>
              <div class="feature-desc" data-astro-cid-my52qgmw>
                Dashboard z automatycznym generowaniem raportów i alertami o
                anomaliach
              </div>
            </div>

            <!-- Row 2 -->
            <div
              class="feature-tile"
              data-function="function6"
              onclick="openFunction('przypomnienia')"
              data-astro-cid-my52qgmw
            >
              <div class="feature-icon" data-astro-cid-my52qgmw>🔔</div>
              <div class="feature-title" data-astro-cid-my52qgmw>
                Harmonogramowanie i przypomnienia
              </div>
              <div class="feature-desc" data-astro-cid-my52qgmw>
                Inteligentny system przypomnień z integracją z kalendarzami i AI
                przewidywaniem
              </div>
            </div>

            <div
              class="feature-tile"
              data-function="function7"
              onclick="openFunction('faq-generator')"
              data-astro-cid-my52qgmw
            >
              <div class="feature-icon" data-astro-cid-my52qgmw>❓</div>
              <div class="feature-title" data-astro-cid-my52qgmw>
                Generator FAQ dynamiczny
              </div>
              <div class="feature-desc" data-astro-cid-my52qgmw>
                AI generujący dynamicznie pytania i odpowiedzi na podstawie bazy
                wiedzy
              </div>
            </div>

            <div
              class="feature-tile"
              data-function="function8"
              onclick="openFunction('edukacja')"
              data-astro-cid-my52qgmw
            >
              <div class="feature-icon" data-astro-cid-my52qgmw>📚</div>
              <div class="feature-title" data-astro-cid-my52qgmw>
                Rekomendacje edukacyjne
              </div>
              <div class="feature-desc" data-astro-cid-my52qgmw>
                System rekomendacji kursów i materiałów edukacyjnych z
                profilowaniem użytkownika
              </div>
            </div>

            <!-- Row 3 -->
            <div
              class="feature-tile"
              data-function="function9"
              onclick="openFunction('tickety')"
              data-astro-cid-my52qgmw
            >
              <div class="feature-icon" data-astro-cid-my52qgmw>🎫</div>
              <div class="feature-title" data-astro-cid-my52qgmw>
                System ticketów AI
              </div>
              <div class="feature-desc" data-astro-cid-my52qgmw>
                Automatyczna klasyfikacja zgłoszeń z integracją Jira/Zendesk
              </div>
            </div>

            <div
              class="feature-tile"
              data-function="quiz"
              onclick="openFunction('quizy')"
              data-astro-cid-my52qgmw
            >
              <div class="feature-icon" data-astro-cid-my52qgmw>🧠</div>
              <div class="feature-title" data-astro-cid-my52qgmw>
                Quizy i testy interaktywne
              </div>
              <div class="feature-desc" data-astro-cid-my52qgmw>
                Framework do tworzenia quizów z AI oceną i spersonalizowanym
                feedbackiem
              </div>
            </div>

            <div
              class="feature-tile"
              data-function="marketing"
              onclick="openFunction('marketing')"
              data-astro-cid-my52qgmw
            >
              <div class="feature-icon" data-astro-cid-my52qgmw>✍️</div>
              <div class="feature-title" data-astro-cid-my52qgmw>
                Generator treści marketingowych
              </div>
              <div class="feature-desc" data-astro-cid-my52qgmw>
                Automatyczne generowanie i publikacja treści marketingowych
                przez AI
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <!-- Right Floating Panel - Fixed Right Side -->
  <div class="right-panel-fixed">
    <div class="floating-widget-container">
      <button
        onclick="toggleMusicPlayer()"
        class="right-btn"
        id="musicPlayerBtn"
      >
        <Icon name="lucide:music" /> MUSIC PLAYER
      </button>
      <div id="musicPlayerWidget" class="floating-widget hidden">
        <BackgroundMusicPlayerRevived client:load />
      </div>
    </div>

    <div class="floating-widget-container">
      <button
        onclick="togglePolaczekAssistant()"
        class="right-btn"
        id="polaczekBtn"
        title="AI Assistant do wyjaśniania funkcji na stronie"
      >
        <Icon name="lucide:bot" /> AI ASSISTANT
      </button>
      <div id="polaczekWidget" class="floating-widget hidden">
        <AiHelpAssistant client:load />
      </div>
    </div>

    <button onclick="openMainChat()" class="right-btn"> <Icon name="lucide:message-circle" /> MAIN CHAT </button>
    <button onclick="openRefresh()" class="right-btn"> <Icon name="lucide:refresh-cw" /> REFRESH </button>
    <button onclick="openFolder()" class="right-btn"> <Icon name="lucide:folder" /> FOLDER </button>
    <button onclick="openClose()" class="right-btn"> <Icon name="lucide:x" /> CLOSE </button>
  </div>

  <!-- Separator Section 4 -->
  <section class="border border-edge relative">
    <div class="absolute left-0 right-0 h-full">
      <!-- Inner vertical lines -->
      <div class="absolute left-[calc(50vw+400px)] top-0 bottom-0 w-px bg-edge">
      </div>
      <div
        class="absolute right-[calc(50vw-400px)] top-0 bottom-0 w-px bg-edge"
      >
      </div>
      <!-- Outer vertical lines -->
      <div class="absolute left-[calc(50vw+600px)] top-0 bottom-0 w-px bg-edge">
      </div>
      <div
        class="absolute right-[calc(50vw-600px)] top-0 bottom-0 w-px bg-edge"
      >
      </div>
    </div>
    <div class="max-w-6xl mx-auto">
      <div class="py-1"></div>
    </div>
  </section>

  <!-- Footer Section -->
  <section class="border border-edge relative">
    <div class="absolute left-0 right-0 h-full">
      <!-- Inner vertical lines -->
      <div class="absolute left-[calc(50vw+400px)] top-0 bottom-0 w-px bg-edge">
      </div>
      <div
        class="absolute right-[calc(50vw-400px)] top-0 bottom-0 w-px bg-edge"
      >
      </div>
      <!-- Outer vertical lines -->
      <div class="absolute left-[calc(50vw+600px)] top-0 bottom-0 w-px bg-edge">
      </div>
      <div
        class="absolute right-[calc(50vw-600px)] top-0 bottom-0 w-px bg-edge"
      >
      </div>
    </div>
    <div class="max-w-6xl mx-auto">
      <div class="flex flex-row justify-between items-center py-16 px-8">
        <!-- Left corner - O_MNIE content -->
        <div class="max-w-xs text-left">
          <div
            class="text-edge text-sm italic"
            style="
              transform: scale(1.69);
              transform-origin: left center;
              margin: 10px;
              margin-left: -10px;
              margin-bottom: 70px;
              width: calc(45vw - 20px);
              max-width: 320px;
              line-height: 1.4;
              word-wrap: break-word;
              hyphens: auto;
            "
          >
            W mojej pracy skupiam się na integracji technologii w chmurze,
            nowoczesnych frameworków i AI, aby stworzyć asystenta, który rozumie
            i wspiera użytkownika w jego potrzebach.
          </div>
        </div>

        <div class="flex flex-row justify-center gap-8 text-center">
          <a
            class="hover:brightness-125 duration-200"
            target="_blank"
            rel="noopener noreferrer"
            href="/workers"
          >
            SYSTEM AGENTS
            <svg
              style="--rotation: -45deg"
              class="stroke-primary-foreground inline aspect-square w-3 h-auto fill-transparent rotate-[var(--rotation)]"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 12L21 12M21 12L12.5 3.5M21 12L12.5 20.5"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </svg>
          </a>
          <div
            class="group w-24 p-1 border border-primary-foreground rounded-interactive text-primary-foreground text-xs font-black text-nowrap opacity-60"
          >
            <span class="group-hover:hidden">100% HANDMADE</span>
            <span class="hidden group-hover:inline">0% AI</span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Panel Administracyjny with Login - Fixed Left Side -->
  <div class="admin-panel-fixed">
    <a href="/admin/" class="admin-btn"> Panel Administracyjny </a>

    <!-- Login Section Below Admin Panel -->
    <div class="login-container-fixed" id="loginContainer">
      <input
        type="text"
        id="dashboardLogin"
        maxlength="16"
        placeholder="Podaj login"
        class="login-input-fixed"
      />
      <button onclick="checkDashboardLogin()" class="login-btn-fixed">
        Zaloguj się
      </button>
    </div>
  </div>
</MyBonzoLayout>

<!-- JavaScript Functions -->
<script>
  // Initialize window properties
  (window as any).apiTests = (window as any).apiTests || {};
  (window as any).openImageGenerator =
    (window as any).openImageGenerator || function () {};
  (window as any).openChatbot = (window as any).openChatbot || function () {};
  (window as any).openBigQuery = (window as any).openBigQuery || function () {};
  (window as any).openKaggle = (window as any).openKaggle || function () {};
  (window as any).openTavily = (window as any).openTavily || function () {};
  (window as any).testButtonFunction =
    (window as any).testButtonFunction || function () {};
  (window as any).checkDashboardLogin =
    (window as any).checkDashboardLogin || function () {};

  // Init when page loads
  window.addEventListener("DOMContentLoaded", async () => {
    console.log("Loading API test functions...");
    try {
      const module = await import("../utils/apiTests.ts");
      window.apiTests = module;
      console.log(
        "API Tests module loaded, available functions:",
        Object.keys(module)
      );
    } catch (error) {
      console.log("Failed to load API tests:", error);
    }
  });

  // Worker Functions
  function openImageGenerator() {
    console.log("openImageGenerator() called");
    const promptElement = document.getElementById(
      "imagePrompt"
    ) as HTMLInputElement;
    const prompt = promptElement ? promptElement.value.trim() : "";
    console.log("Image prompt:", prompt);
    if (prompt) {
      localStorage.setItem("quickPrompt", prompt);
      console.log("Prompt saved in localStorage");
    }
    console.log("Opening /generator");
    window.open("/generator", "_blank");
  }

  function openChatbot() {
    console.log("💬 openChatbot() wywołana");
    const promptElement = document.getElementById(
      "chatPrompt"
    ) as HTMLInputElement;
    const prompt = promptElement ? promptElement.value.trim() : "";
    console.log("Chat prompt:", prompt);
    if (prompt) {
      localStorage.setItem("quickChatPrompt", prompt);
      console.log("Prompt saved in localStorage");
    }
    console.log("Opening /chatbot");
    window.open("/chatbot", "_blank");
  }

  function openBigQuery() {
    console.log("📊 openBigQuery() wywołana");
    const promptElement = document.getElementById(
      "bigqueryPrompt"
    ) as HTMLInputElement;
    const prompt = promptElement ? promptElement.value.trim() : "";
    console.log("BigQuery prompt:", prompt);
    if (prompt) {
      localStorage.setItem("quickSQLQuery", prompt);
      console.log("SQL Query saved in localStorage");
    }
    console.log("Opening /bigquery-analytics");
    window.open("/bigquery-analytics", "_blank");
  }

  function openKaggle() {
    console.log("🔍 openKaggle() wywołana");
    const promptElement = document.getElementById(
      "kagglePrompt"
    ) as HTMLInputElement;
    const prompt = promptElement ? promptElement.value.trim() : "";
    console.log("Kaggle prompt:", prompt);
    if (prompt) {
      localStorage.setItem("quickKaggleSearch", prompt);
      console.log("Kaggle search saved in localStorage");
    }
    console.log("Opening /kaggle-datasets");
    window.open("/kaggle-datasets", "_blank");
  }

  function openTavily() {
    console.log("🌐 openTavily() wywołana");
    const promptElement = document.getElementById(
      "tavilyPrompt"
    ) as HTMLInputElement;
    const prompt = promptElement ? promptElement.value.trim() : "";
    console.log("Tavily prompt:", prompt);
    if (prompt) {
      localStorage.setItem("quickTavilySearch", prompt);
      console.log("Tavily search saved in localStorage");
    }
    console.log("Opening /tavily-search");
    window.open("/tavily-search", "_blank");
  }

  // Test function without popup (to test if buttons respond)
  function testButtonFunction(buttonType: string) {
    console.log(`🧪 TEST: Przycisk ${buttonType} został kliknięty!`);
    alert(`Test udany! Przycisk ${buttonType} działa.`);
    return false; // Prevent actual navigation
  }

  // API Testing Functions
  async function runAllAPITests() {
    console.log("Rozpoczynam testy wszystkich API...");

    if (window.apiTests && window.apiTests.testAllAPIs) {
      try {
        await window.apiTests.testAllAPIs();
        console.log("All API tests completed");
      } catch (error) {
        console.log("Error during API tests:", error);
      }
    } else {
      console.log(
        "⏳ API tests nie są jeszcze załadowane, próbuję ponownie..."
      );
      setTimeout(runAllAPITests, 1000);
    }
  }

  function openAPITestConsole() {
    console.log("Opening API test console...");
    console.log("Available API tests:");
    console.log("- window.apiTests.testChatAPI()");
    console.log("- window.apiTests.testImageGeneration()");
    console.log("- window.apiTests.testAIBot()");
    console.log("- window.apiTests.testAllAPIs()");

    if (window.apiTests) {
      console.log(
        "API Tests module loaded, available functions:",
        Object.keys(window.apiTests)
      );
    } else {
      console.log("API Tests module not loaded yet");
    }
  }

  // Cloudflare Workers Integration
  function openCloudflareWorkers() {
    // Check if workers dashboard is available
    const cloudflareUrl = "https://dash.cloudflare.com/";
    window.open(cloudflareUrl, "_blank");
  }

  // Status Check Function
  async function checkAllStatus() {
    const statusElement = document.getElementById("overallStatus");
    if (!statusElement) return;

    const statusDot = statusElement.querySelector(".status-dot");
    const statusText = statusElement.querySelector("span:last-child");

    if (!statusDot || !statusText) return;

    statusText.textContent = "Sprawdzanie...";
    statusDot.className = "status-dot";

    try {
      const apis = [
        "/api/generate-image",
        "/api/chat",
        "/api/bigquery",
        "/api/kaggle",
        "/api/tavi",
      ];

      const results = await Promise.allSettled(
        apis.map((api) => fetch(api).then((res) => ({ api, ok: res.ok })))
      );

      const onlineCount = results.filter(
        (result) => result.status === "fulfilled" && result.value.ok
      ).length;

      const totalCount = apis.length;

      if (onlineCount === totalCount) {
        statusDot.className = "status-dot online";
        statusText.textContent = `Wszystkie online (${onlineCount}/${totalCount})`;
      } else if (onlineCount > 0) {
        statusDot.className = "status-dot";
        statusText.textContent = `Częściowo online (${onlineCount}/${totalCount})`;
      } else {
        statusDot.className = "status-dot offline";
        statusText.textContent = `Offline (${onlineCount}/${totalCount})`;
      }
    } catch (error) {
      statusDot.className = "status-dot offline";
      statusText.textContent = "Błąd sprawdzania";
    }
  }

  // Dashboard Login Function
  function checkDashboardLogin() {
    const loginInput = document.getElementById(
      "dashboardLogin"
    ) as HTMLInputElement;
    const loginContainer = document.getElementById("loginContainer");
    const dashboardButtons = document.getElementById("dashboardButtons");

    if (!loginInput || !loginContainer || !dashboardButtons) return;

    const login = loginInput.value.trim();
    console.log("Checking login:", login);

    if (login === "HAOS77") {
      loginContainer.classList.add("hidden");
      dashboardButtons.classList.remove("hidden");
      console.log("Login successful, showing dashboard buttons");
    } else {
      console.log("Invalid login");
      loginInput.style.borderColor = "#ef4444";
      setTimeout(() => {
        loginInput.style.borderColor = "";
      }, 2000);
    }
  }

  // Flowise AI Functions
  async function launchFlowise() {
    console.log("🧠 launchFlowise() wywołana");

    const prompt = window.prompt(
      "Wprowadź zapytanie do Flowise AI:",
      "Wygeneruj raport aktywności systemu MyBonzo"
    );

    if (!prompt) {
      console.log("Anulowano - brak promptu");
      return;
    }

    try {
      console.log("Wysyłam zapytanie do Flowise API:", prompt);

      const response = await fetch("/api/flowise", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          prompt: prompt,
          workflowId: "mybonzo-main",
        }),
      });

      const data = await response.json();

      if (data.error && !data.fallback) {
        alert(`Błąd Flowise API: ${data.error}`);
        return;
      }

      // Show response in a new window or modal
      const resultWindow = window.open(
        "",
        "_blank",
        "width=800,height=600,scrollbars=yes"
      );
      if (resultWindow) {
        resultWindow.document.write(`
          <html>
            <head>
              <title>Flowise AI - Wynik</title>
              <style>
                body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }
                .header { background: #007acc; color: white; padding: 10px; margin: -20px -20px 20px; }
                .response { background: #f5f5f5; padding: 15px; border-radius: 8px; white-space: pre-wrap; }
                .metadata { background: #e8f4fd; padding: 10px; margin-top: 15px; border-radius: 4px; font-size: 0.9em; }
              </style>
            </head>
            <body>
              <div class="header">
                <h2>🧠 Flowise AI - MyBonzo Platform</h2>
              </div>
              <h3>Zapytanie:</h3>
              <p><strong>${prompt}</strong></p>
              <h3>Odpowiedź AI:</h3>
              <div class="response">${data.text || JSON.stringify(data, null, 2)}</div>
              <div class="metadata">
                <strong>Timestamp:</strong> ${data.metadata?.timestamp || new Date().toISOString()}<br>
                <strong>Source:</strong> ${data.metadata?.source || "flowise-api"}<br>
                ${data.fallback ? "<strong>Mode:</strong> Fallback (sprawdź konfigurację API)<br>" : ""}
                ${data.metadata?.simulation ? "<strong>Mode:</strong> Simulation (skonfiguruj FLOWISE_API_TOKEN)<br>" : ""}
              </div>
            </body>
          </html>
        `);
      } else {
        // Fallback if popup blocked
        console.log("Flowise AI Response:", data);
        alert(
          `Flowise AI Response:\n\n${data.text || JSON.stringify(data, null, 2)}`
        );
      }
    } catch (error) {
      console.error("Błąd wywołania Flowise:", error);
      alert(`Błąd połączenia z Flowise API: ${error.message}`);
    }
  }

  // Open Function for 9 AI Functions - DEBUGOWANIE
  function openFunction(functionName: string) {
    console.log(`🎯 KLIKNIĘTO KAFELEK! Otwieranie funkcji: ${functionName}`);
    alert(`DEBUGOWANIE: Kliknięto w funkcję: ${functionName}`);

    const functionRoutes: { [key: string]: string } = {
      rekomendacje: "/ai-functions/personalized-recommendations",
      "obsługa-klienta": "/ai-functions/customer-automation",
      monitorowanie: "/ai-functions/activity-monitoring",
      przypomnienia: "/ai-functions/reminders-calendar",
      "faq-generator": "/ai-functions/dynamic-faq",
      edukacja: "/ai-functions/education-recommendations",
      tickety: "/ai-functions/ai-tickets",
      quizy: "/ai-functions/interactive-quizzes",
      marketing: "/ai-functions/marketing-content",
    };

    const route = functionRoutes[functionName];
    if (route) {
      console.log(`Przekierowanie do: ${route}`);
      window.open(route, "_blank");
    } else {
      console.error(`Nieznana funkcja: ${functionName}`);
      alert(
        `Funkcja "${functionName}" jest w trakcie implementacji. Spróbuj ponownie później.`
      );
    }
  }

  // Auto-check status on load and add Enter key handlers
  document.addEventListener("DOMContentLoaded", function () {
    console.log("🚀 DOM załadowany, inicjalizacja funkcji");

    // Test dostępności funkcji openFunction
    console.log("🧪 Test funkcji openFunction:", typeof openFunction);
    console.log("🧪 Test window.openFunction:", typeof window.openFunction);

    // Dodaj funkcję do window scope
    (window as any).openFunction = openFunction;
    console.log("✅ openFunction dodana do window scope");

    // Dodaj event listenery bezpośrednio do kafelków
    const featureTiles = document.querySelectorAll(
      ".feature-tile[data-function]"
    );
    console.log(`🎯 Znaleziono ${featureTiles.length} kafelków funkcji`);

    featureTiles.forEach((tile, index) => {
      const functionName = tile
        .getAttribute("onclick")
        ?.match(/openFunction\('(.+?)'\)/)?.[1];
      console.log(`🔗 Tile ${index}: ${functionName}`);

      tile.addEventListener("click", function (e) {
        e.preventDefault();
        e.stopPropagation();
        console.log(`🎯 BEZPOŚREDNI KLIK na tile: ${functionName}`);
        if (functionName) {
          openFunction(functionName);
        }
      });
    });

    // Test czy wszystkie funkcje są dostępne
    console.log("🧪 Test dostępności funkcji:");
    console.log("- openImageGenerator:", typeof openImageGenerator);
    console.log("- openChatbot:", typeof openChatbot);
    console.log("- openBigQuery:", typeof openBigQuery);
    console.log("- openKaggle:", typeof openKaggle);
    console.log("- openTavily:", typeof openTavily);

    // Test czy wszystkie elementy input istnieją
    console.log("🧪 Test dostępności elementów input:");
    console.log("- imagePrompt:", document.getElementById("imagePrompt"));
    console.log("- chatPrompt:", document.getElementById("chatPrompt"));
    console.log("- bigqueryPrompt:", document.getElementById("bigqueryPrompt"));
    console.log("- kagglePrompt:", document.getElementById("kagglePrompt"));
    console.log("- tavilyPrompt:", document.getElementById("tavilyPrompt"));

    // Add quick prompt handlers
    document.querySelectorAll(".quick-prompt").forEach((input) => {
      const inputElement = input;
      inputElement.addEventListener("keydown", function (e) {
        // Use type assertion to bypass TypeScript strict typing
        if ((e as any).code === "Enter" || (e as any).key === "Enter") {
          const type = inputElement.id.replace("Prompt", "");
          if (type === "image") openImageGenerator();
          else if (type === "chat") openChatbot();
          else if (type === "bigquery") openBigQuery();
          else if (type === "kaggle") openKaggle();
          else if (type === "tavily") openTavily();
        }
      });
    });

    // Add Enter key handler for dashboard login
    const dashboardLoginInput = document.getElementById("dashboardLogin");
    if (dashboardLoginInput) {
      dashboardLoginInput.addEventListener("keydown", function (e) {
        if ((e as any).key === "Enter") {
          checkDashboardLogin();
        }
      });
    }

    // Clear any cached component states on page load
    console.log("🧹 Clearing component cache and resetting state...");
    
    // Only clear if not already working
    const componentsWorking = localStorage.getItem('components-working') === 'true';
    
    if (!componentsWorking) {
      console.log("🧹 Components not working, clearing cache...");
      // Clear potentially cached component states
      delete window.MUSIC;
      delete window.POLACZEK;
      
      // Clear any stale connection data
      sessionStorage.removeItem('polaczek-status');
      sessionStorage.removeItem('music-status');
    } else {
      console.log("✅ Components were working, preserving state...");
    }
    
    // Force fresh initialization
    localStorage.setItem('components-initialized', 'false');
    
    // Add page load event to detect when all components should be ready
    let componentCheckAttempts = 0;
    const maxComponentChecks = 50; // 5 seconds
    
    const forceComponentRefresh = () => {
      componentCheckAttempts++;
      console.log(`🔍 Component check attempt ${componentCheckAttempts}/${maxComponentChecks}`);
      
      const musicReady = window.MUSIC && typeof window.MUSIC.ensureLoaded === 'function';
      const polaczekReady = window.POLACZEK && typeof window.POLACZEK.openAssistant === 'function';
      
      console.log(`🎵 Music ready: ${musicReady}, 🤖 POLACZEK ready: ${polaczekReady}`);
      
      if (musicReady && polaczekReady) {
        console.log("✅ All components are ready!");
        localStorage.setItem('components-initialized', 'true');
        localStorage.setItem('components-working', 'true');
        return;
      }
      
      if (componentCheckAttempts < maxComponentChecks) {
        setTimeout(forceComponentRefresh, 100);
      } else {
        console.warn("❌ Components not all ready after 5 seconds, but continuing without forced reload");
        localStorage.setItem('components-initialized', 'partial');
        // DO NOT force reload - let user manually refresh if needed
      }
    };
    
    // Check status on load
    checkAllStatus();

    // Start component monitoring
    setTimeout(forceComponentRefresh, 500);

    // Initialize components after page load
    setTimeout(() => {
      console.log("🔄 Auto-initializing components after page load...");
      waitForMusicAPI();
      waitForPolaczekAPI();
    }, 1000); // Wait 1 second for components to load

    // Make functions globally available for debugging
    window.openImageGenerator = openImageGenerator;
    window.openChatbot = openChatbot;
    window.openBigQuery = openBigQuery;
    window.openKaggle = openKaggle;
    window.openTavily = openTavily;
    window.testButtonFunction = testButtonFunction;
    (window as any).checkDashboardLogin = checkDashboardLogin;
    (window as any).openFunction = openFunction;
    (window as any).toggleMusicPlayer = toggleMusicPlayer;
    (window as any).togglePolaczekAssistant = togglePolaczekAssistant;
    (window as any).openMainChat = openMainChat;
    (window as any).openRefresh = openRefresh;
    (window as any).openFolder = openFolder;
    (window as any).openClose = openClose;
    (window as any).checkAllStatus = checkAllStatus;
    (window as any).runAllAPITests = runAllAPITests;
    (window as any).openAPITestConsole = openAPITestConsole;
    (window as any).resetComponents = resetComponents;
    (window as any).hardResetComponents = hardResetComponents;

    console.log("All functions assigned to window object");
    console.log("🔧 Debug functions available:");
    console.log("- resetComponents() - soft reset");
    console.log("- hardResetComponents() - hard reset with page reload");
    console.log("- checkAllStatus() - check API status");
    console.log("- Check localStorage.getItem('components-working') for component status");
  });

  // New Toggle Functions with Button Scaling
  function toggleMusicPlayer() {
    console.log("🎵 Toggling Music Player");
    const btn = document.getElementById("musicPlayerBtn");
    const widget = document.getElementById("musicPlayerWidget");

    if (btn && widget) {
      // Button scaling effect
      btn.style.transform = "scale(1.1) translateY(-2px)";
      setTimeout(() => {
        btn.style.transform = "";
      }, 200);

      // Toggle widget visibility
      widget.classList.toggle("hidden");
      
      // Ensure music player is initialized after showing widget
      if (!widget.classList.contains("hidden")) {
        // Give Svelte component time to mount
        setTimeout(() => {
          console.log("🎵 Widget shown, checking Music API...");
          if (window.MUSIC && window.MUSIC.ensureLoaded) {
            console.log("🎵 Music API available, calling ensureLoaded...");
            try {
              window.MUSIC.ensureLoaded();
            } catch (e) {
              console.warn("Music ensureLoaded failed:", e);
            }
          } else {
            console.log("🎵 Music API not available, waiting for initialization...");
            waitForMusicAPI();
          }
        }, 500); // Wait 500ms for component to mount
      }
      
      console.log("Music Player widget toggled");
    }
  }

  function togglePolaczekAssistant() {
    console.log("🤖 Toggling AI Assistant");
    const btn = document.getElementById("polaczekBtn");
    const widget = document.getElementById("polaczekWidget");

    if (btn && widget) {
      // Button scaling effect
      btn.style.transform = "scale(1.1) translateY(-2px)";
      setTimeout(() => {
        btn.style.transform = "";
      }, 200);

      // Toggle widget visibility
      widget.classList.toggle("hidden");
      
      // Ensure AI assistant is initialized after showing widget
      if (!widget.classList.contains("hidden")) {
        // Give Svelte component time to mount
        setTimeout(() => {
          console.log("🤖 Widget shown, checking POLACZEK API...");
          if (window.POLACZEK && window.POLACZEK.openAssistant) {
            console.log("🤖 POLACZEK API available, opening assistant...");
            try {
              window.POLACZEK.openAssistant();
              // Also trigger reconnection if needed
              if (window.POLACZEK.forceReconnect) {
                window.POLACZEK.forceReconnect();
              }
            } catch (e) {
              console.warn("POLACZEK openAssistant failed:", e);
            }
          } else {
            console.log("🤖 POLACZEK API not available, waiting for initialization...");
            waitForPolaczekAPI();
          }
        }, 500); // Wait 500ms for component to mount
      }
      
      console.log("AI Assistant widget toggled");
    }
  }

  // Wait for components to initialize their APIs
  function waitForMusicAPI() {
    console.log("🎵 Waiting for Music API...");
    let attempts = 0;
    const maxAttempts = 100; // 10 seconds max (increased)
    
    const checkAPI = () => {
      attempts++;
      console.log(`🎵 Music API check attempt ${attempts}/${maxAttempts}`);
      
      if (window.MUSIC && window.MUSIC.ensureLoaded) {
        console.log("🎵 Music API ready! Initializing...");
        try {
          window.MUSIC.ensureLoaded();
          sessionStorage.setItem('music-status', 'ready');
          localStorage.setItem('components-working', 'true');
          console.log("🎵 Music player initialized successfully!");
        } catch (e) {
          console.warn("Music ensureLoaded failed:", e);
          sessionStorage.setItem('music-status', 'error');
        }
      } else if (attempts < maxAttempts) {
        console.log("🎵 Music API not ready yet, retrying...");
        setTimeout(checkAPI, 100);
      } else {
        console.error("🎵 Music API not ready after 10 seconds - component may not be loaded");
        sessionStorage.setItem('music-status', 'timeout');
        // Try to force reload the component by showing debug info
        console.log("🎵 Debug info:");
        console.log("- window.MUSIC exists:", !!window.MUSIC);
        console.log("- window.MUSIC.ensureLoaded exists:", !!(window.MUSIC && window.MUSIC.ensureLoaded));
        console.log("- Music widget element exists:", !!document.getElementById("musicPlayerWidget"));
        
        // NO AUTOMATIC RELOAD - let user decide
        console.log("🎵 Use resetComponents() or hardResetComponents() in console if needed");
      }
    };
    
    checkAPI();
  }

  function waitForPolaczekAPI() {
    console.log("🤖 Waiting for POLACZEK API...");
    let attempts = 0;
    const maxAttempts = 100; // 10 seconds max (increased)
    
    const checkAPI = () => {
      attempts++;
      console.log(`🤖 POLACZEK API check attempt ${attempts}/${maxAttempts}`);
      
      if (window.POLACZEK && window.POLACZEK.openAssistant) {
        console.log("🤖 POLACZEK API ready! Connecting...");
        try {
          // Force connection check
          if (window.POLACZEK.getStatus) {
            const currentStatus = window.POLACZEK.getStatus();
            console.log("🤖 Current POLACZEK status:", currentStatus);
            
            if (currentStatus === "disconnected") {
              console.log("🤖 Triggering reconnection...");
              window.dispatchEvent(new CustomEvent("polaczek-reconnect"));
            }
          }
          sessionStorage.setItem('polaczek-status', 'ready');
          localStorage.setItem('components-working', 'true');
          console.log("🤖 POLACZEK assistant initialized successfully!");
        } catch (e) {
          console.warn("POLACZEK initialization failed:", e);
          sessionStorage.setItem('polaczek-status', 'error');
        }
      } else if (attempts < maxAttempts) {
        console.log("🤖 POLACZEK API not ready yet, retrying...");
        setTimeout(checkAPI, 100);
      } else {
        console.error("🤖 POLACZEK API not ready after 10 seconds - component may not be loaded");
        sessionStorage.setItem('polaczek-status', 'timeout');
        // Try to force reload the component by showing debug info
        console.log("🤖 Debug info:");
        console.log("- window.POLACZEK exists:", !!window.POLACZEK);
        console.log("- window.POLACZEK.openAssistant exists:", !!(window.POLACZEK && window.POLACZEK.openAssistant));
        console.log("- POLACZEK widget element exists:", !!document.getElementById("polaczekWidget"));
        
        // NO AUTOMATIC RELOAD - let user decide
        console.log("🤖 Use resetComponents() or hardResetComponents() in console if needed");
      }
    };
    
    checkAPI();
  }

  // Manual component reset function
  function resetComponents() {
    console.log("🔄 Manually resetting all components...");
    
    // Clear all cached states
    delete window.MUSIC;
    delete window.POLACZEK;
    sessionStorage.clear();
    localStorage.setItem('components-initialized', 'false');
    localStorage.setItem('components-working', 'false');
    
    // Re-initialize
    setTimeout(() => {
      console.log("🔄 Re-initializing components...");
      waitForMusicAPI();
      waitForPolaczekAPI();
    }, 500);
    
    console.log("🔄 Component reset completed!");
  }

  // Hard reset with page reload
  function hardResetComponents() {
    console.log("💣 Hard resetting - clearing everything and reloading page...");
    
    // Clear everything
    localStorage.clear();
    sessionStorage.clear();
    
    // Clear component globals
    delete window.MUSIC;
    delete window.POLACZEK;
    
    // Force reload
    window.location.reload(true);
  }

  function openMainChat() {
    console.log("💬 Opening Main Chat");
    window.open("/chatbot", "_blank");
  }

  function openRefresh() {
    console.log("🔄 Refreshing page");
    window.location.reload();
  }

  function openFolder() {
    console.log("📁 Opening folder");
    alert(
      "Otwieranie lokalnego folderu jest zablokowane przez przeglądarki ze względów bezpieczeństwa."
    );
  }

  function openClose() {
    console.log("❌ Closing tab");
    try {
      window.close();
    } catch (e) {
      alert("Zamykanie karty może być zablokowane przez przeglądarkę.");
    }
  }
</script>

<style>
  /* System title - enlarged and bold */
  .system-title {
    color: #00d7ef !important;
    font-weight: 900 !important;
    font-size: 3.5rem !important;
    margin-bottom: 1rem !important;
    text-align: center !important;
    text-shadow: 0 0 20px rgba(0, 215, 239, 0.5);
    letter-spacing: 0.02em;
  }

  /* Dashboard login section */
  .dashboard-login-section {
    background: rgba(0, 0, 0, 0.6);
    padding: 32px 24px;
    margin: 24px 0;
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px;
    box-shadow: 0 2px 18px rgba(0, 217, 255, 0.2);
  }

  .login-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 12px;
  }

  .login-input {
    background: #131e28;
    color: #00d7ef;
    padding: 12px 16px;
    border: 2px solid rgba(0, 217, 255, 0.4);
    border-radius: 0px;
    font-size: 1.1rem;
    font-weight: 600;
    text-align: center;
    min-width: 200px;
    transition: all 0.2s ease;
  }

  .login-input:focus {
    outline: none;
    border-color: #00d7ef;
    box-shadow: 0 0 12px rgba(0, 217, 255, 0.4);
  }

  .login-btn {
    background-color: #164e63;
    color: white;
    padding: 12px 24px;
    border: none;
    border-radius: 0px;
    font-weight: 600;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.2s ease;
    box-shadow: 0 2px 12px rgba(0, 217, 255, 0.2);
  }

  .login-btn:hover {
    background-color: #1be1ff;
    color: #000;
    transform: translateY(-1px);
  }

  .dashboard-buttons {
    display: flex;
    flex-direction: column;
    gap: 12px;
    align-items: center;
  }

  .dashboard-btn {
    background-color: #164e63;
    color: white;
    padding: 14px 28px;
    border-radius: 0px;
    font-weight: 600;
    font-size: 1.2rem;
    text-decoration: none;
    display: block;
    text-align: center;
    min-width: 220px;
    box-shadow: 0 2px 18px rgba(0, 217, 255, 0.3);
    transition: all 0.2s ease;
    border: 1px solid rgba(0, 217, 255, 0.3);
  }

  .dashboard-btn:hover {
    background-color: #1be1ff;
    color: #000;
    transform: translateY(-2px);
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.5);
  }

  /* Feature tiles for 9 functions */
  .feature-tile {
    background: rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px;
    box-shadow: 0 1px 26px rgba(20, 215, 230, 0.2);
    padding: 34px 24px 24px 24px;
    margin: 0; /* grid gap controls spacing now */
    text-align: left;
    min-width: 270px;
    transition: all 0.3s ease;
    cursor: pointer;
    position: relative;
    z-index: 52;
    pointer-events: auto;
  }

  .feature-tile:hover {
    border-color: #00d7ef;
    box-shadow: 0 4px 30px rgba(0, 217, 255, 0.4);
    transform: translateY(-3px);
  }

  .feature-title {
    color: #00d7ef;
    font-weight: 700;
    font-size: 1.24rem;
    margin-bottom: 0.46em;
  }

  .feature-desc {
    color: #94aec4;
    font-size: 1.09rem;
    line-height: 1.5;
  }

  .feature-icon {
    font-size: 2.7rem;
    margin-bottom: 14px;
    color: #1be1ff;
    display: block;
  }

  /* Admin panel - fixed left side - moved to bottom */
  .admin-panel-fixed {
    position: fixed;
    bottom: 20px;
    left: 20px;
    z-index: 100;
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  /* Right panel - fixed right side - bottom */
  .right-panel-fixed {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 100;
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .right-btn {
    background: rgba(0, 0, 0, 0.5);
    color: #ffffff;
    padding: 8px 20px;
    border-radius: 0px;
    box-shadow: 0 1px 26px rgba(20, 215, 230, 0.2);
    font-size: 0.9rem;
    font-weight: 700;
    border: 1px solid rgba(0, 217, 255, 0.3);
    transition: all 0.3s ease;
    display: block;
    text-align: center;
    min-width: 235px;
    cursor: pointer;
    position: relative;
    z-index: 10;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    backdrop-filter: blur(20px);
    font-family: 'Courier New', monospace;
  }

  .right-btn:hover {
    background: rgba(0, 0, 0, 0.7);
    color: #00d7ef;
    transform: translateY(-2px);
    box-shadow: 0 4px 30px rgba(0, 217, 255, 0.4);
    border-color: #00d7ef;
    backdrop-filter: blur(25px);
  }

  .right-btn:active {
    transform: translateY(0px);
    box-shadow: 0 2px 10px rgba(0, 217, 255, 0.4);
  }

  .admin-btn {
    background: rgba(255, 255, 255, 0.05);
    color: #ffffff;
    padding: 8px 20px;
    border-radius: 0px;
    box-shadow: 0 2px 12px rgba(0, 217, 255, 0.1);
    font-size: 0.9rem;
    font-weight: 700;
    text-decoration: none;
    border: 1px solid rgba(255, 255, 255, 0.2);
    transition: all 0.3s ease;
    display: block;
    text-align: center;
    min-width: 160px;
    position: relative;
    z-index: 10;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    backdrop-filter: blur(20px);
    font-family: 'Courier New', monospace;
  }

  .admin-btn:hover {
    background: rgba(0, 217, 255, 0.15);
    color: #00d7ef;
    transform: translateY(-2px);
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.3);
    border-color: rgba(0, 217, 255, 0.8);
    backdrop-filter: blur(25px);
  }

  /* Login container - fixed below admin panel */
  .login-container-fixed {
    display: flex;
    flex-direction: column;
    gap: 12px;
    background: rgba(0, 0, 0, 0.5);
    padding: 16px;
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px;
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.2);
  }

  .login-input-fixed {
    background: #131e28;
    color: #00d7ef;
    padding: 10px 12px;
    border: 2px solid rgba(0, 217, 255, 0.4);
    border-radius: 0px;
    font-size: 1rem;
    font-weight: 600;
    text-align: center;
    min-width: 150px;
    transition: all 0.2s ease;
  }

  .login-input-fixed:focus {
    outline: none;
    border-color: #00d7ef;
    box-shadow: 0 0 12px rgba(0, 217, 255, 0.4);
  }

  .login-input-fixed::placeholder {
    color: rgba(0, 217, 255, 0.6);
  }

  .login-btn-fixed {
    background-color: #164e63;
    color: white;
    padding: 10px 16px;
    border: none;
    border-radius: 0px;
    font-weight: 600;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.2s ease;
    box-shadow: 0 2px 12px rgba(0, 217, 255, 0.2);
  }

  .login-btn-fixed:hover {
    background-color: #1be1ff;
    color: #000;
    transform: translateY(-1px);
    box-shadow: 0 4px 16px rgba(0, 217, 255, 0.4);
  }

  /* Override any existing rounded corners - FORCE 0px everywhere */
  * {
    border-radius: 0px !important;
  }

  .widget-container {
    background: rgba(0, 0, 0, 0.7);
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 0px !important;
    transition: all 0.3s ease;
    overflow: hidden;
    position: relative;
  }

  .widget-container:hover {
    border-color: #00d9ff;
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.2);
    transform: translateY(-2px);
  }

  /* Force 0px border radius on specific elements */
  .additional-functions-section {
    position: relative;
    z-index: 50;
    pointer-events: auto;
  }

  .additional-grid {
    display: grid;
    /* Force 3 columns on wide screens so the section is exactly 3x3 for 9 items */
    grid-template-columns: repeat(3, 1fr);
    /* tighter gap between items without changing tile internals */
    gap: 0.75rem; /* ~12px */
    margin-top: 2rem;
    /* match width of top sections (approx Tailwind max-w-6xl = 72rem = 1152px) */
    max-width: 72rem; /* 1152px */
    width: 100%;
    padding: 0 1rem; /* keep small horizontal padding on narrow screens */
    margin-left: auto;
    margin-right: auto;
    position: relative;
    z-index: 51;
  }

  /* Responsive fallbacks: 2 columns on medium, 1 column on small */
  @media (max-width: 1024px) {
    .additional-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 768px) {
    .additional-grid {
      grid-template-columns: 1fr;
    }
  }

  .hidden {
    display: none !important;
  }

  /* Left-style buttons - same style as admin panel buttons */
  .left-style-btn {
    background: rgba(0, 0, 0, 0.5);
    color: #00d7ef;
    padding: 12px 24px;
    border-radius: 0px;
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.3);
    font-size: 1.1rem;
    font-weight: 600;
    border: 1px solid rgba(0, 217, 255, 0.4);
    transition: all 0.2s ease;
    display: inline-block;
    text-align: center;
    min-width: 180px;
    cursor: pointer;
  }

  .left-style-btn:hover {
    background: #00d7ef;
    color: #131e28;
    transform: translateY(-2px);
    box-shadow: 0 6px 25px rgba(0, 217, 255, 0.5);
  }

  .left-style-btn:active {
    transform: scale(1.05) translateY(-2px);
    box-shadow: 0 8px 30px rgba(0, 217, 255, 0.7);
  }

  .left-style-buttons-section {
    border-top: 1px solid rgba(0, 217, 255, 0.3);
    border-bottom: 1px solid rgba(0, 217, 255, 0.3);
  }

  /* Floating widget containers and widgets */
  .floating-widget-container {
    position: relative;
    display: block;
    width: 100%;
  }

  .floating-widget {
    position: absolute;
    bottom: 100%;
    right: 0;
    margin-bottom: 10px;
    background: rgba(0, 0, 0, 0.7);
    border: 1px solid rgba(0, 217, 255, 0.4);
    border-radius: 0px;
    box-shadow: 0 8px 32px rgba(0, 217, 255, 0.3);
    backdrop-filter: blur(16px);
    min-width: 350px;
    max-width: 1000px; /* Increased to accommodate full panel */
    max-height: 600px; /* Increased for better height */
    overflow-y: auto;
    z-index: 1000;
    animation: slideUp 0.3s ease-out;
    /* Ensure widget stays attached to its parent container */
    transform-origin: bottom right;
  }

  /* Specific positioning for AI Assistant widget */
  #polaczekWidget {
    right: 0;
    bottom: 100%;
  }

  /* Specific positioning for Music Player widget */
  #musicPlayerWidget {
    right: 0;
    bottom: 100%;
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (max-width: 1024px) {
    .grid-cols-1.lg\\:grid-cols-2.xl\\:grid-cols-3 {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .system-title {
      font-size: 2.5rem !important;
    }

    .admin-panel-fixed {
      bottom: 20px;
      left: 10px;
      gap: 12px;
    }

    .right-panel-fixed {
      bottom: 20px;
      right: 10px;
      gap: 12px;
    }

    .admin-btn,
    .right-btn {
      min-width: 180px;
      font-size: 1rem;
      padding: 10px 20px;
    }

    .login-container-fixed {
      padding: 12px;
    }

    .login-input-fixed {
      min-width: 130px;
      font-size: 0.9rem;
      padding: 8px 10px;
    }

    .login-btn-fixed {
      font-size: 0.9rem;
      padding: 8px 12px;
    }
  }

  @media (max-width: 768px) {
    .admin-panel-fixed {
      left: 8px;
      bottom: 15px;
      gap: 10px;
    }

    .right-panel-fixed {
      right: 8px;
      bottom: 15px;
      gap: 10px;
    }

    .admin-btn,
    .right-btn {
      min-width: 150px;
      font-size: 0.9rem;
      padding: 8px 16px;
    }

    .login-container-fixed {
      padding: 10px;
    }

    .login-input-fixed {
      min-width: 120px;
      font-size: 0.85rem;
      padding: 7px 8px;
    }

    .login-btn-fixed {
      font-size: 0.85rem;
      padding: 7px 10px;
    }
  }

  @media (min-width: 1024px) and (max-width: 1280px) {
    .grid-cols-1.lg\\:grid-cols-2.xl\\:grid-cols-3 {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1280px) {
    .grid-cols-1.lg\\:grid-cols-2.xl\\:grid-cols-3 {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  /* Global vertical lines for workers sections */
  .workers-vertical-line-left,
  .workers-vertical-line-right {
    position: fixed;
    top: 0;
    bottom: 0;
    width: 1px;
    background: #ffffff;
    z-index: 999;
    pointer-events: none;
  }

  .workers-vertical-line-left {
    left: calc(
      50vw - 576px - 10px - 21px
    ); /* 21px more to the left (moved 4px to the right) */
  }

  .workers-vertical-line-right {
    right: calc(50vw - 576px - 10px - 20px); /* 20px more to the right */
  }

  /* Remove body pseudo-elements */
  body::before,
  body::after {
    display: none;
  }
</style>
