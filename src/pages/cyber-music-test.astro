---
import Layout from '../layouts/Layout.astro';
import CyberpunkMusicPlayer from '../components/CyberpunkMusicPlayer.svelte';
---

<Layout title="Cyberpunk Music Player Test">
    <main>
        <div class="demo-container">
            <h1 class="demo-title">CYBER MUSIC SYSTEM</h1>
            <p class="demo-subtitle">Advanced Cyberpunk Music Player with Progressive Visualizer</p>

            <div class="feature-list">
                <h3>üéµ Key Features</h3>
                <div class="feature-item">
                    <span class="feature-icon">üéõÔ∏è</span>
                    <span>Cyberpunk styling matching site theme</span>
                </div>
                <div class="feature-item">
                    <span class="feature-icon">üìä</span>
                    <span>Progressive 3-layer visualizer (L1 ‚Üí L2 ‚Üí L3)</span>
                </div>
                <div class="feature-item">
                    <span class="feature-icon">üìã</span>
                    <span>Smooth dropdown track list</span>
                </div>
                <div class="feature-item">
                    <span class="feature-icon">üé®</span>
                    <span>Animated scanning lines and glow effects</span>
                </div>
                <div class="feature-item">
                    <span class="feature-icon">üîä</span>
                    <span>Full audio controls with visual feedback</span>
                </div>
                <div class="feature-item">
                    <span class="feature-icon">üì±</span>
                    <span>Responsive design for all devices</span>
                </div>
            </div>

            <div class="player-demo-section">
                <h2 class="section-title">Music Player Demo</h2>
                <div class="player-container">
                    <CyberpunkMusicPlayer client:load />
                </div>
            </div>

            <div class="controls-demo">
                <h3 style="color: var(--cyber-blue); margin-bottom: 15px;">üéÆ API Controls</h3>
                <p style="color: rgba(255, 255, 255, 0.8); margin-bottom: 15px; font-size: 0.9rem;">
                    Test the global JavaScript API:
                </p>
                <button class="demo-btn" onclick="testPlay()">Play/Pause</button>
                <button class="demo-btn" onclick="testNext()">Next Track</button>
                <button class="demo-btn" onclick="testPrevious()">Previous</button>
                <button class="demo-btn" onclick="testPlaylist()">Toggle Playlist</button>
                <button class="demo-btn" onclick="testVolume()">Volume 50%</button>
                <button class="demo-btn" onclick="testStatus()">Show Status</button>
                
                <div class="code-block">
                    <code>
// Available Global API:<br/>
window.CYBER_MUSIC.play()         // Start playback<br/>
window.CYBER_MUSIC.pause()        // Pause playback<br/>
window.CYBER_MUSIC.toggle()       // Toggle play/pause<br/>
window.CYBER_MUSIC.next()         // Next track<br/>
window.CYBER_MUSIC.prev()         // Previous track<br/>
window.CYBER_MUSIC.togglePlaylist() // Show/hide playlist<br/>
window.CYBER_MUSIC.setVolume(0.5) // Set volume (0-1)<br/>
window.CYBER_MUSIC.getState()     // Get current state
                    </code>
                </div>
            </div>
        </div>

        <script>
            // API test functions
            function testPlay() {
                if (window.CYBER_MUSIC) {
                    window.CYBER_MUSIC.toggle();
                } else {
                    alert('Music player not loaded yet. Please wait a moment.');
                }
            }

            function testNext() {
                if (window.CYBER_MUSIC) {
                    window.CYBER_MUSIC.next();
                } else {
                    alert('Music player not loaded yet. Please wait a moment.');
                }
            }

            function testPrevious() {
                if (window.CYBER_MUSIC) {
                    window.CYBER_MUSIC.prev();
                } else {
                    alert('Music player not loaded yet. Please wait a moment.');
                }
            }

            function testPlaylist() {
                if (window.CYBER_MUSIC) {
                    window.CYBER_MUSIC.togglePlaylist();
                } else {
                    alert('Music player not loaded yet. Please wait a moment.');
                }
            }

            function testVolume() {
                if (window.CYBER_MUSIC) {
                    window.CYBER_MUSIC.setVolume(0.5);
                    alert('Volume set to 50%');
                } else {
                    alert('Music player not loaded yet. Please wait a moment.');
                }
            }

            function testStatus() {
                if (window.CYBER_MUSIC) {
                    const state = window.CYBER_MUSIC.getState();
                    alert(`Status:\nPlaying: ${state.isPlaying}\nTrack: ${state.trackName}\nVolume: ${Math.round(state.volume * 100)}%`);
                } else {
                    alert('Music player not loaded yet. Please wait a moment.');
                }
            }

            // Listen for visualizer ready event
            window.addEventListener('cyber-music-analyser-ready', function() {
                console.log('üéµ Cyber Music visualizer is ready!');
            });
        </script>
    </main>
</Layout>

<style>
    .demo-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 40px 20px;
    }

    .demo-title {
        font-family: 'Neuropol', 'Rajdhani', system-ui, sans-serif;
        color: var(--cyber-blue);
        font-size: 2.5rem;
        text-align: center;
        margin-bottom: 10px;
        text-transform: uppercase;
        letter-spacing: 3px;
    }

    .demo-subtitle {
        color: rgba(255, 255, 255, 0.7);
        text-align: center;
        margin-bottom: 40px;
        font-size: 1.1rem;
    }

    .feature-list {
        background: rgba(0, 0, 0, 0.5);
        border: 1px solid rgba(0, 255, 255, 0.3);
        border-radius: 12px;
        padding: 30px;
        margin-bottom: 40px;
    }

    .feature-list h3 {
        color: var(--cyber-blue);
        font-family: 'Neuropol', 'Rajdhani', system-ui, sans-serif;
        text-transform: uppercase;
        letter-spacing: 2px;
        margin-bottom: 20px;
        border-bottom: 1px solid rgba(0, 255, 255, 0.2);
        padding-bottom: 10px;
    }

    .feature-item {
        display: flex;
        align-items: center;
        padding: 8px 0;
        color: rgba(255, 255, 255, 0.8);
    }

    .feature-icon {
        color: var(--cyber-blue);
        margin-right: 12px;
        min-width: 20px;
    }

    .player-demo-section {
        margin: 60px 0;
    }

    .section-title {
        color: var(--cyber-blue);
        font-family: 'Neuropol', 'Rajdhani', system-ui, sans-serif;
        font-size: 1.5rem;
        text-transform: uppercase;
        letter-spacing: 2px;
        text-align: center;
        margin-bottom: 30px;
        border-bottom: 1px solid rgba(0, 255, 255, 0.2);
        padding-bottom: 15px;
    }

    .player-container {
        display: flex;
        justify-content: center;
        padding: 20px;
    }

    .controls-demo {
        background: rgba(0, 0, 0, 0.3);
        border: 1px solid rgba(0, 255, 255, 0.2);
        border-radius: 10px;
        padding: 20px;
        margin-top: 30px;
    }

    .demo-btn {
        background: rgba(0, 0, 0, 0.7);
        border: 2px solid rgba(0, 255, 255, 0.5);
        color: var(--cyber-blue);
        padding: 10px 20px;
        margin: 5px;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-family: 'Rajdhani', system-ui, sans-serif;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .demo-btn:hover {
        border-color: var(--cyber-blue);
        background: rgba(0, 255, 255, 0.1);
        box-shadow: 0 0 15px rgba(0, 255, 255, 0.4);
    }

    .code-block {
        background: rgba(0, 0, 0, 0.7);
        border: 1px solid rgba(0, 255, 255, 0.3);
        border-radius: 8px;
        padding: 15px;
        font-family: 'Courier New', monospace;
        color: #00ff00;
        font-size: 0.9rem;
        margin: 15px 0;
        overflow-x: auto;
        line-height: 1.4;
    }

    .code-block code {
        color: #00ff00;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .demo-container {
            padding: 20px 10px;
        }

        .demo-title {
            font-size: 2rem;
            letter-spacing: 2px;
        }

        .feature-list {
            padding: 20px;
        }

        .demo-btn {
            padding: 8px 16px;
            font-size: 0.9rem;
        }
    }
</style>
