---
import MyBonzoLayout from "../layouts/MyBonzoLayout.astro";
import AiHelpAssistant from "../components/AiHelpAssistant.svelte";
---

<MyBonzoLayout title="Generator Obraz√≥w | AI Workers">
  <main class="min-h-svh">
    <!-- Header Section -->
    <section class="border border-edge">
      <div class="max-w-6xl mx-auto border-x border-edge">
        <div class="flex justify-between max-h-72 min-h-64">
          <div class="mt-auto">
            <span
              style="writing-mode: vertical-lr;"
              class="text-edge block px-2 text-xl font-semibold tracking-[0.3em]"
            >
              IMAGE_GEN
            </span>
          </div>
          <span class="mt-auto">
            <span
              style=""
              class="text-edge block px-2 text-xl font-semibold tracking-[0.3em]"
            >
              FLUX AI
            </span>
          </span>
        </div>
      </div>
    </section>

    <!-- Navigation Section -->
    <section class="border border-edge">
      <div class="max-w-6xl mx-auto border-x border-edge">
        <div class="flex flex-row p-2">
          <a class="hover:brightness-125" href="/">
            <h1 class="text-4xl sm:text-5xl">GENERATOR OBRAZ√ìW</h1>
            <h2 class="text-2xl sm:text-3xl">Flux-1 Schnell AI</h2>
          </a>

          <div class="hidden ml-auto gap-4 md:gap-0 md:flex md:flex-col">
            <a class="ml-auto hover:brightness-125 duration-200" href="/">
              ‚Üê Powr√≥t do strony g≈Ç√≥wnej
              <svg
                style="--rotation: -45deg"
                class="stroke-primary-foreground inline aspect-square w-3 h-auto fill-transparent rotate-[var(--rotation)]"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M3 12L21 12M21 12L12.5 3.5M21 12L12.5 20.5"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- Image Generator Section -->
    <section
      class="ai-workers-section flex items-center justify-center py-16"
      id="image-generator"
    >
      <div class="section-container max-w-4xl mx-auto">
        <h2 class="section-title">GENERATOR OBRAZ√ìW AI</h2>
        <p class="section-description">
          Tw√≥rz niesamowite obrazy z tekstu u≈ºywajƒÖc najnowszego modelu Flux-1
          Schnell
        </p>

        <!-- Main Generator Interface -->
        <div
          class="generator-container border border-edge rounded-lg p-6 mt-8"
          style="background: rgba(0, 0, 0, 0.5);"
        >
          <!-- Input Section -->
          <div class="input-section mb-6">
            <label
              for="imagePrompt"
              class="block text-lg font-semibold mb-3 text-primary-foreground"
            >
              Opisz obraz kt√≥ry chcesz wygenerowaƒá:
            </label>
            <textarea
              id="imagePrompt"
              rows="3"
              class="w-full p-4 border border-edge rounded-lg text-primary-foreground placeholder-gray-400 focus:border-cyan-400 focus:outline-none resize-none"
              style="background: rgba(0, 0, 0, 0.5);"
              placeholder="Np. Piƒôkny krajobraz g√≥rski o zachodzie s≈Ço≈Ñca, styl fotograficzny, wysoka jako≈õƒá, 4K..."
            ></textarea>
          </div>

          <!-- Settings Section -->
          <div
            class="settings-section mb-6 grid grid-cols-1 md:grid-cols-3 gap-4"
          >
            <div>
              <label
                class="block text-sm font-medium mb-2 text-primary-foreground"
                >Rozmiar:</label
              >
              <select
                id="imageSize"
                class="w-full p-2 border border-edge rounded text-primary-foreground"
                style="background: rgba(0, 0, 0, 0.5);"
              >
                <option value="512x512">512√ó512 (kwadrat)</option>
                <option value="768x512">768√ó512 (poziomo)</option>
                <option value="512x768">512√ó768 (pionowo)</option>
                <option value="1024x1024">1024√ó1024 (du≈ºy kwadrat)</option>
              </select>
            </div>
            <div>
              <label
                class="block text-sm font-medium mb-2 text-primary-foreground"
                >Jako≈õƒá:</label
              >
              <select
                id="imageQuality"
                class="w-full p-2 border border-edge rounded text-primary-foreground"
                style="background: rgba(0, 0, 0, 0.5);"
              >
                <option value="standard">Standard</option>
                <option value="high">Wysoka</option>
                <option value="ultra">Ultra</option>
              </select>
            </div>
            <div>
              <label
                class="block text-sm font-medium mb-2 text-primary-foreground"
                >Styl:</label
              >
              <select
                id="imageStyle"
                class="w-full p-2 border border-edge rounded text-primary-foreground"
                style="background: rgba(0, 0, 0, 0.5);"
              >
                <option value="photographic">Fotograficzny</option>
                <option value="artistic">Artystyczny</option>
                <option value="digital">Cyfrowy</option>
                <option value="anime">Anime</option>
                <option value="abstract">Abstrakcyjny</option>
              </select>
            </div>
          </div>

          <!-- Generate Button -->
          <div class="generate-section mb-6">
            <button
              id="generateBtn"
              class="w-full bg-cyan-600 hover:bg-cyan-700 text-white py-4 px-6 rounded-lg font-semibold text-lg transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
              onclick="generateImage()"
            >
              üé® Generuj Obraz
            </button>
          </div>

          <!-- Progress Section -->
          <div id="progressSection" class="progress-section hidden mb-6">
            <div
              class="border border-edge rounded-lg p-4"
              style="background: rgba(0, 0, 0, 0.5);"
            >
              <div class="flex items-center justify-between mb-2">
                <span class="text-primary-foreground"
                  >Generowanie obrazu...</span
                >
                <span id="progressPercent" class="text-cyan-400">0%</span>
              </div>
              <div class="w-full bg-gray-700 rounded-full h-2">
                <div
                  id="progressBar"
                  class="bg-cyan-400 h-2 rounded-full transition-all duration-300"
                  style="width: 0%"
                >
                </div>
              </div>
            </div>
          </div>

          <!-- Result Section -->
          <div id="resultSection" class="result-section hidden">
            <h3 class="text-xl font-semibold mb-4 text-primary-foreground">
              Wygenerowany obraz:
            </h3>
            <div
              class="border border-edge rounded-lg p-4"
              style="background: rgba(0, 0, 0, 0.5);"
            >
              <img
                id="generatedImage"
                class="w-full rounded-lg mb-4"
                alt="Wygenerowany obraz"
              />
              <div class="flex gap-2 flex-wrap">
                <button
                  class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded text-sm"
                  onclick="downloadImage()"
                >
                  üíæ Pobierz
                </button>
                <button
                  class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded text-sm"
                  onclick="shareImage()"
                >
                  üì§ Udostƒôpnij
                </button>
                <button
                  class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded text-sm"
                  onclick="generateVariation()"
                >
                  üîÑ Wariacja
                </button>
              </div>
            </div>
          </div>
        </div>

        <!-- Quick Prompts Section -->
        <div class="quick-prompts-section mt-8">
          <h3 class="text-xl font-semibold mb-4 text-primary-foreground">
            Szybkie propozycje:
          </h3>
          <div class="grid grid-cols-2 md:grid-cols-4 gap-3">
            <button
              class="quick-prompt-btn"
              onclick="setPrompt('Piƒôkny krajobraz g√≥rski o zachodzie s≈Ço≈Ñca, styl fotograficzny')"
            >
              üèîÔ∏è Krajobraz
            </button>
            <button
              class="quick-prompt-btn"
              onclick="setPrompt('Futurystyczne miasto cyberpunk w nocy, neonowe ≈õwiat≈Ça')"
            >
              üåÉ Cyberpunk
            </button>
            <button
              class="quick-prompt-btn"
              onclick="setPrompt('Uroczy kot siedzƒÖcy na ksiƒÖ≈ºkach, styl akwareli')"
            >
              üê± Zwierzƒôta
            </button>
            <button
              class="quick-prompt-btn"
              onclick="setPrompt('Abstrakcyjna sztuka kolorowa, geometryczne kszta≈Çty')"
            >
              üé® Abstrakcja
            </button>
            <button
              class="quick-prompt-btn"
              onclick="setPrompt('Vintage samoch√≥d na pustej drodze, z≈Çota godzina')"
            >
              üöó Vintage
            </button>
            <button
              class="quick-prompt-btn"
              onclick="setPrompt('Kosmiczna scena z planetami i gwiazdami, realistyczny styl')"
            >
              üåå Kosmos
            </button>
            <button
              class="quick-prompt-btn"
              onclick="setPrompt('Magiczny las z ≈õwietlikami, fantasy art')"
            >
              üßö Fantasy
            </button>
            <button
              class="quick-prompt-btn"
              onclick="setPrompt('Minimalistyczny design logo, nowoczesny styl')"
            >
              ‚ö° Logo
            </button>
          </div>
        </div>

        <!-- History Section -->
        <div class="history-section mt-8">
          <h3 class="text-xl font-semibold mb-4 text-primary-foreground">
            Historia generacji:
          </h3>
          <div id="historyGrid" class="grid grid-cols-2 md:grid-cols-4 gap-4">
            <!-- History items will be populated here -->
          </div>
        </div>
      </div>
    </section>
  </main>

  <!-- AI Help Assistant Integration -->
  <AiHelpAssistant client:load />
</MyBonzoLayout>

<style>
  /* Base styles matching main page */
  .section-container {
    padding: 2rem;
    text-align: center;
  }

  .section-title {
    font-size: 3rem;
    font-weight: bold;
    color: #00bcd4;
    margin-bottom: 1rem;
    text-transform: uppercase;
  }

  .section-description {
    font-size: 1.25rem;
    color: #d1d5db;
    margin-bottom: 2rem;
  }

  .quick-prompt-btn {
    background-color: rgba(0, 0, 0, 0.3);
    border: 1px solid #374151;
    color: #d1d5db;
    padding: 0.75rem 1rem;
    rounded: 0.5rem;
    font-size: 0.875rem;
    transition: all 0.2s;
    cursor: pointer;
  }

  .quick-prompt-btn:hover {
    background-color: #374151;
    border-color: #00bcd4;
    color: #00bcd4;
  }

  .ai-workers-section {
    background: linear-gradient(
      135deg,
      rgba(0, 0, 0, 0.5) 0%,
      rgba(0, 0, 0, 0.5) 100%
    );
    min-height: 100vh;
  }

  /* Scrollbar styling */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: #1e293b;
  }

  ::-webkit-scrollbar-thumb {
    background: #374151;
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: #4b5563;
  }
</style>

<script>
  let generationHistory = JSON.parse(
    localStorage.getItem("imageHistory") || "[]"
  );

  function setPrompt(prompt) {
    document.getElementById("imagePrompt").value = prompt;
  }

  async function generateImage() {
    const prompt = document.getElementById("imagePrompt").value.trim();
    if (!prompt) {
      alert("Proszƒô wprowadziƒá opis obrazu");
      return;
    }

    const generateBtn = document.getElementById("generateBtn");
    const progressSection = document.getElementById("progressSection");
    const resultSection = document.getElementById("resultSection");

    // Start generation
    generateBtn.disabled = true;
    generateBtn.textContent = "Generowanie...";
    progressSection.classList.remove("hidden");
    resultSection.classList.add("hidden");

    // Simulate progress
    let progress = 0;
    const progressInterval = setInterval(() => {
      progress += Math.random() * 15;
      if (progress > 90) progress = 90;

      document.getElementById("progressBar").style.width = progress + "%";
      document.getElementById("progressPercent").textContent =
        Math.round(progress) + "%";
    }, 500);

    try {
      const size = document.getElementById("imageSize").value;
      const quality = document.getElementById("imageQuality").value;
      const style = document.getElementById("imageStyle").value;

      const response = await fetch("/api/generate-image", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          prompt,
          size,
          quality,
          style,
        }),
      });

      const data = await response.json();

      // Complete progress
      clearInterval(progressInterval);
      document.getElementById("progressBar").style.width = "100%";
      document.getElementById("progressPercent").textContent = "100%";

      if (data.success && data.imageUrl) {
        // Show result
        document.getElementById("generatedImage").src = data.imageUrl;
        resultSection.classList.remove("hidden");

        // Add to history
        const historyItem = {
          id: Date.now(),
          prompt,
          imageUrl: data.imageUrl,
          timestamp: new Date().toISOString(),
          settings: { size, quality, style },
        };

        generationHistory.unshift(historyItem);
        if (generationHistory.length > 20) {
          generationHistory = generationHistory.slice(0, 20);
        }

        localStorage.setItem("imageHistory", JSON.stringify(generationHistory));
        updateHistoryDisplay();
      } else {
        throw new Error(data.error || "B≈ÇƒÖd generacji obrazu");
      }
    } catch (error) {
      console.error("Generation error:", error);
      alert("B≈ÇƒÖd podczas generowania obrazu: " + error.message);
    } finally {
      // Reset UI
      generateBtn.disabled = false;
      generateBtn.textContent = "üé® Generuj Obraz";
      setTimeout(() => {
        progressSection.classList.add("hidden");
      }, 1000);
    }
  }

  function downloadImage() {
    const img = document.getElementById("generatedImage");
    const link = document.createElement("a");
    link.download = "generated_image.png";
    link.href = img.src;
    link.click();
  }

  function shareImage() {
    const img = document.getElementById("generatedImage");
    if (navigator.share) {
      navigator.share({
        title: "Wygenerowany obraz AI",
        files: [
          new File([img.src], "generated_image.png", { type: "image/png" }),
        ],
      });
    } else {
      navigator.clipboard.writeText(img.src);
      alert("Link do obrazu skopiowany do schowka!");
    }
  }

  function generateVariation() {
    const currentPrompt = document.getElementById("imagePrompt").value;
    const variations = [
      ", w innym stylu",
      ", z innymi kolorami",
      ", z innej perspektywy",
      ", w wersji artystycznej",
      ", z dodatkowymi detalami",
    ];

    const randomVariation =
      variations[Math.floor(Math.random() * variations.length)];
    document.getElementById("imagePrompt").value =
      currentPrompt + randomVariation;
    generateImage();
  }

  function updateHistoryDisplay() {
    const historyGrid = document.getElementById("historyGrid");
    historyGrid.innerHTML = "";

    generationHistory.slice(0, 8).forEach((item) => {
      const historyItem = document.createElement("div");
      historyItem.className =
        "history-item border border-edge rounded-lg p-2 cursor-pointer hover:border-cyan-400 transition-colors";
      historyItem.style.background = "rgba(0, 0, 0, 0.5)";
      historyItem.innerHTML = `
        <img src="${item.imageUrl}" alt="Historia" class="w-full aspect-square object-cover rounded mb-2" />
        <p class="text-xs text-gray-400 truncate">${item.prompt}</p>
      `;
      historyItem.onclick = () => {
        document.getElementById("imagePrompt").value = item.prompt;
        document.getElementById("generatedImage").src = item.imageUrl;
        document.getElementById("resultSection").classList.remove("hidden");
      };
      historyGrid.appendChild(historyItem);
    });
  }

  // Initialize history display
  document.addEventListener("DOMContentLoaded", () => {
    updateHistoryDisplay();

    // Load quick prompt if available
    const quickPrompt = localStorage.getItem("quickPrompt");
    if (quickPrompt) {
      document.getElementById("imagePrompt").value = quickPrompt;
      localStorage.removeItem("quickPrompt");
    }
  });
</script>
