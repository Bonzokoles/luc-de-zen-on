---
import Layout from "../layouts/Layout.astro";
import AgentsPanel from "../components/AgentsPanel.svelte";
import Chatbot from "../components/Chatbot.svelte";

// Mock metrics data
const metrics = {
  totalAgents: 2,
  activeAgents: 2,
  completedTasks: 247,
  successRate: 94.2,
};

// Mock active tasks
const activeTasks = [
  {
    id: 1,
    name: "Monitor Cloudflare",
    progress: 75,
    agent: "Agent Cloudflare",
  },
  { id: 2, name: "Generate Content", progress: 40, agent: "Agent Kreacyjny" },
  { id: 3, name: "Optimize Cache", progress: 90, agent: "Agent Cloudflare" },
];

// Mock alerts
const alerts = [
  {
    id: 1,
    type: "success",
    message: "Agent Cloudflare: Cache optimization completed",
    time: "2 min ago",
  },
  {
    id: 2,
    type: "warning",
    message: "API rate limit approaching for Agent Kreacyjny",
    time: "5 min ago",
  },
  {
    id: 3,
    type: "info",
    message: "New content generated by Agent Kreacyjny",
    time: "10 min ago",
  },
];
---

<Layout
  siteTitle="BACKROOM // DASHBOARD"
  siteDescription="Dashboard administratora systemu agentÃ³w AI"
  headerCosmeticText="ADMIN_DASHBOARD.EXE"
>
  <main class="min-h-screen p-6">
    <!-- HEADER -->
    <header class="mb-8 border-b border-gray-800 pb-6">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-4xl font-bold text-blue-400 font-mono">
            ADMIN DASHBOARD
          </h1>
          <p class="text-gray-400 text-sm mt-2">
            System monitoring and control panel
          </p>
        </div>
        <div class="flex items-center space-x-4">
          <a
            href="/agents"
            class="px-4 py-2 bg-blue-500 text-white hover:bg-blue-600 transition-colors"
          >
            AGENTS PANEL
          </a>
        </div>
      </div>
    </header>

    <!-- METRICS OVERVIEW -->
    <section class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
      <div class="border border-gray-800 bg-gray-900/50 p-4">
        <div class="text-blue-400 text-sm font-mono">TOTAL AGENTS</div>
        <div class="text-2xl font-bold text-white">{metrics.totalAgents}</div>
      </div>
      <div class="border border-gray-800 bg-gray-900/50 p-4">
        <div class="text-green-400 text-sm font-mono">ACTIVE AGENTS</div>
        <div class="text-2xl font-bold text-white">{metrics.activeAgents}</div>
      </div>
      <div class="border border-gray-800 bg-gray-900/50 p-4">
        <div class="text-yellow-400 text-sm font-mono">COMPLETED TASKS</div>
        <div class="text-2xl font-bold text-white">
          {metrics.completedTasks}
        </div>
      </div>
      <div class="border border-gray-800 bg-gray-900/50 p-4">
        <div class="text-purple-400 text-sm font-mono">SUCCESS RATE</div>
        <div class="text-2xl font-bold text-white">{metrics.successRate}%</div>
      </div>
    </section>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
      <!-- ACTIVE TASKS -->
      <section class="border border-gray-800 bg-gray-900/50">
        <div class="border-b border-gray-800 p-4">
          <h2 class="text-xl font-bold text-blue-400 font-mono">
            ACTIVE TASKS
          </h2>
        </div>
        <div class="p-4 space-y-3">
          {
            activeTasks.map((task) => (
              <div class="border border-gray-700 p-3">
                <div class="flex justify-between items-start mb-2">
                  <span class="text-white font-mono text-sm">{task.name}</span>
                  <span class="text-gray-400 text-xs">{task.agent}</span>
                </div>
                <div class="w-full bg-gray-700 h-2">
                  <div
                    class="bg-blue-500 h-2"
                    style={`width: ${task.progress}%`}
                  />
                </div>
                <div class="text-xs text-gray-400 mt-1">
                  {task.progress}% complete
                </div>
              </div>
            ))
          }
        </div>
      </section>

      <!-- SYSTEM ALERTS -->
      <section class="border border-gray-800 bg-gray-900/50">
        <div class="border-b border-gray-800 p-4">
          <h2 class="text-xl font-bold text-blue-400 font-mono">
            SYSTEM ALERTS
          </h2>
        </div>
        <div class="p-4 space-y-3">
          {
            alerts.map((alert) => (
              <div class="border border-gray-700 p-3">
                <div class="flex items-start justify-between">
                  <div class="flex items-center space-x-2">
                    <span
                      class={`w-2 h-2 rounded-full ${
                        alert.type === "success"
                          ? "bg-green-400"
                          : alert.type === "warning"
                            ? "bg-yellow-400"
                            : alert.type === "error"
                              ? "bg-red-400"
                              : "bg-blue-400"
                      }`}
                    />
                    <span class="text-white text-sm">{alert.message}</span>
                  </div>
                  <span class="text-gray-400 text-xs">{alert.time}</span>
                </div>
              </div>
            ))
          }
        </div>
      </section>
    </div>

    <!-- AGENTS PANEL -->
    <section class="border border-gray-800 bg-gray-900/50 mb-8">
      <div class="border-b border-gray-800 p-4">
        <h2 class="text-xl font-bold text-blue-400 font-mono">
          AGENTS CONTROL PANEL
        </h2>
      </div>
      <div class="p-6">
        <AgentsPanel client:only="svelte" />
      </div>
    </section>

    <!-- CHATBOT -->
    <section class="border border-gray-800 bg-gray-900/50">
      <div class="border-b border-gray-800 p-4">
        <h2 class="text-xl font-bold text-blue-400 font-mono">AI ASSISTANT</h2>
      </div>
      <div class="p-6">
        <Chatbot client:only="svelte" />
      </div>
    </section>
  </main>
</Layout>
