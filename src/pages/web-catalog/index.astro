---
import MyBonzoLayout from "../../layouts/MyBonzoLayout.astro";
import DecorativeLines from "../../components/DecorativeLines.astro";
---

<MyBonzoLayout siteTitle="Web Catalog Manager | KAROL LISSON">
  <DecorativeLines />

  <main class="min-h-svh relative z-10">
    <!-- Background Grid Pattern -->
    <div class="fixed inset-0 bg-[#0a0a0a]">
      <div class="absolute inset-0 bg-gradient-to-br from-cyan-900/20 via-black to-black"></div>
      <div class="cyber-grid absolute inset-0"></div>
    </div>

    <!-- Header Section -->
    <section class="relative z-20 border-b border-[#333333] pt-20">
      <div class="max-w-6xl mx-auto px-4 py-8">
        <div class="flex items-center justify-between mb-8">
          <div>
            <h1 class="text-4xl md:text-5xl font-bold text-[#00ffff] mb-2 uppercase tracking-wider font-mono">
              Web Catalog Manager
            </h1>
            <p class="text-[#a0a0a0] text-lg font-['Kenyan_Coffee']">
              Zaawansowane zarzƒÖdzanie katalogami produkt√≥w z AI automation
            </p>
          </div>
          <div class="text-right text-sm text-[#a0a0a0] font-mono">
            <div class="mb-1">
              STATUS: <span class="text-[#00ffff]">ACTIVE</span>
            </div>
            <div>API: <span class="text-[#ff6699] animate-pulse">CONNECTED</span></div>
          </div>
        </div>

        <!-- Navigation -->
        <div class="flex gap-4 mb-8">
          <a
            href="/"
            class="px-4 py-2 bg-[#111111] border border-[#333333] text-[#00ffff] hover:brightness-125 transition-all duration-300 font-mono uppercase tracking-wide text-sm"
          >
            ‚Üê Powr√≥t do g≈Ç√≥wnej
          </a>
          <a
            href="/web-catalog-manager.html"
            target="_blank"
            class="px-4 py-2 bg-[#111111] border border-[#333333] text-[#e0e0e0] hover:text-[#00ffff] hover:brightness-125 transition-all duration-300 font-mono uppercase tracking-wide text-sm"
          >
            PE≈ÅNY MANAGER
          </a>
          <button
            id="refreshCatalog"
            class="px-4 py-2 bg-[#ff6699] text-[#0a0a0a] hover:brightness-125 transition-all duration-300 font-mono uppercase tracking-wide text-sm font-bold"
          >
            OD≈öWIE≈ª KATALOG
          </button>
          <button
            id="exportData"
            class="px-4 py-2 bg-[#00ffff] text-[#0a0a0a] hover:brightness-125 transition-all duration-300 font-mono uppercase tracking-wide text-sm font-bold"
          >
            EXPORT
          </button>
        </div>
      </div>
    </section>

    <!-- API Connections Status -->
    <section class="relative z-20 py-8 border-b border-[#333333]">
      <div class="max-w-6xl mx-auto px-4">
        <h3 class="text-[#00ffff] font-mono text-xl uppercase tracking-wide mb-6">
          üîå API Connections Status
        </h3>
        
        <div class="grid md:grid-cols-4 gap-4">
          <div class="bg-[#111111] border border-[#333333] p-4 rounded-sm" id="googleApiStatus">
            <div class="flex items-center justify-between mb-2">
              <div class="text-[#e0e0e0] font-bold text-sm">Google API</div>
              <div class="w-3 h-3 bg-[#ffaa00] rounded-full animate-pulse"></div>
            </div>
            <div class="text-[#a0a0a0] text-xs mb-1">Status: Connecting...</div>
            <div class="text-[#ffaa00] text-xs">Initializing connection</div>
          </div>
          
          <div class="bg-[#111111] border border-[#333333] p-4 rounded-sm" id="vertexAiStatus">
            <div class="flex items-center justify-between mb-2">
              <div class="text-[#e0e0e0] font-bold text-sm">Vertex AI</div>
              <div class="w-3 h-3 bg-[#ffaa00] rounded-full animate-pulse"></div>
            </div>
            <div class="text-[#a0a0a0] text-xs mb-1">Status: Connecting...</div>
            <div class="text-[#ffaa00] text-xs">Loading credentials</div>
          </div>
          
          <div class="bg-[#111111] border border-[#333333] p-4 rounded-sm" id="adkAgenStatus">
            <div class="flex items-center justify-between mb-2">
              <div class="text-[#e0e0e0] font-bold text-sm">ADK Agent</div>
              <div class="w-3 h-3 bg-[#ff0000] rounded-full animate-pulse"></div>
            </div>
            <div class="text-[#a0a0a0] text-xs mb-1">Status: Offline</div>
            <div class="text-[#ff0000] text-xs">Connection failed</div>
          </div>
          
          <div class="bg-[#111111] border border-[#333333] p-4 rounded-sm" id="cloudflareKvStatus">
            <div class="flex items-center justify-between mb-2">
              <div class="text-[#e0e0e0] font-bold text-sm">Cloudflare KV</div>
              <div class="w-3 h-3 bg-[#00ff00] rounded-full animate-pulse"></div>
            </div>
            <div class="text-[#a0a0a0] text-xs mb-1">Status: Connected</div>
            <div class="text-[#00ffff] text-xs">15 namespaces active</div>
          </div>
        </div>
      </div>
    </section>

    <!-- Catalog Management Interface -->
    <section class="relative z-20 py-8">
      <div class="max-w-6xl mx-auto px-4">
        <div class="grid lg:grid-cols-3 gap-6">
          <!-- Catalog Controls -->
          <div class="lg:col-span-1">
            <div class="bg-[#111111] border border-[#333333] p-6 rounded-sm mb-6">
              <h3 class="text-[#ff6699] font-mono text-xl uppercase tracking-wide mb-4">
                üéõÔ∏è Catalog Controls
              </h3>
              
              <div class="space-y-4">
                <div>
                  <label class="text-[#a0a0a0] text-sm mb-2 block">Data Source:</label>
                  <select 
                    id="dataSource" 
                    class="w-full bg-[#0a0a0a] border border-[#333333] text-[#e0e0e0] p-3 rounded-sm focus:border-[#00ffff] focus:outline-none"
                  >
                    <option value="google-sheets">Google Sheets</option>
                    <option value="vertex-ai">Vertex AI Generated</option>
                    <option value="manual">Manual Entry</option>
                    <option value="csv-import">CSV Import</option>
                  </select>
                </div>

                <div>
                  <label class="text-[#a0a0a0] text-sm mb-2 block">Category Filter:</label>
                  <select 
                    id="categoryFilter" 
                    class="w-full bg-[#0a0a0a] border border-[#333333] text-[#e0e0e0] p-3 rounded-sm focus:border-[#00ffff] focus:outline-none"
                  >
                    <option value="all">Wszystkie kategorie</option>
                    <option value="electronics">Elektronika</option>
                    <option value="software">Oprogramowanie</option>
                    <option value="services">Us≈Çugi</option>
                    <option value="digital">Produkty cyfrowe</option>
                  </select>
                </div>

                <div>
                  <label class="text-[#a0a0a0] text-sm mb-2 block">AI Generation Mode:</label>
                  <select 
                    id="aiMode" 
                    class="w-full bg-[#0a0a0a] border border-[#333333] text-[#e0e0e0] p-3 rounded-sm focus:border-[#00ffff] focus:outline-none"
                  >
                    <option value="standard">Standard</option>
                    <option value="creative">Creative</option>
                    <option value="technical">Technical</option>
                    <option value="marketing">Marketing Focus</option>
                  </select>
                </div>

                <button 
                  id="generateCatalog"
                  class="w-full bg-[#00ffff] text-[#0a0a0a] py-3 font-bold hover:brightness-125 transition-all duration-300 font-mono uppercase tracking-wide"
                >
                  Generate AI Catalog
                </button>
              </div>
            </div>

            <!-- Quick Stats -->
            <div class="bg-[#111111] border border-[#333333] p-4 rounded-sm">
              <h4 class="text-[#ff6699] font-mono text-sm uppercase mb-3">üìä Quick Stats</h4>
              <div class="space-y-2 text-xs">
                <div class="flex justify-between">
                  <span class="text-[#a0a0a0]">Total Products:</span>
                  <span class="text-[#00ffff]" id="totalProducts">0</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-[#a0a0a0]">Categories:</span>
                  <span class="text-[#00ffff]" id="totalCategories">0</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-[#a0a0a0]">AI Generated:</span>
                  <span class="text-[#ff6699]" id="aiGenerated">0</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-[#a0a0a0]">Last Update:</span>
                  <span class="text-[#a0a0a0]" id="lastUpdate">--:--</span>
                </div>
              </div>
            </div>
          </div>

          <!-- Catalog Preview -->
          <div class="lg:col-span-2">
            <div class="bg-[#111111] border border-[#333333] p-6 rounded-sm">
              <div class="flex justify-between items-center mb-4">
                <h3 class="text-[#ff6699] font-mono text-xl uppercase tracking-wide">
                  üìö Catalog Preview
                </h3>
                <div class="flex gap-2">
                  <button 
                    id="viewGrid"
                    class="px-3 py-1 bg-[#333333] text-[#e0e0e0] text-xs hover:bg-[#00ffff] hover:text-[#0a0a0a] transition-all duration-300"
                  >
                    GRID
                  </button>
                  <button 
                    id="viewList"
                    class="px-3 py-1 bg-[#333333] text-[#e0e0e0] text-xs hover:bg-[#00ffff] hover:text-[#0a0a0a] transition-all duration-300"
                  >
                    LIST
                  </button>
                </div>
              </div>
              
              <!-- Loading State -->
              <div id="catalogLoading" class="text-center py-12">
                <div class="text-[#00ffff] text-lg animate-pulse mb-2">üîÑ ≈Åadowanie katalogu...</div>
                <div class="text-[#a0a0a0] text-sm">≈ÅƒÖczenie z API i pobieranie danych</div>
              </div>

              <!-- Catalog Grid -->
              <div id="catalogGrid" class="hidden md:grid-cols-2 lg:grid-cols-3 gap-4">
                <!-- Products will be populated by JavaScript -->
              </div>

              <!-- Catalog List -->
              <div id="catalogList" class="hidden space-y-3">
                <!-- Products will be populated by JavaScript -->
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

  </main>

  <style>
    .cyber-grid {
      background-image: 
        linear-gradient(rgba(0, 255, 255, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(0, 255, 255, 0.1) 1px, transparent 1px);
      background-size: 20px 20px;
    }
  </style>

  <script>
    // Web Catalog Manager Integration
    class WebCatalogManager {
      constructor() {
        this.initializeAPI();
        this.setupEventListeners();
        this.loadCatalogData();
      }

      async initializeAPI() {
        try {
          // Test Google API connection
          await this.testGoogleAPI();
          // Test Vertex AI connection  
          await this.testVertexAI();
          // Test ADK Agent connection
          await this.testADKAgent();
          // Update Cloudflare KV status
          await this.updateCloudflareStatus();
        } catch (error) {
          console.error('API initialization failed:', error);
        }
      }

      async testGoogleAPI() {
        const statusEl = document.getElementById('googleApiStatus');
        try {
          // Simulate API test - replace with actual API call
          await new Promise(resolve => setTimeout(resolve, 2000));
          
          statusEl.innerHTML = `
            <div class="flex items-center justify-between mb-2">
              <div class="text-[#e0e0e0] font-bold text-sm">Google API</div>
              <div class="w-3 h-3 bg-[#00ff00] rounded-full animate-pulse"></div>
            </div>
            <div class="text-[#a0a0a0] text-xs mb-1">Status: Connected</div>
            <div class="text-[#00ffff] text-xs">Sheets API ready</div>
          `;
        } catch (error) {
          statusEl.innerHTML = `
            <div class="flex items-center justify-between mb-2">
              <div class="text-[#e0e0e0] font-bold text-sm">Google API</div>
              <div class="w-3 h-3 bg-[#ff0000] rounded-full animate-pulse"></div>
            </div>
            <div class="text-[#a0a0a0] text-xs mb-1">Status: Error</div>
            <div class="text-[#ff0000] text-xs">Connection failed</div>
          `;
        }
      }

      async testVertexAI() {
        const statusEl = document.getElementById('vertexAiStatus');
        try {
          // Simulate Vertex AI test
          await new Promise(resolve => setTimeout(resolve, 1500));
          
          statusEl.innerHTML = `
            <div class="flex items-center justify-between mb-2">
              <div class="text-[#e0e0e0] font-bold text-sm">Vertex AI</div>
              <div class="w-3 h-3 bg-[#00ff00] rounded-full animate-pulse"></div>
            </div>
            <div class="text-[#a0a0a0] text-xs mb-1">Status: Connected</div>
            <div class="text-[#00ffff] text-xs">AI models loaded</div>
          `;
        } catch (error) {
          statusEl.innerHTML = `
            <div class="flex items-center justify-between mb-2">
              <div class="text-[#e0e0e0] font-bold text-sm">Vertex AI</div>
              <div class="w-3 h-3 bg-[#ff0000] rounded-full animate-pulse"></div>
            </div>
            <div class="text-[#a0a0a0] text-xs mb-1">Status: Error</div>
            <div class="text-[#ff0000] text-xs">Auth failed</div>
          `;
        }
      }

      async testADKAgent() {
        const statusEl = document.getElementById('adkAgenStatus');
        // ADK Agent is external, simulate connection attempt
        setTimeout(() => {
          statusEl.innerHTML = `
            <div class="flex items-center justify-between mb-2">
              <div class="text-[#e0e0e0] font-bold text-sm">ADK Agent</div>
              <div class="w-3 h-3 bg-[#ffaa00] rounded-full animate-pulse"></div>
            </div>
            <div class="text-[#a0a0a0] text-xs mb-1">Status: External</div>
            <div class="text-[#ffaa00] text-xs">Q:\\ADK_AGEN_ts_zEN</div>
          `;
        }, 3000);
      }

      async updateCloudflareStatus() {
        // Cloudflare KV is already working
        setTimeout(() => {
          document.getElementById('totalProducts').textContent = '247';
          document.getElementById('totalCategories').textContent = '12';
          document.getElementById('aiGenerated').textContent = '156';
          document.getElementById('lastUpdate').textContent = new Date().toLocaleTimeString();
        }, 1000);
      }

      setupEventListeners() {
        document.getElementById('refreshCatalog')?.addEventListener('click', () => {
          this.refreshCatalog();
        });

        document.getElementById('exportData')?.addEventListener('click', () => {
          this.exportData();
        });

        document.getElementById('generateCatalog')?.addEventListener('click', () => {
          this.generateAICatalog();
        });

        document.getElementById('viewGrid')?.addEventListener('click', () => {
          this.switchView('grid');
        });

        document.getElementById('viewList')?.addEventListener('click', () => {
          this.switchView('list');
        });
      }

      async loadCatalogData() {
        // Simulate loading catalog data
        setTimeout(() => {
          document.getElementById('catalogLoading').style.display = 'none';
          document.getElementById('catalogGrid').style.display = 'grid';
          this.populateCatalog();
        }, 3000);
      }

      populateCatalog() {
        const sampleProducts = [
          { name: 'AI Assistant Pro', category: 'Software', price: '$299', ai: true },
          { name: 'Cloud Storage Plus', category: 'Services', price: '$19/mo', ai: false },
          { name: 'Smart Analytics', category: 'Software', price: '$149', ai: true },
          { name: 'Web Design Tools', category: 'Digital', price: '$99', ai: true },
          { name: 'API Integration', category: 'Services', price: '$399', ai: false },
          { name: 'Mobile App Kit', category: 'Software', price: '$199', ai: true }
        ];

        const gridEl = document.getElementById('catalogGrid');
        gridEl.innerHTML = sampleProducts.map(product => `
          <div class="bg-[#0a0a0a] border border-[#333333] p-4 rounded-sm hover:border-[#00ffff] transition-all duration-300">
            <div class="flex justify-between items-start mb-2">
              <h4 class="text-[#e0e0e0] text-sm font-bold">${product.name}</h4>
              ${product.ai ? '<span class="text-[#ff6699] text-xs">AI</span>' : ''}
            </div>
            <div class="text-[#a0a0a0] text-xs mb-2">${product.category}</div>
            <div class="text-[#00ffff] text-sm font-bold">${product.price}</div>
          </div>
        `).join('');
      }

      async refreshCatalog() {
        document.getElementById('catalogLoading').style.display = 'block';
        document.getElementById('catalogGrid').style.display = 'none';
        
        // Simulate refresh
        setTimeout(() => {
          document.getElementById('catalogLoading').style.display = 'none';
          document.getElementById('catalogGrid').style.display = 'grid';
          this.populateCatalog();
          
          // Update stats
          document.getElementById('lastUpdate').textContent = new Date().toLocaleTimeString();
        }, 2000);
      }

      async exportData() {
        // Simulate export
        const data = 'Product Name,Category,Price,AI Generated\n';
        const blob = new Blob([data], { type: 'text/csv' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'catalog-export.csv';
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
      }

      async generateAICatalog() {
        const mode = document.getElementById('aiMode').value;
        const category = document.getElementById('categoryFilter').value;
        
        alert(`Generowanie katalogu AI w trybie: ${mode} dla kategorii: ${category}`);
        
        // Trigger refresh after generation
        setTimeout(() => {
          this.refreshCatalog();
          document.getElementById('aiGenerated').textContent = 
            String(Number(document.getElementById('aiGenerated').textContent) + 5);
        }, 1000);
      }

      switchView(view) {
        if (view === 'grid') {
          document.getElementById('catalogGrid').style.display = 'grid';
          document.getElementById('catalogList').style.display = 'none';
        } else {
          document.getElementById('catalogGrid').style.display = 'none';
          document.getElementById('catalogList').style.display = 'block';
        }
      }
    }

    // Initialize when page loads
    document.addEventListener('DOMContentLoaded', () => {
      new WebCatalogManager();
    });
  </script>
</MyBonzoLayout>
