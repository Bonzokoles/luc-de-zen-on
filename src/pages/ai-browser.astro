
---
import BackroomInterface from '@/layouts/BackroomInterface.astro';
import AiHelpAssistant from '@/components/AiHelpAssistant.svelte';
---

<BackroomInterface siteTitle="AI Browser - POLACZEK Agents System">
  <div class="fixed inset-0 bg-[#0f1419]">
    <div class="absolute inset-0 bg-gradient-to-br from-cyan-900/15 via-[#0f1419] to-[#0f1419]"></div>
  </div>

  <section class="backroom-header">
    <div class="backroom-container">
      <h1 class="backroom-title">AI Browser</h1>
      <p class="backroom-description">POLACZEK Agents System</p>
    </div>
  </section>

  <section class="backroom-section">
    <div class="backroom-container">
      <div class="function-container">
        <div class="search-container mb-8">
          <input 
            type="text" 
            class="w-full p-4 bg-surface border border-edge rounded-lg text-lg" 
            id="searchInput"
            placeholder="Wpisz zapytanie... (AI wyszuka i przetłumaczy)"
          >
          <button class="action-btn mt-4 w-full" onclick="performSearch()">🔍 Szukaj</button>
        </div>

        <div class="themed-search-container mb-8 flex gap-4">
          <button class="action-btn-secondary w-full" onclick="themedSearch('business')">💼 Biznes</button>
          <button class="action-btn-secondary w-full" onclick="themedSearch('finance')">💰 Finanse</button>
        </div>

        <div class="advanced-search-container mb-8">
          <h3 class="text-lg font-semibold mb-4">Zaawansowane filtry</h3>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label for="dateRange" class="block text-sm font-medium mb-2">Zakres dat</label>
              <select id="dateRange" class="w-full p-2 bg-surface border border-edge rounded-lg">
                <option value="any">Dowolny</option>
                <option value="day">Ostatnie 24 godziny</option>
                <option value="week">Ostatni tydzień</option>
                <option value="month">Ostatni miesiąc</option>
              </select>
            </div>
            <div>
              <label for="fileType" class="block text-sm font-medium mb-2">Typ pliku</label>
              <select id="fileType" class="w-full p-2 bg-surface border border-edge rounded-lg">
                <option value="any">Dowolny</option>
                <option value="pdf">PDF</option>
                <option value="docx">DOCX</option>
                <option value="xlsx">XLSX</option>
              </select>
            </div>
            <div>
              <label for="siteSearch" class="block text-sm font-medium mb-2">Szukaj w domenie</label>
              <input type="text" id="siteSearch" class="w-full p-2 bg-surface border border-edge rounded-lg" placeholder="np. wikipedia.org">
            </div>
          </div>
        </div>

        <div class="agents-panel grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          <!-- POLACZEK_D - Dyrektor -->
          <div class="agent-card">
            <div class="agent-header">
              <span class="agent-icon">🎯</span>
              <div>
                <div class="agent-name">POLACZEK_D - Dyrektor</div>
                <span class="agent-status status-active">AKTYWNY</span>
              </div>
            </div>
            <div class="agent-description">
              Główny orchestrator agentów AI. Zarządza całym systemem wyszukiwania i koordynuje pracę innych agentów.
            </div>
            <div class="agent-capabilities">
              <span class="capability-tag">Orchestracja</span>
              <span class="capability-tag">Planowanie</span>
              <span class="capability-tag">Koordynacja</span>
            </div>
            <div class="agent-actions">
              <button class="action-btn btn-primary" onclick="activateAgent('POLACZEK_D')">Aktywuj</button>
              <button class="action-btn btn-secondary" onclick="configureAgent('POLACZEK_D')">Konfiguruj</button>
            </div>
          </div>

          <!-- POLACZEK_T - Tłumacz -->
          <div class="agent-card">
            <div class="agent-header">
              <span class="agent-icon">🔄</span>
              <div>
                <div class="agent-name">POLACZEK_T - Tłumacz</div>
                <span class="agent-status status-active">AKTYWNY</span>
              </div>
            </div>
            <div class="agent-description">
              Specjalista od tłumaczeń i lokalizacji. Automatycznie tłumaczy wyniki wyszukiwania na język polski.
            </div>
            <div class="agent-capabilities">
              <span class="capability-tag">Tłumaczenia</span>
              <span class="capability-tag">Lokalizacja</span>
              <span class="capability-tag">Multi-język</span>
            </div>
            <div class="agent-actions">
              <button class="action-btn btn-primary" onclick="activateAgent('POLACZEK_T')">Aktywuj</button>
              <button class="action-btn btn-secondary" onclick="testTranslation()">Test</button>
            </div>
          </div>

          <!-- POLACZEK_B - Bibliotekarz -->
          <div class="agent-card">
            <div class="agent-header">
              <span class="agent-icon">📚</span>
              <div>
                <div class="agent-name">POLACZEK_B - Bibliotekarz</div>
                <span class="agent-status status-busy">ZAJĘTY</span>
              </div>
            </div>
            <div class="agent-description">
              Zarządca bazy wiedzy i dokumentacji. Indeksuje i kategoryzuje wyniki wyszukiwania.
            </div>
            <div class="agent-capabilities">
              <span class="capability-tag">Baza wiedzy</span>
              <span class="capability-tag">Indeksowanie</span>
              <span class="capability-tag">Kategoryzacja</span>
            </div>
            <div class="agent-actions">
              <button class="action-btn btn-primary" onclick="activateAgent('POLACZEK_B')">Aktywuj</button>
              <button class="action-btn btn-secondary" onclick="viewKnowledge()">Baza</button>
            </div>
          </div>

          <!-- POLACZEK_M1 - Manager -->
          <div class="agent-card">
            <div class="agent-header">
              <span class="agent-icon">⚙️</span>
              <div>
                <div class="agent-name">POLACZEK_M1 - Manager</div>
                <span class="agent-status status-active">AKTYWNY</span>
              </div>
            </div>
            <div class="agent-description">
              Koordynator zadań między agentami. Optymalizuje wydajność wyszukiwania i zarządza workflow.
            </div>
            <div class="agent-capabilities">
              <span class="capability-tag">Zarządzanie</span>
              <span class="capability-tag">Workflow</span>
              <span class="capability-tag">Optymalizacja</span>
            </div>
            <div class="agent-actions">
              <button class="action-btn btn-primary" onclick="activateAgent('POLACZEK_M1')">Aktywuj</button>
              <button class="action-btn btn-secondary" onclick="viewWorkflow()">Workflow</button>
            </div>
          </div>
        </div>

        <div class="results-container mt-8" id="resultsContainer" style="display: none;">
          <div class="flex justify-between items-center mb-4">
            <h2 class="text-2xl font-bold">🔍 Wyniki wyszukiwania</h2>
            <div class="flex gap-4">
              <button class="action-btn-secondary" onclick="saveResults()">💾 Zapisz wyniki</button>
              <button class="action-btn-secondary" onclick="exportResults()">📄 Eksportuj</button>
            </div>
          </div>
          <div id="searchResults"></div>
        </div>

        <div class="history-container mt-8">
          <h3 class="text-lg font-semibold mb-4">Historia wyszukiwania</h3>
          <div id="searchHistory" class="space-y-2"></div>
        </div>
      </div>
    </div>
  </section>

  <!-- POLACZEK_T Floating Assistant -->
  <div class="fixed bottom-5 right-5 z-50">
    <button id="polaczekBtn" class="action-btn">🤖 POLACZEK_T</button>
    <div id="polaczekWidget" class="hidden absolute bottom-16 right-0 w-96 bg-surface border border-edge rounded-lg shadow-lg">
      <AiHelpAssistant client:load pageTitle="AI Browser - POLACZEK Agents System" />
    </div>
  </div>

  <script>
    let activeAgents = ['POLACZEK_D', 'POLACZEK_T', 'POLACZEK_M1'];
    let searchHistory = [];

    function themedSearch(theme) {
      const searchInput = document.getElementById('searchInput');
      if (theme === 'business') {
        searchInput.value = 'najnowsze trendy w biznesie, strategie marketingowe, analiza konkurencji';
      } else if (theme === 'finance') {
        searchInput.value = 'analiza rynków finansowych, inwestowanie w akcje, kryptowaluty';
      }
      performSearch();
    }

    async function performSearch() {
      const query = document.getElementById('searchInput').value.trim();
      if (!query) return;

      const dateRange = document.getElementById('dateRange').value;
      const fileType = document.getElementById('fileType').value;
      const siteSearch = document.getElementById('siteSearch').value;

      showLoading();
      
      try {
        // Call enhanced search with POLACZEK agents
        const response = await fetch('/api/agents-search', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            query: query,
            agents: activeAgents,
            translate: true,
            orchestrate: true,
            dateRange: dateRange,
            fileType: fileType,
            siteSearch: siteSearch
          })
        });

        const results = await response.json();
        displayResults(results);
        searchHistory.push({ query, results, timestamp: new Date() });
        displaySearchHistory();
        
      } catch (error) {
        displayError('Błąd wyszukiwania: ' + error.message);
      }
    }

    function showLoading() {
      const container = document.getElementById('resultsContainer');
      container.style.display = 'block';
      container.innerHTML = `
        <div class="loading">
          <div class="spinner"></div>
          <p>🤖 Agenci POLACZEK pracują nad Twoim zapytaniem...</p>
        </div>
      `;
    }

    function displayResults(results) {
      const container = document.getElementById('searchResults');
      
      if (!results.success) {
        displayError(results.error || 'Nieznany błąd');
        return;
      }

      let html = '';
      
      if (results.orchestration) {
        html += `
          <div class="result-item">
            <div class="result-title">🎯 Orchestracja POLACZEK_D</div>
            <div class="result-content">${results.orchestration.plan}</div>
          </div>
        `;
      }

      if (results.search_results) {
        results.search_results.forEach((result, index) => {
          html += `
            <div class="result-item">
              <div class="result-title">📖 Wynik ${index + 1}</div>
              <div class="result-content">
                <strong>Tytuł:</strong> ${result.title}<br>
                <strong>Źródło:</strong> <a href="${result.url}" target="_blank" style="color: #4ecdc4;">${result.url}</a><br>
                <strong>Treść:</strong> ${result.content}
              </div>
            </div>
          `;
        });
      }

      if (results.translation) {
        html += `
          <div class="result-item">
            <div class="result-title">🔄 Tłumaczenie POLACZEK_T</div>
            <div class="result-content">${results.translation}</div>
          </div>
        `;
      }

      container.innerHTML = html;
    }

    function displayError(error) {
      document.getElementById('searchResults').innerHTML = `
        <div class="result-item" style="border-left: 4px solid #ff6b6b;">
          <div class="result-title">❌ Błąd</div>
          <div class="result-content">${error}</div>
        </div>
      `;
    }

    function activateAgent(agentId) {
      if (!activeAgents.includes(agentId)) {
        activeAgents.push(agentId);
      }
      updateAgentStatus(agentId, 'active');
      console.log(`Agent ${agentId} activated`);
    }

    function updateAgentStatus(agentId, status) {
      // Update UI to reflect agent status
      const statusClass = status === 'active' ? 'status-active' : 'status-busy';
      const statusText = status === 'active' ? 'AKTYWNY' : 'ZAJĘTY';
      
      // Find and update status element
      document.querySelectorAll('.agent-card').forEach(card => {
        if (card.innerHTML.includes(agentId)) {
          const statusElement = card.querySelector('.agent-status');
          statusElement.className = `agent-status ${statusClass}`;
          statusElement.textContent = statusText;
        }
      });
    }

    function toggleTranslator() {
      const panel = document.getElementById('translationPanel');
      panel.classList.toggle('active');
    }

    async function translateText() {
      const text = document.getElementById('translateInput').value;
      const sourceLang = document.getElementById('sourceLang').value;
      const targetLang = document.getElementById('targetLang').value;
      
      if (!text.trim()) return;

      try {
        const response = await fetch('/api/polaczek-t', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            text: text,
            source: sourceLang,
            target: targetLang
          })
        });

        const result = await response.json();
        
        if (result.success) {
          document.getElementById('translationResult').innerHTML = `
            <strong>Tłumaczenie:</strong><br>
            ${result.response}
          `;
        } else {
          document.getElementById('translationResult').innerHTML = `
            <span style="color: #ff6b6b;">Błąd: ${result.error}</span>
          `;
        }
      } catch (error) {
        document.getElementById('translationResult').innerHTML = `
          <span style="color: #ff6b6b;">Błąd połączenia: ${error.message}</span>
        `;
      }
    }

    function testTranslation() {
      toggleTranslator();
      document.getElementById('translateInput').value = 'Hello, this is a test translation.';
    }

    function configureAgent(agentId) {
      window.open(`/admin/agent-config?agent=${agentId}`, '_blank');
    }

    function viewKnowledge() {
      window.open('/admin/knowledge-base', '_blank');
    }

    function viewWorkflow() {
      window.open('/admin/workflow-manager', '_blank');
    }

    function displaySearchHistory() {
      const historyContainer = document.getElementById('searchHistory');
      historyContainer.innerHTML = '';
      searchHistory.forEach(item => {
        const historyItem = document.createElement('div');
        historyItem.className = 'history-item p-2 border-b border-edge';
        historyItem.innerHTML = `
          <div class="font-semibold">${item.query}</div>
          <div class="text-xs text-gray-400">${item.timestamp.toLocaleString()}</div>
        `;
        historyContainer.appendChild(historyItem);
      });
    }

    function saveResults() {
      // For now, just log to console
      console.log("Saving results...", currentResults);
      alert("Funkcjonalność zapisywania wyników wkrótce!");
    }

    function exportResults() {
      // For now, just log to console
      console.log("Exporting results...", currentResults);
      alert("Funkcjonalność eksportowania wyników wkrótce!");
    }

    // Enter key search
    document.getElementById('searchInput').addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        performSearch();
      }
    });

    document.getElementById('translateInput').addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        translateText();
      }
    });

    // Initialize
    console.log('🤖 AI Browser with POLACZEK Agents System initialized');
    console.log('Active agents:', activeAgents);

    // POLACZEK_T Assistant
    const polaczekBtn = document.getElementById('polaczekBtn');
    const polaczekWidget = document.getElementById('polaczekWidget');

    polaczekBtn.addEventListener('click', () => {
      polaczekWidget.classList.toggle('hidden');
    });
  </script>
</BackroomInterface>
