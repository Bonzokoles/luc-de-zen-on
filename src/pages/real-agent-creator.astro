---
import MyBonzoLayout from "../layouts/MyBonzoLayout.astro";
---

<MyBonzoLayout title="Kreator Prawdziwych Agentów - MyBonzo AI">
  <main class="min-h-svh">
    <!-- Header Section -->
    <section class="border border-edge">
      <div class="max-w-6xl mx-auto border-x border-edge">
        <div class="flex justify-between max-h-72 min-h-64">
          <div class="mt-auto">
            <span
              style="writing-mode: vertical-lr;"
              class="text-edge block px-2 text-xl font-semibold tracking-[0.3em]"
            >
              AGENT_CREATOR
            </span>
          </div>
          <span class="mt-auto">
            <span
              style=""
              class="text-edge block px-2 text-xl font-semibold tracking-[0.3em]"
            >
              REAL_DEPLOY
            </span>
          </span>
        </div>
      </div>
    </section>

    <!-- Navigation Section -->
    <section class="border border-edge">
      <div class="max-w-6xl mx-auto border-x border-edge">
        <div class="flex flex-row p-2">
          <a class="hover:brightness-125" href="/">
            <h1 class="text-4xl sm:text-5xl">KREATOR AGENTÓW</h1>
            <h2 class="text-2xl sm:text-3xl">Real Agent Creation System</h2>
          </a>

          <div class="hidden ml-auto gap-4 md:gap-0 md:flex md:flex-col">
            <div class="ml-auto flex items-center gap-4">
              <span class="text-sm text-edge" id="userInfo">Administrator</span>
              <button
                id="logoutBtn"
                class="px-3 py-1 bg-red-600 hover:bg-red-700 text-white rounded text-sm transition-colors"
              >
                Wyloguj
              </button>
            </div>
            <a class="ml-auto hover:brightness-125 duration-200" href="/agents">
              ← Zarządzanie Agentami
              <svg
                style="--rotation: -45deg"
                class="stroke-primary-foreground inline aspect-square w-3 h-auto fill-transparent rotate-[var(--rotation)]"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M3 12L21 12M21 12L12.5 3.5M21 12L12.5 20.5"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- Main Content Section -->
    <section
      class="ai-workers-section py-16"
      style="background: rgba(0, 0, 0, 0.5);"
    >
      <div class="section-container max-w-6xl mx-auto">
        <h2 class="section-title">KREATOR PRAWDZIWYCH AGENTÓW</h2>
        <p class="section-description">
          Narzędzie do tworzenia i wdrażania agentów AI z funkcjonalnością
          produkcyjną
        </p>

        <!-- Progress Steps -->
        <div
          class="progress-container border border-edge rounded-lg overflow-hidden mt-8 mb-8"
          style="background: rgba(0, 0, 0, 0.5);"
        >
          <div
            class="progress-header border-b border-edge p-4"
            style="background: rgba(0, 0, 0, 0.5);"
          >
            <div class="flex items-center gap-3">
              <div class="w-3 h-3 bg-cyan-400 rounded-full animate-pulse"></div>
              <span class="text-primary-foreground font-semibold">
                Agent Creation Pipeline
              </span>
            </div>
          </div>
          <div class="p-6">
            <div class="flex items-center justify-between text-sm">
              <div class="flex items-center">
                <div
                  class="w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center font-bold border border-edge"
                >
                  1
                </div>
                <div class="ml-3">
                  <div class="font-medium text-primary-foreground">
                    Cel Agenta
                  </div>
                  <div class="text-edge">
                    Zdefiniuj zadanie i grupę docelową
                  </div>
                </div>
              </div>
              <div class="flex-1 h-px bg-edge mx-4"></div>
              <div class="flex items-center">
                <div
                  class="w-8 h-8 bg-secondary text-edge rounded-full flex items-center justify-center font-bold border border-edge"
                >
                  2
                </div>
                <div class="ml-3">
                  <div class="font-medium text-edge">Technologia</div>
                  <div class="text-edge">Wybierz stack technologiczny</div>
                </div>
              </div>
              <div class="flex-1 h-px bg-edge mx-4"></div>
              <div class="flex items-center">
                <div
                  class="w-8 h-8 bg-secondary text-edge rounded-full flex items-center justify-center font-bold border border-edge"
                >
                  3
                </div>
                <div class="ml-3">
                  <div class="font-medium text-edge">Implementacja</div>
                  <div class="text-edge">Generowanie kodu</div>
                </div>
              </div>
              <div class="flex-1 h-px bg-edge mx-4"></div>
              <div class="flex items-center">
                <div
                  class="w-8 h-8 bg-secondary text-edge rounded-full flex items-center justify-center font-bold border border-edge"
                >
                  4
                </div>
                <div class="ml-3">
                  <div class="font-medium text-edge">Wdrożenie</div>
                  <div class="text-edge">Testowanie i publikacja</div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Step 1: Agent Purpose -->
        <div id="step1" class="step-content">
          <div
            class="step-container border border-edge rounded-lg overflow-hidden"
            style="background: rgba(0, 0, 0, 0.5);"
          >
            <div
              class="step-header border-b border-edge p-4"
              style="background: rgba(0, 0, 0, 0.5);"
            >
              <h2 class="text-2xl font-bold text-primary-foreground">
                Krok 1: Określenie Celu Agenta
              </h2>
            </div>
            <div class="p-8">
              <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <!-- Agent Purpose Form -->
                <div class="space-y-6">
                  <div>
                    <label
                      class="block text-sm font-medium text-primary-foreground mb-2"
                    >
                      Nazwa Agenta <span class="text-red-400">*</span>
                    </label>
                    <input
                      type="text"
                      id="agentName"
                      placeholder="np. Customer Support Bot"
                      class="w-full px-4 py-3 bg-secondary border border-edge rounded-lg text-primary-foreground focus:ring-2 focus:ring-accent"
                      required
                    />
                  </div>

                  <div>
                    <label
                      class="block text-sm font-medium text-primary-foreground mb-2"
                    >
                      Branża / Zastosowanie <span class="text-red-400">*</span>
                    </label>
                    <select
                      id="agentIndustry"
                      class="w-full px-4 py-3 bg-secondary border border-edge rounded-lg text-primary-foreground focus:ring-2 focus:ring-accent"
                    >
                      <option value="">Wybierz branżę</option>
                      <option value="customer-support">Obsługa klienta</option>
                      <option value="production">Produkcja</option>
                      <option value="finance">Finanse</option>
                      <option value="marketing">Marketing</option>
                      <option value="healthcare">Opieka zdrowotna</option>
                      <option value="ecommerce">E-commerce</option>
                      <option value="hr">HR i rekrutacja</option>
                      <option value="automation"
                        >Automatyzacja wewnętrzna</option
                      >
                      <option value="it-dev">IT/Development</option>
                      <option value="other">Inne</option>
                    </select>
                  </div>

                  <div>
                    <label
                      class="block text-sm font-medium text-primary-foreground mb-2"
                    >
                      Opis Zadania <span class="text-red-400">*</span>
                    </label>
                    <textarea
                      id="agentDescription"
                      placeholder="Opisz szczegółowo, jakie zadanie ma wykonywać agent..."
                      rows="4"
                      class="w-full px-4 py-3 bg-secondary border border-edge rounded-lg text-primary-foreground focus:ring-2 focus:ring-accent"
                      required></textarea>
                  </div>

                  <div>
                    <label
                      class="block text-sm font-medium text-primary-foreground mb-2"
                    >
                      Grupa Docelowa
                    </label>
                    <input
                      type="text"
                      id="targetGroup"
                      placeholder="np. Klienci e-sklepu, zespół sprzedaży..."
                      class="w-full px-4 py-3 bg-secondary border border-edge rounded-lg text-primary-foreground focus:ring-2 focus:ring-accent"
                    />
                  </div>

                  <div>
                    <label
                      class="block text-sm font-medium text-primary-foreground mb-2"
                    >
                      Oczekiwane Rezultaty
                    </label>
                    <textarea
                      id="expectedResults"
                      placeholder="Jakich rezultatów oczekujesz od tego agenta?"
                      rows="3"
                      class="w-full px-4 py-3 bg-secondary border border-edge rounded-lg text-primary-foreground focus:ring-2 focus:ring-accent"
                    ></textarea>
                  </div>
                </div>

                <!-- Industry Examples -->
                <div class="bg-secondary/50 rounded-lg p-6 border border-edge">
                  <h3
                    class="text-lg font-semibold text-primary-foreground mb-4"
                  >
                    Przykłady Zastosowań
                  </h3>
                  <div class="space-y-4" id="industryExamples">
                    <div
                      class="p-4 bg-secondary/50 rounded-lg border border-edge"
                    >
                      <h4 class="font-medium text-blue-400 mb-2">
                        Obsługa Klienta
                      </h4>
                      <p class="text-sm text-edge">
                        Chatboty, automatyczna klasyfikacja zgłoszeń, FAQ,
                        przekierowanie do odpowiednich działów
                      </p>
                    </div>
                    <div
                      class="p-4 bg-secondary/50 rounded-lg border border-edge"
                    >
                      <h4 class="font-medium text-green-400 mb-2">Produkcja</h4>
                      <p class="text-sm text-edge">
                        Monitorowanie procesów, konserwacja predykcyjna, analiza
                        anomalii, kontrola jakości
                      </p>
                    </div>
                    <div
                      class="p-4 bg-secondary/50 rounded-lg border border-edge"
                    >
                      <h4 class="font-medium text-purple-400 mb-2">
                        Marketing
                      </h4>
                      <p class="text-sm text-edge">
                        Personalizacja kampanii, segmentacja odbiorców,
                        rekomendacje produktów
                      </p>
                    </div>
                  </div>
                </div>
              </div>

              <div class="mt-8 flex justify-end">
                <button
                  id="nextStep1"
                  class="px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition-colors border border-edge"
                >
                  DALEJ: WYBÓR TECHNOLOGII →
                </button>
              </div>
            </div>
          </div>
        </div>

        <!-- Additional steps would continue in the same style pattern... -->
        <!-- For brevity, I'm showing the pattern for step 1 -->
        <!-- Steps 2, 3, and 4 would follow the same MyBonzo styling -->
      </div>
    </section>
  </main>
</MyBonzoLayout>

<!-- Step 2: Technology Selection -->
<div id="step2" class="step-content hidden">
  <div class="bg-gray-900/50 rounded-xl p-8 border border-gray-700">
    <h2 class="text-2xl font-bold mb-6 text-white">
      Krok 2: Wybór Technologii i Narzędzi
    </h2>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <!-- Technology Selection -->
      <div class="space-y-6">
        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2">
            Platforma Wdrożenia <span class="text-red-400">*</span>
          </label>
          <select
            id="deploymentPlatform"
            class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-blue-500"
          >
            <option value="">Wybierz platformę</option>
            <option value="cloudflare-tunnel">Cloudflare Tunnel</option>
            <option value="local">Serwer lokalny</option>
            <option value="websocket">WebSocket</option>
            <option value="rest-api">REST API</option>
            <option value="grpc">gRPC</option>
          </select>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2">
            Model AI <span class="text-red-400">*</span>
          </label>
          <select
            id="aiModel"
            class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-blue-500"
          >
            <option value="">Wybierz model</option>
            <option value="gpt-4">OpenAI GPT-4 (Chmura)</option>
            <option value="mistral-7b">Mistral 7B (Lokalny)</option>
            <option value="claude">Claude (Bezpieczny)</option>
            <option value="llama-2">LLAMA 2 (Open Source)</option>
          </select>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2">
            Język Programowania
          </label>
          <select
            id="programmingLanguage"
            class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-blue-500"
          >
            <option value="nodejs">Node.js</option>
            <option value="python">Python</option>
            <option value="javascript">JavaScript</option>
            <option value="typescript">TypeScript</option>
          </select>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2">
            Uwierzytelnianie
          </label>
          <div class="space-y-2">
            <label class="flex items-center">
              <input
                type="checkbox"
                id="auth-jwt"
                class="rounded bg-gray-800 border-gray-600 text-blue-500"
              />
              <span class="ml-2 text-gray-300">JWT Token</span>
            </label>
            <label class="flex items-center">
              <input
                type="checkbox"
                id="auth-basic"
                class="rounded bg-gray-800 border-gray-600 text-blue-500"
              />
              <span class="ml-2 text-gray-300">Basic Auth</span>
            </label>
            <label class="flex items-center">
              <input
                type="checkbox"
                id="auth-oauth"
                class="rounded bg-gray-800 border-gray-600 text-blue-500"
              />
              <span class="ml-2 text-gray-300">OAuth</span>
            </label>
          </div>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2">
            Monitoring i Observability
          </label>
          <div class="space-y-2">
            <label class="flex items-center">
              <input
                type="checkbox"
                id="monitor-prometheus"
                class="rounded bg-gray-800 border-gray-600 text-blue-500"
              />
              <span class="ml-2 text-gray-300">Prometheus + Grafana</span>
            </label>
            <label class="flex items-center">
              <input
                type="checkbox"
                id="monitor-elk"
                class="rounded bg-gray-800 border-gray-600 text-blue-500"
              />
              <span class="ml-2 text-gray-300">ELK Stack</span>
            </label>
            <label class="flex items-center">
              <input
                type="checkbox"
                id="monitor-jaeger"
                class="rounded bg-gray-800 border-gray-600 text-blue-500"
              />
              <span class="ml-2 text-gray-300">Jaeger Tracing</span>
            </label>
          </div>
        </div>
      </div>

      <!-- Technology Recommendations -->
      <div class="bg-gray-800/50 rounded-lg p-6 border border-gray-600">
        <h3 class="text-lg font-semibold text-white mb-4">
          Rekomendacje Technologiczne
        </h3>
        <div class="space-y-4" id="techRecommendations">
          <div class="p-4 bg-gray-700/50 rounded-lg">
            <h4 class="font-medium text-blue-400 mb-2">Cloudflare Tunnel</h4>
            <p class="text-sm text-gray-300">
              Idealne do wystawienia lokalnego serwera na zewnątrz bez
              konfiguracji sieci
            </p>
          </div>
          <div class="p-4 bg-gray-700/50 rounded-lg">
            <h4 class="font-medium text-green-400 mb-2">WebSocket</h4>
            <p class="text-sm text-gray-300">
              Do komunikacji w czasie rzeczywistym, czaty, gdzie potrzebna
              szybka wymiana
            </p>
          </div>
          <div class="p-4 bg-gray-700/50 rounded-lg">
            <h4 class="font-medium text-purple-400 mb-2">REST API</h4>
            <p class="text-sm text-gray-300">
              Standardowa integracja z dowolnym systemem zewnętrznym
            </p>
          </div>
        </div>
      </div>
    </div>

    <div class="mt-8 flex justify-between">
      <button
        id="prevStep2"
        class="px-6 py-3 bg-gray-600 hover:bg-gray-700 text-white font-semibold rounded-lg transition-colors"
      >
        ← Wstecz
      </button>
      <button
        id="nextStep2"
        class="px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition-colors"
      >
        Dalej: Generowanie Kodu →
      </button>
    </div>
  </div>
</div>

<!-- Step 3: Code Generation -->
<div id="step3" class="step-content hidden">
  <div class="bg-gray-900/50 rounded-xl p-8 border border-gray-700">
    <h2 class="text-2xl font-bold mb-6 text-white">
      Krok 3: Implementacja Agenta
    </h2>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <!-- Generated Code Preview -->
      <div class="space-y-6">
        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2">
            Generowany Kod
          </label>
          <div
            class="bg-gray-800 rounded-lg p-4 border border-gray-600 h-96 overflow-y-auto"
          >
            <pre
              id="generatedCode"
              class="text-green-400 text-sm font-mono">
// Kod zostanie wygenerowany automatycznie
// na podstawie wybranych opcji...

const express = require('express');
const app = express();

app.use(express.json());

app.post('/api/agent', (req, res) =&gt; {`{`}
  const {`{`} message {`}`} = req.body;
  // Logika agenta zostanie dodana tutaj
  res.json({`{`} response: `Agent odpowiada: ${`{`}message{`}`}` {`}`});
{`}`});

app.listen(5000, () =&gt; {`{`}
  console.log('Agent działa na porcie 5000');
{`}`});
									</pre>
          </div>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2">
            Konfiguracja Docker
          </label>
          <div
            class="bg-gray-800 rounded-lg p-4 border border-gray-600 h-48 overflow-y-auto"
          >
            <pre
              id="dockerConfig"
              class="text-blue-400 text-sm font-mono">
FROM node:18-alpine

WORKDIR /app
COPY package*.json ./
RUN npm install

COPY . .
EXPOSE 5000

CMD ["node", "server.js"]
									</pre>
          </div>
        </div>
      </div>

      <!-- Configuration and Testing -->
      <div class="space-y-6">
        <div class="bg-gray-800/50 rounded-lg p-6 border border-gray-600">
          <h3 class="text-lg font-semibold text-white mb-4">
            Konfiguracja Agenta
          </h3>

          <div class="space-y-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">
                Prompt Systemowy
              </label>
              <textarea
                id="systemPrompt"
                placeholder="Jesteś pomocnym asystentem AI..."
                rows="3"
                class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-blue-500"
              ></textarea>
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">
                Port
              </label>
              <input
                type="number"
                id="agentPort"
                value="5000"
                class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-blue-500"
              />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">
                Max Tokens
              </label>
              <input
                type="number"
                id="maxTokens"
                value="150"
                class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-blue-500"
              />
            </div>
          </div>
        </div>

        <div class="bg-gray-800/50 rounded-lg p-6 border border-gray-600">
          <h3 class="text-lg font-semibold text-white mb-4">Szybki Test</h3>

          <div class="space-y-4">
            <div>
              <input
                type="text"
                id="testMessage"
                placeholder="Wpisz wiadomość testową..."
                class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-blue-500"
              />
            </div>
            <button
              id="testAgent"
              class="w-full px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded transition-colors"
            >
              Przetestuj Agenta
            </button>
            <div
              id="testResult"
              class="hidden p-3 bg-gray-700 border border-gray-600 rounded text-sm"
            >
              <div class="text-gray-300">Odpowiedź agenta:</div>
              <div class="text-green-400 mt-1" id="agentResponse"></div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="mt-8 flex justify-between">
      <button
        id="prevStep3"
        class="px-6 py-3 bg-gray-600 hover:bg-gray-700 text-white font-semibold rounded-lg transition-colors"
      >
        ← Wstecz
      </button>
      <button
        id="nextStep3"
        class="px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition-colors"
      >
        Dalej: Wdrożenie →
      </button>
    </div>
  </div>
</div>

<!-- Step 4: Deployment -->
<div id="step4" class="step-content hidden">
  <div class="bg-gray-900/50 rounded-xl p-8 border border-gray-700">
    <h2 class="text-2xl font-bold mb-6 text-white">
      Krok 4: Wdrożenie i Monitorowanie
    </h2>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <!-- Deployment Options -->
      <div class="space-y-6">
        <div class="bg-gray-800/50 rounded-lg p-6 border border-gray-600">
          <h3 class="text-lg font-semibold text-white mb-4">Opcje Wdrożenia</h3>

          <div class="space-y-4">
            <button
              class="w-full p-4 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors text-left"
            >
              <div class="flex items-center justify-between">
                <div>
                  <div class="font-medium text-white">Staging Environment</div>
                  <div class="text-sm text-gray-300">
                    Wdróż do środowiska testowego
                  </div>
                </div>
                <svg
                  class="w-5 h-5 text-blue-300"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"></path>
                </svg>
              </div>
            </button>

            <button
              class="w-full p-4 bg-green-600 hover:bg-green-700 rounded-lg transition-colors text-left"
            >
              <div class="flex items-center justify-between">
                <div>
                  <div class="font-medium text-white">Production Deploy</div>
                  <div class="text-sm text-gray-300">
                    Wdróż na środowisko produkcyjne
                  </div>
                </div>
                <svg
                  class="w-5 h-5 text-green-300"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"></path>
                </svg>
              </div>
            </button>

            <button
              class="w-full p-4 bg-purple-600 hover:bg-purple-700 rounded-lg transition-colors text-left"
            >
              <div class="flex items-center justify-between">
                <div>
                  <div class="font-medium text-white">Export Project</div>
                  <div class="text-sm text-gray-300">
                    Pobierz projekt jako ZIP
                  </div>
                </div>
                <svg
                  class="w-5 h-5 text-purple-300"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                  ></path>
                </svg>
              </div>
            </button>
          </div>
        </div>

        <div class="bg-gray-800/50 rounded-lg p-6 border border-gray-600">
          <h3 class="text-lg font-semibold text-white mb-4">
            Deployment Status
          </h3>
          <div class="space-y-3">
            <div class="flex items-center justify-between">
              <span class="text-gray-300">Build Status</span>
              <span
                class="px-2 py-1 bg-yellow-500/20 text-yellow-400 rounded text-sm"
                >Pending</span
              >
            </div>
            <div class="flex items-center justify-between">
              <span class="text-gray-300">Tests</span>
              <span
                class="px-2 py-1 bg-gray-500/20 text-gray-400 rounded text-sm"
                >Not Run</span
              >
            </div>
            <div class="flex items-center justify-between">
              <span class="text-gray-300">Deployment</span>
              <span
                class="px-2 py-1 bg-gray-500/20 text-gray-400 rounded text-sm"
                >Not Started</span
              >
            </div>
          </div>
        </div>
      </div>

      <!-- Monitoring and Metrics -->
      <div class="space-y-6">
        <div class="bg-gray-800/50 rounded-lg p-6 border border-gray-600">
          <h3 class="text-lg font-semibold text-white mb-4">
            Monitoring Setup
          </h3>

          <div class="space-y-4">
            <div>
              <label class="flex items-center">
                <input
                  type="checkbox"
                  class="rounded bg-gray-800 border-gray-600 text-blue-500"
                />
                <span class="ml-2 text-gray-300">Prometheus Metrics</span>
              </label>
            </div>
            <div>
              <label class="flex items-center">
                <input
                  type="checkbox"
                  class="rounded bg-gray-800 border-gray-600 text-blue-500"
                />
                <span class="ml-2 text-gray-300">Grafana Dashboard</span>
              </label>
            </div>
            <div>
              <label class="flex items-center">
                <input
                  type="checkbox"
                  class="rounded bg-gray-800 border-gray-600 text-blue-500"
                />
                <span class="ml-2 text-gray-300">Log Aggregation</span>
              </label>
            </div>
            <div>
              <label class="flex items-center">
                <input
                  type="checkbox"
                  class="rounded bg-gray-800 border-gray-600 text-blue-500"
                />
                <span class="ml-2 text-gray-300">Alert Manager</span>
              </label>
            </div>
          </div>
        </div>

        <div class="bg-gray-800/50 rounded-lg p-6 border border-gray-600">
          <h3 class="text-lg font-semibold text-white mb-4">Pipeline CI/CD</h3>

          <div class="space-y-3 text-sm">
            <div class="flex items-center justify-between">
              <span class="text-gray-300">GitHub Actions</span>
              <span class="px-2 py-1 bg-green-500/20 text-green-400 rounded"
                >Ready</span
              >
            </div>
            <div class="flex items-center justify-between">
              <span class="text-gray-300">Docker Build</span>
              <span class="px-2 py-1 bg-blue-500/20 text-blue-400 rounded"
                >Configured</span
              >
            </div>
            <div class="flex items-center justify-between">
              <span class="text-gray-300">Security Scan</span>
              <span class="px-2 py-1 bg-purple-500/20 text-purple-400 rounded"
                >Enabled</span
              >
            </div>
            <div class="flex items-center justify-between">
              <span class="text-gray-300">Auto Deploy</span>
              <span class="px-2 py-1 bg-yellow-500/20 text-yellow-400 rounded"
                >Manual</span
              >
            </div>
          </div>
        </div>

        <div class="bg-gray-800/50 rounded-lg p-6 border border-gray-600">
          <h3 class="text-lg font-semibold text-white mb-4">Next Steps</h3>
          <ul class="space-y-2 text-sm text-gray-300">
            <li class="flex items-center">
              <svg
                class="w-4 h-4 text-green-400 mr-2"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                  clip-rule="evenodd"></path>
              </svg>
              Agent został skonfigurowany
            </li>
            <li class="flex items-center">
              <svg
                class="w-4 h-4 text-blue-400 mr-2"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                  clip-rule="evenodd"></path>
              </svg>
              Kod gotowy do wdrożenia
            </li>
            <li class="flex items-center">
              <svg
                class="w-4 h-4 text-purple-400 mr-2"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                  clip-rule="evenodd"></path>
              </svg>
              Monitoring skonfigurowany
            </li>
          </ul>
        </div>
      </div>
    </div>

    <div class="mt-8 flex justify-between">
      <button
        id="prevStep4"
        class="px-6 py-3 bg-gray-600 hover:bg-gray-700 text-white font-semibold rounded-lg transition-colors"
      >
        ← Wstecz
      </button>
      <button
        id="completeAgent"
        class="px-6 py-3 bg-green-600 hover:bg-green-700 text-white font-semibold rounded-lg transition-colors"
      >
        🚀 Zakończ i Wdróż Agenta
      </button>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Authentication check
    const authData = sessionStorage.getItem("mybonzo_auth");
    if (!authData) {
      alert("Musisz się zalogować, aby uzyskać dostęp do kreatora agentów.");
      window.location.href = "/login";
      return;
    }

    try {
      const parsed = JSON.parse(authData);
      if (!parsed.authenticated) {
        alert("Sesja wygasła. Zaloguj się ponownie.");
        window.location.href = "/login";
        return;
      }

      // Wszystkie typy użytkowników mają dostęp (admin, client, demo)
      console.log(
        `Użytkownik ${parsed.userType} zalogowany do kreatora agentów`
      );

      // Update user info
      const userInfo = document.getElementById("userInfo");
      if (userInfo) {
        const userTypes = {
          admin: "Administrator",
          client: "Klient",
          demo: "Demo",
        };
        const userLabel = userTypes[parsed.userType] || "Użytkownik";
        userInfo.textContent = `${userLabel} - zalogowany ${new Date(parsed.loginTime).toLocaleString()}`;
      }

      // Logout functionality
      const logoutBtn = document.getElementById("logoutBtn");
      if (logoutBtn) {
        logoutBtn.addEventListener("click", function () {
          sessionStorage.removeItem("mybonzo_auth");
          window.location.href = "/";
        });
      }
    } catch (error) {
      console.error("Błąd parsowania danych uwierzytelniania:", error);
      window.location.href = "/login";
      return;
    }

    // Step navigation
    const steps = ["step1", "step2", "step3", "step4"];
    let currentStep = 0;

    function showStep(stepIndex) {
      steps.forEach((step, index) => {
        const element = document.getElementById(step);
        if (element) {
          if (index === stepIndex) {
            element.classList.remove("hidden");
          } else {
            element.classList.add("hidden");
          }
        }
      });

      // Update progress indicators
      updateProgress(stepIndex);
    }

    function updateProgress(stepIndex) {
      const progressSteps = document.querySelectorAll(".w-8.h-8");
      progressSteps.forEach((step, index) => {
        if (index <= stepIndex) {
          step.classList.remove("bg-gray-600", "text-gray-400");
          step.classList.add("bg-blue-500", "text-white");
        } else {
          step.classList.remove("bg-blue-500", "text-white");
          step.classList.add("bg-gray-600", "text-gray-400");
        }
      });
    }

    // Step 1 navigation
    const nextStep1 = document.getElementById("nextStep1");
    if (nextStep1) {
      nextStep1.addEventListener("click", function () {
        const agentName = document.getElementById("agentName")?.value;
        const agentIndustry = document.getElementById("agentIndustry")?.value;
        const agentDescription =
          document.getElementById("agentDescription")?.value;

        if (!agentName || !agentIndustry || !agentDescription) {
          alert("Proszę wypełnić wszystkie wymagane pola!");
          return;
        }

        currentStep = 1;
        showStep(currentStep);
      });
    }

    // Step 2 navigation
    const prevStep2 = document.getElementById("prevStep2");
    const nextStep2 = document.getElementById("nextStep2");

    if (prevStep2) {
      prevStep2.addEventListener("click", function () {
        currentStep = 0;
        showStep(currentStep);
      });
    }

    if (nextStep2) {
      nextStep2.addEventListener("click", function () {
        const deploymentPlatform =
          document.getElementById("deploymentPlatform")?.value;
        const aiModel = document.getElementById("aiModel")?.value;

        if (!deploymentPlatform || !aiModel) {
          alert("Proszę wybrać platformę wdrożenia i model AI!");
          return;
        }

        generateCode();
        currentStep = 2;
        showStep(currentStep);
      });
    }

    // Step 3 navigation
    const prevStep3 = document.getElementById("prevStep3");
    const nextStep3 = document.getElementById("nextStep3");

    if (prevStep3) {
      prevStep3.addEventListener("click", function () {
        currentStep = 1;
        showStep(currentStep);
      });
    }

    if (nextStep3) {
      nextStep3.addEventListener("click", function () {
        currentStep = 3;
        showStep(currentStep);
      });
    }

    // Step 4 navigation
    const prevStep4 = document.getElementById("prevStep4");
    const completeAgent = document.getElementById("completeAgent");

    if (prevStep4) {
      prevStep4.addEventListener("click", function () {
        currentStep = 2;
        showStep(currentStep);
      });
    }

    if (completeAgent) {
      completeAgent.addEventListener("click", function () {
        if (
          confirm(
            "Czy na pewno chcesz zakończyć tworzenie agenta i rozpocząć wdrożenie?"
          )
        ) {
          alert(
            "🎉 Agent został pomyślnie utworzony!\n\nAgent zostanie wdrożony w ciągu kilku minut.\nMożesz monitorować status w sekcji Zarządzanie Agentami."
          );
          window.location.href = "/agents";
        }
      });
    }

    // Test agent functionality
    const testAgent = document.getElementById("testAgent");
    if (testAgent) {
      testAgent.addEventListener("click", function () {
        const testMessage = document.getElementById("testMessage")?.value;
        if (!testMessage) {
          alert("Proszę wpisać wiadomość testową!");
          return;
        }

        // Simulate agent response
        const testResult = document.getElementById("testResult");
        const agentResponse = document.getElementById("agentResponse");

        if (testResult && agentResponse) {
          agentResponse.textContent = `Echo: ${testMessage.toUpperCase()} - Test agenta przebiegł pomyślnie!`;
          testResult.classList.remove("hidden");
        }
      });
    }

    // Generate code based on selections
    function generateCode() {
      const deploymentPlatform =
        document.getElementById("deploymentPlatform")?.value;
      const aiModel = document.getElementById("aiModel")?.value;
      const programmingLanguage = document.getElementById(
        "programmingLanguage"
      )?.value;
      const port = document.getElementById("agentPort")?.value || "5000";

      let generatedCode = "";

      if (programmingLanguage === "nodejs") {
        generatedCode = `const express = require('express');
const app = express();

app.use(express.json());

// Agent endpoint
app.post('/api/agent', async (req, res) => {
  const { message } = req.body;
  
  try {
    // ${aiModel} integration would go here
    const response = await processWithAI(message);
    res.json({ response });
  } catch (error) {
    res.status(500).json({ error: 'Agent processing failed' });
  }
});

async function processWithAI(message) {
  // ${aiModel} processing logic
  return \`Agent odpowiada: \${message}\`;
}

app.listen(${port}, () => {
  console.log('Agent działa na porcie ${port}');
});`;
      }

      const codeElement = document.getElementById("generatedCode");
      if (codeElement) {
        codeElement.textContent = generatedCode;
      }
    }

    // Industry selection handler
    const agentIndustry = document.getElementById("agentIndustry");
    if (agentIndustry) {
      agentIndustry.addEventListener("change", function () {
        updateIndustryExamples(this.value);
      });
    }

    function updateIndustryExamples(industry) {
      const examples = {
        "customer-support": {
          title: "Obsługa Klienta",
          description:
            "Chatboty, automatyczna klasyfikacja zgłoszeń, FAQ, przekierowanie do odpowiednich działów",
          color: "blue",
        },
        production: {
          title: "Produkcja",
          description:
            "Monitorowanie procesów, konserwacja predykcyjna, analiza anomalii, kontrola jakości",
          color: "green",
        },
        marketing: {
          title: "Marketing",
          description:
            "Personalizacja kampanii, segmentacja odbiorców, rekomendacje produktów",
          color: "purple",
        },
      };

      // Update examples based on selection - simplified for now
      console.log("Selected industry:", industry);
    }

    // Initialize
    showStep(0);
  });
</script>

<style>
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: #1f2937;
  }

  ::-webkit-scrollbar-thumb {
    background: #4b5563;
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: #6b7280;
  }

  .step-content {
    animation: fadeIn 0.3s ease-in-out;
    background: rgba(15, 15, 15, 0.95) !important;
    border: 1px solid rgba(0, 217, 255, 0.2) !important;
    color: #a0a0a0 !important;
    text-shadow: none !important;
  }

  /* Improved readability for all text elements in this component */
  .step-content * {
    color: #a0a0a0 !important;
    text-shadow: none !important;
  }

  .step-content h1,
  .step-content h2,
  .step-content h3,
  .step-content h4 {
    color: #d0d0d0 !important;
    text-shadow: 0 0 0.3px rgba(0, 217, 255, 0.15) !important;
  }

  /* Better form styling */
  .step-content input,
  .step-content textarea,
  .step-content select {
    background: rgba(20, 20, 20, 0.8) !important;
    border: 1px solid rgba(0, 217, 255, 0.3) !important;
    color: #c0c0c0 !important;
    text-shadow: none !important;
  }

  .step-content input:focus,
  .step-content textarea:focus,
  .step-content select:focus {
    border-color: rgba(0, 217, 255, 0.5) !important;
    box-shadow: 0 0 5px rgba(0, 217, 255, 0.2) !important;
  }

  /* Button improvements */
  .step-content button {
    background: rgba(0, 217, 255, 0.1) !important;
    color: #90c5d4 !important;
    border: 1px solid rgba(0, 217, 255, 0.3) !important;
    text-shadow: none !important;
    box-shadow: none !important;
  }

  .step-content button:hover {
    background: rgba(0, 217, 255, 0.2) !important;
    border-color: rgba(0, 217, 255, 0.5) !important;
    box-shadow: 0 1px 4px rgba(0, 217, 255, 0.2) !important;
  }

  /* Progress steps styling */
  .step-content .progress-step {
    color: #b0b0b0 !important;
    text-shadow: none !important;
  }

  .step-content .progress-step.active {
    color: #d0d0d0 !important;
    text-shadow: 0 0 0.3px rgba(0, 217, 255, 0.2) !important;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
