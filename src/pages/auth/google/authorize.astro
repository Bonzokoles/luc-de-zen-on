---
import MyBonzoLayout from "../../../layouts/MyBonzoLayout.astro";
---

<MyBonzoLayout title="Google Drive Authorization | MyBonzo">
  <main class="min-h-svh">
    <!-- Header Section -->
    <section class="border border-edge">
      <div class="max-w-6xl mx-auto border-x border-edge">
        <div class="flex justify-between max-h-72 min-h-64">
          <div class="mt-auto">
            <span
              style="writing-mode: vertical-lr;"
              class="text-edge block px-2 text-xl font-semibold tracking-[0.3em]"
            >
              GOOGLE
            </span>
          </div>
          <span class="mt-auto">
            <span
              style=""
              class="text-edge block px-2 text-xl font-semibold tracking-[0.3em]"
            >
              DRIVE
            </span>
          </span>
        </div>
      </div>
    </section>

    <!-- Navigation Section -->
    <section class="border border-edge">
      <div class="max-w-6xl mx-auto border-x border-edge">
        <div class="flex flex-row p-2">
          <a class="hover:brightness-125" href="/">
            <h1 class="text-4xl sm:text-5xl">GOOGLE DRIVE AUTHORIZATION</h1>
            <h2 class="text-2xl sm:text-3xl">Connect Your 2TB Drive to AI System</h2>
          </a>

          <div class="hidden ml-auto gap-4 md:gap-0 md:flex md:flex-col">
            <a class="ml-auto hover:brightness-125 duration-200" href="/">
              ‚Üê Powr√≥t do strony g≈Ç√≥wnej
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- Main Content -->
    <section
      class="auth-section flex items-center justify-center py-16"
      style="background: rgba(0, 0, 0, 0.5);"
    >
      <div class="section-container max-w-4xl mx-auto">
        <h2 class="section-title">PO≈ÅƒÑCZ GOOGLE DRIVE</h2>
        <p class="section-description">
          Autoryzuj dostƒôp do swojego Google Drive (2TB) dla lepszych rekomendacji AI
        </p>

        <!-- Authorization Steps -->
        <div class="auth-steps mt-8">
          
          <!-- Step 1: Check Status -->
          <div class="step-card" id="step1">
            <div class="step-header">
              <div class="step-number">1</div>
              <h3 class="step-title">Sprawd≈∫ status po≈ÇƒÖczenia</h3>
            </div>
            <div class="step-content">
              <div id="connectionStatus" class="status-display">
                <div class="status-item">
                  <span class="status-label">Status:</span>
                  <span class="status-value" id="driveConnectionStatus">Sprawdzanie...</span>
                </div>
                <div class="status-item">
                  <span class="status-label">Dostƒôp do danych:</span>
                  <span class="status-value" id="driveDataAccess">Nieznany</span>
                </div>
                <div class="status-item">
                  <span class="status-label">Ostatnia synchronizacja:</span>
                  <span class="status-value" id="lastSync">Nigdy</span>
                </div>
              </div>
              <button
                id="checkStatusBtn"
                onclick="checkDriveStatus()"
                class="action-btn secondary mt-4"
              >
                üîÑ Sprawd≈∫ status
              </button>
            </div>
          </div>

          <!-- Step 2: Authorize -->
          <div class="step-card" id="step2">
            <div class="step-header">
              <div class="step-number">2</div>
              <h3 class="step-title">Autoryzuj dostƒôp</h3>
            </div>
            <div class="step-content">
              <p class="text-gray-300 mb-4">
                Kliknij poni≈ºej, aby autoryzowaƒá dostƒôp do swojego Google Drive. 
                System bƒôdzie mia≈Ç dostƒôp tylko do odczytu Twoich plik√≥w.
              </p>
              
              <div class="permissions-info mb-4 p-4 bg-black/30 rounded border border-edge">
                <h4 class="text-sm font-semibold mb-2 text-primary-foreground">
                  Uprawnienia, o kt√≥re poprosimy:
                </h4>
                <ul class="text-sm text-gray-300 space-y-1">
                  <li>‚Ä¢ Odczyt metadanych plik√≥w (nazwy, rozmiary, daty)</li>
                  <li>‚Ä¢ Odczyt zawarto≈õci dokument√≥w tekstowych</li>
                  <li>‚Ä¢ Wyszukiwanie w Twoich plikach</li>
                  <li>‚Ä¢ <strong>NIE</strong> bƒôdziemy modyfikowaƒá ani usuwaƒá plik√≥w</li>
                </ul>
              </div>

              <button
                id="authorizeBtn"
                onclick="startAuthorization()"
                class="action-btn primary"
              >
                üîê Autoryzuj Google Drive
              </button>
            </div>
          </div>

          <!-- Step 3: Verify -->
          <div class="step-card" id="step3">
            <div class="step-header">
              <div class="step-number">3</div>
              <h3 class="step-title">Weryfikuj po≈ÇƒÖczenie</h3>
            </div>
            <div class="step-content">
              <p class="text-gray-300 mb-4">
                Po autoryzacji sprawdzimy dostƒôp do Twoich danych i przygotujemy system AI.
              </p>
              
              <div id="verificationResults" class="verification-results hidden">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div class="result-card">
                    <div class="result-title">Dane osobiste</div>
                    <div class="result-value" id="personalFiles">0 plik√≥w</div>
                    <div class="result-size" id="personalSize">0 GB</div>
                  </div>
                  <div class="result-card">
                    <div class="result-title">Dane biznesowe</div>
                    <div class="result-value" id="businessFiles">0 plik√≥w</div>
                    <div class="result-size" id="businessSize">0 GB</div>
                  </div>
                  <div class="result-card">
                    <div class="result-title">Dane techniczne</div>
                    <div class="result-value" id="technicalFiles">0 plik√≥w</div>
                    <div class="result-size" id="technicalSize">0 GB</div>
                  </div>
                </div>
              </div>

              <button
                id="verifyBtn"
                onclick="verifyConnection()"
                class="action-btn secondary"
                disabled
              >
                ‚úÖ Weryfikuj po≈ÇƒÖczenie
              </button>
            </div>
          </div>

          <!-- Step 4: Complete -->
          <div class="step-card" id="step4">
            <div class="step-header">
              <div class="step-number">4</div>
              <h3 class="step-title">Gotowe!</h3>
            </div>
            <div class="step-content">
              <div id="completionMessage" class="completion-message hidden">
                <div class="success-icon">‚úÖ</div>
                <h4 class="success-title">Google Drive po≈ÇƒÖczony!</h4>
                <p class="success-desc">
                  Tw√≥j Google Drive jest teraz zintegrowany z systemem AI MyBonzo. 
                  Mo≈ºesz korzystaƒá z zaawansowanych rekomendacji opartych na Twoich danych.
                </p>
                
                <div class="next-steps mt-4">
                  <h5 class="text-sm font-semibold mb-2 text-primary-foreground">Nastƒôpne kroki:</h5>
                  <div class="flex flex-col sm:flex-row gap-3">
                    <button
                      onclick="window.open('/ai-functions/personalized-recommendations', '_blank')"
                      class="action-btn primary"
                    >
                      üéØ Generuj rekomendacje
                    </button>
                    <button
                      onclick="testDriveIntegration()"
                      class="action-btn secondary"
                    >
                      üß™ Testuj integracjƒô
                    </button>
                    <button
                      onclick="window.open('/docs/google-drive-setup', '_blank')"
                      class="action-btn secondary"
                    >
                      üìñ Dokumentacja
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Security Notice -->
        <div class="security-notice mt-8 p-6 bg-black/30 rounded border border-edge">
          <h3 class="text-lg font-semibold mb-3 text-primary-foreground">
            üîí Bezpiecze≈Ñstwo i prywatno≈õƒá:
          </h3>
          <ul class="text-sm text-gray-300 space-y-2">
            <li>‚Ä¢ Twoje dane pozostajƒÖ w Twoim Google Drive</li>
            <li>‚Ä¢ System ma dostƒôp tylko do odczytu</li>
            <li>‚Ä¢ Nie przechowujemy Twoich plik√≥w na naszych serwerach</li>
            <li>‚Ä¢ Mo≈ºesz odwo≈Çaƒá dostƒôp w ka≈ºdej chwili w ustawieniach Google</li>
            <li>‚Ä¢ Wszystkie po≈ÇƒÖczenia sƒÖ szyfrowane (HTTPS)</li>
            <li>‚Ä¢ Tokeny dostƒôpu sƒÖ bezpiecznie przechowywane w Cloudflare</li>
          </ul>
        </div>
      </div>
    </section>
  </main>
</MyBonzoLayout>

<style>
  /* Base styles */
  .section-container {
    padding: 2rem;
    text-align: center;
  }

  .section-title {
    font-size: 3rem;
    font-weight: bold;
    color: #00bcd4;
    margin-bottom: 1rem;
    text-transform: uppercase;
    text-shadow: 0 0 20px rgba(0, 188, 212, 0.5);
  }

  .section-description {
    font-size: 1.25rem;
    color: #d1d5db;
    margin-bottom: 2rem;
  }

  /* Auth Steps */
  .auth-steps {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    max-width: 800px;
    margin: 0 auto;
  }

  .step-card {
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .step-card:hover {
    border-color: #00d7ef;
    background: rgba(0, 217, 255, 0.05);
  }

  .step-card.completed {
    border-color: #00ff00;
    background: rgba(0, 255, 0, 0.05);
  }

  .step-header {
    background: rgba(0, 0, 0, 0.5);
    border-bottom: 1px solid rgba(0, 217, 255, 0.3);
    padding: 1rem 1.5rem;
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .step-number {
    background: #00d7ef;
    color: #000;
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 1.125rem;
  }

  .step-title {
    color: #fff;
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
  }

  .step-content {
    padding: 1.5rem;
  }

  /* Status Display */
  .status-display {
    background: rgba(0, 0, 0, 0.4);
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 8px;
    padding: 1rem;
    margin-bottom: 1rem;
  }

  .status-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .status-item:last-child {
    border-bottom: none;
  }

  .status-label {
    color: #888;
    font-size: 0.875rem;
  }

  .status-value {
    color: #fff;
    font-weight: 600;
    font-family: 'Courier New', monospace;
  }

  .status-value.connected {
    color: #00ff00;
  }

  .status-value.disconnected {
    color: #ff4444;
  }

  .status-value.checking {
    color: #ffaa00;
  }

  /* Action Buttons */
  .action-btn {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    text-decoration: none;
    display: inline-block;
    text-align: center;
  }

  .action-btn.primary {
    background: #00d7ef;
    color: #000;
  }

  .action-btn.primary:hover {
    background: #00bcd4;
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 215, 239, 0.4);
  }

  .action-btn.secondary {
    background: rgba(0, 0, 0, 0.5);
    color: #00d7ef;
    border: 1px solid #00d7ef;
  }

  .action-btn.secondary:hover {
    background: rgba(0, 215, 239, 0.1);
    transform: translateY(-2px);
  }

  .action-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }

  /* Verification Results */
  .verification-results {
    margin-top: 1rem;
  }

  .result-card {
    background: rgba(0, 0, 0, 0.4);
    border: 1px solid rgba(0, 217, 255, 0.3);
    border-radius: 8px;
    padding: 1rem;
    text-align: center;
  }

  .result-title {
    color: #00d7ef;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .result-value {
    color: #fff;
    font-size: 1.25rem;
    font-weight: bold;
    margin-bottom: 0.25rem;
  }

  .result-size {
    color: #888;
    font-size: 0.875rem;
  }

  /* Completion Message */
  .completion-message {
    text-align: center;
    padding: 2rem;
  }

  .success-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
  }

  .success-title {
    color: #00ff00;
    font-size: 1.5rem;
    font-weight: bold;
    margin-bottom: 1rem;
  }

  .success-desc {
    color: #d1d5db;
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  /* Security Notice */
  .security-notice {
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(0, 217, 255, 0.3);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .section-title {
      font-size: 2rem;
    }
    
    .auth-steps {
      gap: 1.5rem;
    }
    
    .step-content {
      padding: 1rem;
    }
  }
</style>

<script>
  let authInProgress = false;

  // Check Drive status on page load
  document.addEventListener('DOMContentLoaded', () => {
    checkDriveStatus();
    
    // Check for authorization code in URL
    const urlParams = new URLSearchParams(window.location.search);
    const authCode = urlParams.get('code');
    
    if (authCode) {
      handleAuthorizationCallback(authCode);
    }
  });

  async function checkDriveStatus() {
    const statusBtn = document.getElementById('checkStatusBtn');
    const connectionStatus = document.getElementById('driveConnectionStatus');
    const dataAccess = document.getElementById('driveDataAccess');
    const lastSync = document.getElementById('lastSync');

    if (statusBtn) statusBtn.textContent = 'üîÑ Sprawdzanie...';
    if (connectionStatus) connectionStatus.textContent = 'Sprawdzanie...';

    try {
      const response = await fetch('/api/recommendations/drive-status');
      const data = await response.json();

      if (data.status === 'success' && data.drive.connected) {
        if (connectionStatus) {
          connectionStatus.textContent = 'PO≈ÅƒÑCZONY';
          connectionStatus.className = 'status-value connected';
        }
        if (dataAccess) {
          dataAccess.textContent = `${data.drive.usedSpace} / ${data.drive.totalSpace}`;
        }
        if (lastSync) {
          const syncDate = new Date(data.drive.lastSync);
          lastSync.textContent = syncDate.toLocaleString('pl-PL');
        }

        // Mark step 1 as completed
        const step1 = document.getElementById('step1');
        if (step1) step1.classList.add('completed');

        // Enable verification
        const verifyBtn = document.getElementById('verifyBtn');
        if (verifyBtn) verifyBtn.disabled = false;

      } else {
        if (connectionStatus) {
          connectionStatus.textContent = 'ROZ≈ÅƒÑCZONY';
          connectionStatus.className = 'status-value disconnected';
        }
        if (dataAccess) dataAccess.textContent = 'Brak dostƒôpu';
        if (lastSync) lastSync.textContent = 'Nigdy';
      }

    } catch (error) {
      console.error('Error checking drive status:', error);
      if (connectionStatus) {
        connectionStatus.textContent = 'B≈ÅƒÑD';
        connectionStatus.className = 'status-value disconnected';
      }
    } finally {
      if (statusBtn) statusBtn.textContent = 'üîÑ Sprawd≈∫ status';
    }
  }

  async function startAuthorization() {
    if (authInProgress) return;
    
    authInProgress = true;
    const authorizeBtn = document.getElementById('authorizeBtn');
    if (authorizeBtn) {
      authorizeBtn.textContent = 'üîÑ Przekierowywanie...';
      authorizeBtn.disabled = true;
    }

    try {
      // Get authorization URL from backend
      const response = await fetch('/api/auth/google/url');
      const data = await response.json();

      if (data.authUrl) {
        // Redirect to Google OAuth
        window.location.href = data.authUrl;
      } else {
        throw new Error('Failed to get authorization URL');
      }

    } catch (error) {
      console.error('Authorization error:', error);
      alert('B≈ÇƒÖd podczas autoryzacji: ' + error.message);
      
      if (authorizeBtn) {
        authorizeBtn.textContent = 'üîê Autoryzuj Google Drive';
        authorizeBtn.disabled = false;
      }
      authInProgress = false;
    }
  }

  async function handleAuthorizationCallback(authCode) {
    console.log('Handling authorization callback with code:', authCode);
    
    try {
      // Exchange code for tokens
      const response = await fetch('/api/auth/google/callback', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ code: authCode }),
      });

      const data = await response.json();

      if (data.success) {
        // Mark step 2 as completed
        const step2 = document.getElementById('step2');
        if (step2) step2.classList.add('completed');

        // Enable verification
        const verifyBtn = document.getElementById('verifyBtn');
        if (verifyBtn) verifyBtn.disabled = false;

        // Auto-verify
        setTimeout(() => {
          verifyConnection();
        }, 1000);

      } else {
        throw new Error(data.error || 'Authorization failed');
      }

    } catch (error) {
      console.error('Callback handling error:', error);
      alert('B≈ÇƒÖd podczas przetwarzania autoryzacji: ' + error.message);
    }
  }

  async function verifyConnection() {
    const verifyBtn = document.getElementById('verifyBtn');
    const verificationResults = document.getElementById('verificationResults');

    if (verifyBtn) {
      verifyBtn.textContent = 'üîÑ Weryfikowanie...';
      verifyBtn.disabled = true;
    }

    try {
      // Test drive access
      const response = await fetch('/api/recommendations/drive-test', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          testTypes: ['personal', 'business', 'technical']
        }),
      });

      const data = await response.json();

      if (data.success) {
        // Show verification results
        if (verificationResults) {
          verificationResults.classList.remove('hidden');
          
          // Update file counts
          const personalFiles = document.getElementById('personalFiles');
          const businessFiles = document.getElementById('businessFiles');
          const technicalFiles = document.getElementById('technicalFiles');
          
          if (personalFiles) personalFiles.textContent = `${data.results.personal.files} plik√≥w`;
          if (businessFiles) businessFiles.textContent = `${data.results.business.files} plik√≥w`;
          if (technicalFiles) technicalFiles.textContent = `${data.results.technical.files} plik√≥w`;
        }

        // Mark step 3 as completed
        const step3 = document.getElementById('step3');
        if (step3) step3.classList.add('completed');

        // Show completion message
        const completionMessage = document.getElementById('completionMessage');
        if (completionMessage) completionMessage.classList.remove('hidden');

        // Mark step 4 as completed
        const step4 = document.getElementById('step4');
        if (step4) step4.classList.add('completed');

      } else {
        throw new Error(data.error || 'Verification failed');
      }

    } catch (error) {
      console.error('Verification error:', error);
      alert('B≈ÇƒÖd podczas weryfikacji: ' + error.message);
    } finally {
      if (verifyBtn) {
        verifyBtn.textContent = '‚úÖ Weryfikuj po≈ÇƒÖczenie';
        verifyBtn.disabled = false;
      }
    }
  }

  async function testDriveIntegration() {
    try {
      const response = await fetch('/api/recommendations', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          userProfile: 'Test u≈ºytkownika - programista AI zainteresowany cloud computing',
          recommendationType: 'technology',
          selectedModels: ['gpt-4'],
          useGoogleDrive: true,
          driveDataTypes: ['personal', 'business']
        }),
      });

      const data = await response.json();
      
      if (data.status === 'success') {
        alert('Test integracji zako≈Ñczony sukcesem! Sprawd≈∫ konsolƒô dla szczeg√≥≈Ç√≥w.');
        console.log('Drive integration test results:', data);
      } else {
        throw new Error(data.error || 'Test failed');
      }

    } catch (error) {
      console.error('Integration test error:', error);
      alert('B≈ÇƒÖd podczas testu integracji: ' + error.message);
    }
  }

  // Make functions globally available
  window.checkDriveStatus = checkDriveStatus;
  window.startAuthorization = startAuthorization;
  window.verifyConnection = verifyConnection;
  window.testDriveIntegration = testDriveIntegration;
</script>

