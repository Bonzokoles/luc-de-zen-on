Zastąpimy statyczną listę ciekawostek dynamicznym pobieraniem danych z tego API. Dzięki temu komponent będzie zawsze wyświetlał aktualne wydarzenia historyczne bez potrzeby ręcznej aktualizacji kodu.
Zmodyfikuję plik RandomQuote.astro, aby wykorzystywał fetch do pobierania danych. Zmiany obejmą usunięcie obiektu facts i dodanie logiki do pobierania i przetwarzania danych z API.
Oto zaktualizowany kod dla pliku t:\MY_LUC_ZEN_ON\src\components\RandomQuote.astro. Podobnie jak poprzednio, możesz po prostu podmienić całą zawartość pliku.

---
// File: t:/MY_LUC_ZEN_ON/src/components/RandomQuote.astro
// Rozbudowany komponent z dynamicznym pobieraniem ciekawostek historycznych z API.

interface Quote {
  text: string;
  author: string;
  source?: string;
}

interface HistoricalEvent {
  year: string;
  text: string;
}

// 1. Rozbudowana lista cytatów (bez zmian)
const quotes: Quote[] = [
  {
    text: "The unexamined life is not worth living.",
    author: "Socrates",
    source: "https://en.wikipedia.org/wiki/Socrates"
  },
  {
    text: "I think, therefore I am.",
    author: "René Descartes",
    source: "https://en.wikipedia.org/wiki/Ren%C3%A9_Descartes"
  },
  {
    text: "Man is condemned to be free.",
    author: "Jean-Paul Sartre",
    source: "https://en.wikipedia.org/wiki/Jean-Paul_Sartre"
  },
  {
    text: "Two possibilities exist: either we are alone in the Universe or we are not. Both are equally terrifying.",
    author: "Arthur C. Clarke",
    source: "https://en.wikipedia.org/wiki/Arthur_C._Clarke"
  },
  {
    text: "To, co mnie nie zabije, czyni mnie silniejszym.",
    author: "Friedrich Nietzsche",
    source: "https://en.wikipedia.org/wiki/Friedrich_Nietzsche"
  },
  {
    text: "Granice mojego języka są granicami mojego świata.",
    author: "Ludwig Wittgenstein",
    source: "https://en.wikipedia.org/wiki/Ludwig_Wittgenstein"
  },
  {
    text: "Nie wolno się bać zmian, bo one tworzą przyszłość.",
    author: "Blade Runner (film)",
    source: "https://www.imdb.com/title/tt0083658/"
  },
  {
    text: "Two things are infinite: the universe and human stupidity; and I'm not sure about the universe.",
    author: "Albert Einstein",
    source: "https://en.wikipedia.org/wiki/Albert_Einstein"
  },
  {
    text: "Science fiction writers foresee the inevitable, and although problems and catastrophes may be inevitable, solutions are not.",
    author: "Isaac Asimov",
    source: "https://en.wikipedia.org/wiki/Isaac_Asimov"
  },
  {
    text: "Człowiek jest tym, czym są jego decyzje.",
    author: "Frank Herbert (Dune)",
    source: "https://en.wikipedia.org/wiki/Dune_(novel)"
  }
];

const currentQuote = quotes[Math.floor(Math.random() * quotes.length)];

// 2. Dynamiczne pobieranie "Ciekawostki dnia" z MuffinLabs API
const today = new Date();
const month = today.getMonth() + 1;
const day = today.getDate();
let historicalEvents: HistoricalEvent[] = [];

try {
  const response = await fetch(`http://history.muffinlabs.com/date/${month}/${day}`);
  if (response.ok) {
    const data = await response.json();
    // Pobieramy maksymalnie 2 pierwsze wydarzenia, aby nie zaśmiecać UI
    if (data?.data?.Events) {
      historicalEvents = data.data.Events.slice(0, 2);
    }
  }
} catch (error) {
  console.error("Błąd podczas pobierania ciekawostek historycznych:", error);
  // W przypadku błędu, tablica `historicalEvents` pozostanie pusta i sekcja się nie wyświetli.
}
---

<div class="rq-container">
  <!-- Sekcja z losowym cytatem -->
  {
    currentQuote.source ? (
      <a class="rq-quote" target="_blank" rel="noopener" href={currentQuote.source}>
        “{currentQuote.text}” <span class="rq-author">— {currentQuote.author}</span>
      </a>
    ) : (
      <div class="rq-quote">
        “{currentQuote.text}” <span class="rq-author">— {currentQuote.author}</span>
      </div>
    )
  }

  <!-- Sekcja z ciekawostką dnia (wyświetlana tylko, jeśli API zwróciło dane) -->
  {historicalEvents.length > 0 &&
    <div class="fact-of-the-day">
      <strong>Dziś w historii:</strong>
      <ul>
        {historicalEvents.map(event => <li><strong>{event.year}</strong> – {event.text}</li>)}
      </ul>
    </div>
  }
</div>

<style>
  .rq-container {
    font-family: "Rajdhani", system-ui, sans-serif;
    text-align: right;
  }
  .rq-quote {
    display: inline-block;
    color: #00d9ff;
    text-decoration: none;
    font-size: 0.9rem;
    line-height: 1.25rem;
    opacity: 0.9;
    margin-bottom: 1rem; /* Dodajemy margines, by oddzielić od ciekawostki */
  }
  .rq-quote:hover {
    opacity: 1;
    text-shadow: 0 0 8px rgba(0, 217, 255, 0.5);
  }
  .rq-author {
    color: #9bdfff;
    font-size: 0.85em;
  }

  /* Style dla "Ciekawostki dnia" */
  .fact-of-the-day {
    margin-top: 1rem;
    padding-top: 0.75rem;
    border-top: 1px solid rgba(155, 223, 255, 0.2);
    font-size: 0.85rem;
    color: #c0eaff;
    text-align: left;
  }
  .fact-of-the-day strong {
    color: #ffffff;
    font-weight: 600;
  }
  .fact-of-the-day ul {
    list-style-type: none; /* Usunięcie kropek */
    padding-left: 0;
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  .fact-of-the-day li {
    margin-bottom: 0.25rem;
  }
  .fact-of-the-day li strong {
    margin-right: 0.5em;
  }
</style>