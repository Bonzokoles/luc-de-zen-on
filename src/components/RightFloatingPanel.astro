---
// RightFloatingPanel.astro - Global right floating panel
import BackgroundMusicPlayerSimple from "./BackgroundMusicPlayerSimple.svelte";
import AiHelpAssistant from "./AiHelpAssistant.svelte";
---

<!-- Right Floating Panel - Fixed Right Side -->
<div class="right-panel-fixed">
  <div class="floating-widget-container">
    <button onclick="toggleMusicPlayer()" class="right-btn" id="musicPlayerBtn">
      üéµ MUSIC PLAYER
    </button>
    <div id="musicPlayerWidget" class="floating-widget hidden">
      <BackgroundMusicPlayerSimple client:load />
    </div>
  </div>

  <div class="floating-widget-container">
    <button
      onclick="togglePolaczekAssistant()"
      class="right-btn"
      id="polaczekBtn"
      title="AI Assistant do wyja≈õniania funkcji na stronie"
    >
      ü§ñ AI ASSISTANT
    </button>
    <div id="polaczekWidget" class="floating-widget hidden">
      <AiHelpAssistant client:load />
    </div>
  </div>

  <button onclick="openMainChat()" class="right-btn"> üí¨ MAIN CHAT </button>
  <button onclick="openRefresh()" class="right-btn"> üîÑ REFRESH </button>
  <button onclick="openFolder()" class="right-btn"> üìÅ FOLDER </button>
  <button onclick="openClose()" class="right-btn"> ‚ùå CLOSE </button>
</div>

<script is:inline>
  // Wait for DOM to be fully loaded
  document.addEventListener("DOMContentLoaded", function () {
    // Make functions globally available
    window.toggleMusicPlayer = toggleMusicPlayer;
    window.togglePolaczekAssistant = togglePolaczekAssistant;
    window.openMainChat = openMainChat;
    window.openRefresh = openRefresh;
    window.openFolder = openFolder;
    window.openClose = openClose;

    console.log("Right panel functions assigned to window object");
  });

  // Toggle Functions with Button Scaling
  function toggleMusicPlayer() {
    console.log("üéµ Toggling Music Player - Function called!");
    const btn = document.getElementById("musicPlayerBtn");
    const widget = document.getElementById("musicPlayerWidget");

    console.log("Music Player - btn:", btn, "widget:", widget);

    if (btn && widget) {
      // Button scaling effect
      btn.style.transform = "scale(1.1) translateY(-2px)";
      setTimeout(() => {
        btn.style.transform = "";
      }, 200);

      // Toggle widget visibility
      widget.classList.toggle("hidden");
      console.log(
        "Music Player widget toggled, hidden class:",
        widget.classList.contains("hidden")
      );
    } else {
      console.error("Music Player - Elements not found!");
    }
  }

  function togglePolaczekAssistant() {
    console.log("ü§ñ Toggling AI Assistant - Function called!");
    const btn = document.getElementById("polaczekBtn");
    const widget = document.getElementById("polaczekWidget");

    console.log("AI Assistant - btn:", btn, "widget:", widget);

    if (btn && widget) {
      // Button scaling effect
      btn.style.transform = "scale(1.1) translateY(-2px)";
      setTimeout(() => {
        btn.style.transform = "";
      }, 200);

      // Toggle widget visibility
      widget.classList.toggle("hidden");
      console.log(
        "AI Assistant widget toggled, hidden class:",
        widget.classList.contains("hidden")
      );
    } else {
      console.error("AI Assistant - Elements not found!");
    }
  }

  function openMainChat() {
    console.log("üí¨ Opening Main Chat");
    window.open("/chatbot", "_blank");
  }

  function openRefresh() {
    console.log("üîÑ Refreshing page");
    window.location.reload();
  }

  function openFolder() {
    console.log("üìÅ Opening folder");
    alert(
      "Otwieranie lokalnego folderu jest zablokowane przez przeglƒÖdarki ze wzglƒôd√≥w bezpiecze≈Ñstwa."
    );
  }

  function openClose() {
    console.log("‚ùå Closing tab");
    try {
      window.close();
    } catch (e) {
      alert("Zamykanie karty mo≈ºe byƒá zablokowane przez przeglƒÖdarkƒô.");
    }
  }
</script>

<style>
  /* Right panel - fixed right side - bottom */
  .right-panel-fixed {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 99999;
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .right-btn {
    background: rgba(0, 0, 0, 0.5);
    color: #00d7ef;
    padding: 12px 24px;
    border-radius: 0px;
    box-shadow: 0 4px 20px rgba(0, 217, 255, 0.3);
    font-size: 1.1rem;
    font-weight: 600;
    border: 1px solid rgba(0, 217, 255, 0.4);
    transition: all 0.2s ease;
    display: block;
    text-align: center;
    min-width: 220px;
    cursor: pointer;
  }

  .right-btn:hover {
    background: #00d7ef;
    color: #131e28;
    transform: translateY(-2px);
    box-shadow: 0 6px 25px rgba(0, 217, 255, 0.5);
  }

  .right-btn:active {
    transform: scale(1.05) translateY(-2px);
    box-shadow: 0 8px 30px rgba(0, 217, 255, 0.7);
  }

  /* Floating widget containers and widgets */
  .floating-widget-container {
    position: relative;
    display: block;
    width: 100%;
  }

  .floating-widget {
    position: absolute;
    bottom: 100%;
    right: 0;
    margin-bottom: 10px;
    background: rgba(0, 0, 0, 0.9);
    border: 1px solid rgba(0, 217, 255, 0.4);
    border-radius: 0px;
    box-shadow: 0 8px 32px rgba(0, 217, 255, 0.3);
    backdrop-filter: blur(16px);
    min-width: 350px;
    max-width: 1000px;
    max-height: 600px;
    overflow-y: auto;
    z-index: 100000;
    animation: slideUp 0.3s ease-out;
    transform-origin: bottom right;
  }

  /* Hide by default */
  .hidden {
    display: none !important;
  }

  /* Slide up animation */
  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  /* Specific positioning for AI Assistant widget */
  #polaczekWidget {
    right: 0;
    bottom: 100%;
  }
</style>
