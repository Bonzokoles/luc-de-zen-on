---
// Simple HTML/CSS chat history component without React
---

<div class="chat-history-container h-full">
  <div class="chat-messages" id="chatMessages">
    <!-- Messages will be injected here -->
  </div>
  
  <div class="chat-stats mt-2 text-xs text-gray-400">
    <span id="historyCount">0</span> obraz√≥w w historii
  </div>
</div>

<style>
  .chat-history-container {
    background: rgba(0,0,0,0.2);
    border: 1px solid rgba(79, 209, 197, 0.3);
    border-radius: 8px;
    padding: 1rem;
  }

  .chat-messages {
    height: 500px;
    overflow-y: auto;
    padding: 0.5rem 0;
  }

  /* Custom scrollbar */
  .chat-messages::-webkit-scrollbar {
    width: 4px;
  }

  .chat-messages::-webkit-scrollbar-track {
    background: rgba(0,0,0,0.2);
    border-radius: 2px;
  }

  .chat-messages::-webkit-scrollbar-thumb {
    background: linear-gradient(45deg, #4fd1c5, #9f7aea);
    border-radius: 2px;
  }

  .chat-message {
    display: flex;
    margin-bottom: 1rem;
    animation: slideIn 0.3s ease-out;
  }

  .message-avatar {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: linear-gradient(45deg, #4fd1c5, #9f7aea);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 16px;
    margin-right: 0.75rem;
    flex-shrink: 0;
  }

  .message-content {
    flex: 1;
    background: rgba(0,0,0,0.4);
    border: 1px solid rgba(147, 51, 234, 0.3);
    border-radius: 8px;
    padding: 0.75rem;
    position: relative;
  }

  .message-content::before {
    content: '';
    position: absolute;
    left: -8px;
    top: 12px;
    width: 0;
    height: 0;
    border-top: 6px solid transparent;
    border-bottom: 6px solid transparent;
    border-right: 8px solid rgba(147, 51, 234, 0.3);
  }

  .message-prompt {
    color: #e2e8f0;
    font-size: 0.875rem;
    margin-bottom: 0.5rem;
    line-height: 1.4;
  }

  .message-image {
    width: 60px;
    height: 60px;
    border-radius: 6px;
    object-fit: cover;
    border: 1px solid rgba(79, 209, 197, 0.5);
    cursor: pointer;
    transition: transform 0.2s ease;
  }

  .message-image:hover {
    transform: scale(1.05);
  }

  .message-timestamp {
    font-size: 0.75rem;
    color: #94a3b8;
    margin-top: 0.25rem;
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .empty-state {
    text-align: center;
    color: #64748b;
    padding: 2rem 1rem;
    font-size: 0.875rem;
  }

  .empty-state-icon {
    font-size: 2rem;
    margin-bottom: 0.5rem;
    opacity: 0.5;
  }
</style>

<script>
  // Chat history functionality
  function loadChatHistory() {
    const messagesContainer = document.getElementById('chatMessages');
    const historyCount = document.getElementById('historyCount');
    
    if (!messagesContainer || !historyCount) return;

    try {
      const history = JSON.parse(localStorage.getItem('imageGeneratorHistory') || '[]');
      
      if (history.length === 0) {
        messagesContainer.innerHTML = `
          <div class="empty-state">
            <div class="empty-state-icon">üí≠</div>
            <div>Brak historii generacji</div>
            <div style="font-size: 0.75rem; margin-top: 0.5rem; color: #64748b;">Wygeneruj pierwszy obraz aby zobaczyƒá historiƒô</div>
          </div>
        `;
        historyCount.textContent = '0';
        return;
      }

      // Sort by timestamp (newest first)
      const sortedHistory = history.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));
      
      // Take only last 15 items
      const recentHistory = sortedHistory.slice(0, 15);
      
      messagesContainer.innerHTML = recentHistory.map((item, index) => {
        const timestamp = new Date(item.timestamp).toLocaleString('pl-PL', {
          day: '2-digit',
          month: '2-digit',
          hour: '2-digit',
          minute: '2-digit'
        });
        
        const shortPrompt = item.prompt.length > 80 ? 
          item.prompt.substring(0, 80) + '...' : 
          item.prompt;

        return `
          <div class="chat-message">
            <div class="message-avatar">üé®</div>
            <div class="message-content">
              <div class="message-prompt">${shortPrompt}</div>
              <img 
                src="${item.imageUrl}" 
                alt="Generated image" 
                class="message-image"
                onclick="openImagePreview('${item.imageUrl}', '${item.prompt.replace(/'/g, "\\'")}');"
              />
              <div class="message-timestamp">${timestamp}</div>
            </div>
          </div>
        `;
      }).join('');
      
      historyCount.textContent = history.length.toString();
      
      // Scroll to top
      messagesContainer.scrollTop = 0;
      
    } catch (error) {
      console.error('Error loading chat history:', error);
      messagesContainer.innerHTML = `
        <div class="empty-state">
          <div class="empty-state-icon">‚ö†Ô∏è</div>
          <div>B≈ÇƒÖd ≈Çadowania historii</div>
        </div>
      `;
    }
  }

  // Listen for refresh events
  window.addEventListener('refreshChatHistory', loadChatHistory);
  
  // Load on page load
  document.addEventListener('DOMContentLoaded', loadChatHistory);
  
  // Refresh every 5 seconds
  setInterval(loadChatHistory, 5000);

  // Global function for image preview
  window.openImagePreview = function(imageUrl, prompt) {
    // Use existing modal from image generator
    const modal = document.getElementById('imageModal');
    const modalImage = document.getElementById('modalImage');
    const modalPrompt = document.getElementById('modalPrompt');
    
    if (modal && modalImage && modalPrompt) {
      modalImage.src = imageUrl;
      modalPrompt.textContent = prompt;
      modal.classList.remove('hidden');
    }
  };
</script>