---
// AI Workers Navigation Component
---

<section class="ai-workers-section" id="ai-workers">
  <div class="section-container">
    <h2 class="section-title">AI WORKERS</h2>
    <p class="section-description">
      Zaawansowane narzędzia AI dostępne na platformie
    </p>

    <!-- System Control Buttons -->
    <div class="tags-section">
      <button
        class="tag-btn"
        onclick="window.open('/polaczek-agents-system', '_blank')"
      >
        POLACZEK_AGENT_SYS_23
      </button>
      <button
        class="tag-btn"
        onclick="window.open('/bielik-enon-dev', '_blank')"
      >
        BIELIK
      </button>
      <button
        class="tag-btn"
        onclick="window.open('/zenon-mcp-server', '_blank')"
      >
        ZENON
      </button>
      <button
        class="tag-btn"
        onclick="window.open('/klf-sheed-shop', '_blank')"
      >
        KLF_SHEED_SHOOP
      </button>
    </div>

    <div class="workers-grid">
      <!-- Image Generator -->
      <div class="worker-card" data-worker="image">
        <h3 class="worker-title">Generator Obrazów</h3>
        <p class="worker-description">
          Twórz niesamowite obrazy z tekstu używając Flux-1 Schnell
        </p>
        <div class="worker-features">
          <span class="feature-tag">Flux AI</span>
          <span class="feature-tag">512-1024px</span>
          <span class="feature-tag">Tłumaczenie PL</span>
        </div>
        <div class="worker-actions">
          <input
            type="text"
            placeholder="Opisz obraz..."
            class="quick-prompt"
            id="imagePrompt"
          />
          <button class="action-btn primary" onclick="openImageGenerator()"
            >Generuj</button
          >
          <button
            class="action-btn secondary"
            onclick="window.open('/image-generator', '_blank')">Otwórz</button
          >
        </div>
      </div>

      <!-- AI Chatbot -->
      <div class="worker-card" data-worker="chat">
        <h3 class="worker-title">AI Chatbot</h3>
        <p class="worker-description">
          Inteligentny asystent do rozmów i odpowiadania na pytania
        </p>
        <div class="worker-features">
          <span class="feature-tag">OpenAI GPT</span>
          <span class="feature-tag">Język polski</span>
          <span class="feature-tag">Kontekst</span>
        </div>
        <div class="worker-actions">
          <input
            type="text"
            placeholder="Zadaj pytanie..."
            class="quick-prompt"
            id="chatPrompt"
          />
          <button class="action-btn primary" onclick="openChatbot()"
            >Chat</button
          >
          <button
            class="action-btn secondary"
            onclick="window.open('/chatbot', '_blank')">Otwórz</button
          >
        </div>
      </div>

      <!-- BigQuery Analytics -->
      <div class="worker-card" data-worker="bigquery">
        <h3 class="worker-title">BigQuery Analytics</h3>
        <p class="worker-description">
          Analizuj dane z Google BigQuery, wykonuj zapytania SQL
        </p>
        <div class="worker-features">
          <span class="feature-tag">Google Cloud</span>
          <span class="feature-tag">SQL Query</span>
          <span class="feature-tag">Analytics</span>
        </div>
        <div class="worker-actions">
          <input
            type="text"
            placeholder="SELECT * FROM..."
            class="quick-prompt"
            id="bigqueryPrompt"
          />
          <button class="action-btn primary" onclick="openBigQuery()"
            >Analizuj</button
          >
          <button
            class="action-btn secondary"
            onclick="window.open('/bigquery-analytics', '_blank')"
            >Otwórz</button
          >
        </div>
      </div>

      <!-- Kaggle Datasets -->
      <div class="worker-card" data-worker="kaggle">
        <h3 class="worker-title">Kaggle Datasets</h3>
        <p class="worker-description">
          Przeszukuj zbiory danych, konkursy i profile Kaggle
        </p>
        <div class="worker-features">
          <span class="feature-tag">Machine Learning</span>
          <span class="feature-tag">Datasets</span>
          <span class="feature-tag">Competitions</span>
        </div>
        <div class="worker-actions">
          <input
            type="text"
            placeholder="machine learning..."
            class="quick-prompt"
            id="kagglePrompt"
          />
          <button class="action-btn primary" onclick="openKaggle()"
            >Wyszukaj</button
          >
          <button
            class="action-btn secondary"
            onclick="window.open('/kaggle-datasets', '_blank')">Otwórz</button
          >
        </div>
      </div>

      <!-- Tavily Search -->
      <div class="worker-card" data-worker="tavily">
        <h3 class="worker-title">Tavily AI Search</h3>
        <p class="worker-description">
          Zaawansowane wyszukiwanie internetowe powered by AI
        </p>
        <div class="worker-features">
          <span class="feature-tag">AI Search</span>
          <span class="feature-tag">Real-time</span>
          <span class="feature-tag">Deep Analysis</span>
        </div>
        <div class="worker-actions">
          <input
            type="text"
            placeholder="wyszukaj w sieci..."
            class="quick-prompt"
            id="tavilyPrompt"
          />
          <button class="action-btn primary" onclick="openTavily()"
            >Szukaj</button
          >
          <button
            class="action-btn secondary"
            onclick="window.open('/tavily-search', '_blank')">Otwórz</button
          >
        </div>
      </div>

      <!-- Status Monitor -->
      <div class="worker-card" data-worker="status">
        <h3 class="worker-title">Status Workerów</h3>
        <p class="worker-description">
          Sprawdź status i dostępność wszystkich API workerów
        </p>
        <div class="worker-features">
          <span class="feature-tag">Health Check</span>
          <span class="feature-tag">Monitoring</span>
          <span class="feature-tag">API Status</span>
        </div>
        <div class="worker-actions">
          <div class="status-indicator" id="overallStatus">
            <span class="status-dot"></span>
            <span>Sprawdzanie...</span>
          </div>
          <button class="action-btn primary" onclick="checkAllStatus()"
            >Sprawdź wszystkie</button
          >
          <button
            class="action-btn secondary"
            onclick="window.open('/status', '_blank')">Otwórz</button
          >
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .ai-workers-section {
    padding: 4rem 0;
    background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
    color: white;
  }

  .section-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .section-title {
    font-size: 3rem;
    font-weight: bold;
    text-align: center;
    margin-bottom: 1rem;
    background: linear-gradient(45deg, #00d4ff, #5b73ff);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .section-description {
    text-align: center;
    font-size: 1.2rem;
    opacity: 0.8;
    margin-bottom: 3rem;
  }

  .tags-section {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 3rem;
    flex-wrap: wrap;
  }

  .tag-btn {
    background: linear-gradient(45deg, #ff6b35, #f7931e);
    color: white;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 25px;
    font-weight: bold;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.3s ease;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .tag-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(255, 107, 53, 0.4);
  }

  .workers-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }

  .worker-card {
    background: rgba(0, 0, 0, 0.4);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 2rem;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }

  .worker-card:hover {
    transform: translateY(-5px);
    border-color: #00d4ff;
    box-shadow: 0 15px 35px rgba(0, 212, 255, 0.2);
  }

  .worker-title {
    font-size: 1.5rem;
    font-weight: bold;
    margin-bottom: 1rem;
    color: #00d4ff;
  }

  .worker-description {
    opacity: 0.8;
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  .worker-features {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
  }

  .feature-tag {
    background: rgba(0, 212, 255, 0.2);
    color: #00d4ff;
    padding: 0.3rem 0.8rem;
    border-radius: 15px;
    font-size: 0.8rem;
    border: 1px solid rgba(0, 212, 255, 0.3);
  }

  .worker-actions {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .quick-prompt {
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    padding: 0.8rem;
    color: white;
    font-size: 1rem;
    width: 100%;
  }

  .quick-prompt:focus {
    outline: none;
    border-color: #00d4ff;
    box-shadow: 0 0 0 2px rgba(0, 212, 255, 0.2);
  }

  .quick-prompt::placeholder {
    color: #888;
  }

  .action-btn {
    padding: 0.8rem 1.5rem;
    border: none;
    border-radius: 8px;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 1rem;
  }

  .action-btn.primary {
    background: linear-gradient(45deg, #00d4ff, #5b73ff);
    color: white;
  }

  .action-btn.primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 212, 255, 0.4);
  }

  .action-btn.secondary {
    background: transparent;
    color: #00d4ff;
    border: 1px solid #00d4ff;
  }

  .action-btn.secondary:hover {
    background: #00d4ff;
    color: white;
  }

  .status-indicator {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.8rem;
    background: rgba(0, 0, 0, 0.3);
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .status-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: #ffa500;
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  @media (max-width: 768px) {
    .workers-grid {
      grid-template-columns: 1fr;
    }

    .section-title {
      font-size: 2rem;
    }

    .worker-card {
      padding: 1.5rem;
    }
  }
</style>

<script>
  // Image Generator
  function openImageGenerator() {
    const prompt = (
      document.getElementById("imagePrompt") as HTMLInputElement
    )?.value.trim();
    if (prompt) {
      localStorage.setItem("quickImagePrompt", prompt);
    }
    window.open("/image-generator", "_blank");
  }

  // Chatbot
  function openChatbot() {
    const prompt = (
      document.getElementById("chatPrompt") as HTMLInputElement
    )?.value.trim();
    if (prompt) {
      localStorage.setItem("quickChatPrompt", prompt);
    }
    window.open("/chatbot", "_blank");
  }

  // BigQuery
  function openBigQuery() {
    const prompt = (
      document.getElementById("bigqueryPrompt") as HTMLInputElement
    )?.value.trim();
    if (prompt) {
      localStorage.setItem("quickSQLQuery", prompt);
    }
    window.open("/bigquery-analytics", "_blank");
  }

  // Kaggle
  function openKaggle() {
    const prompt = (
      document.getElementById("kagglePrompt") as HTMLInputElement
    )?.value.trim();
    if (prompt) {
      localStorage.setItem("quickKaggleSearch", prompt);
    }
    window.open("/kaggle-datasets", "_blank");
  }

  // Tavily
  function openTavily() {
    const prompt = (
      document.getElementById("tavilyPrompt") as HTMLInputElement
    )?.value.trim();
    if (prompt) {
      localStorage.setItem("quickTavilySearch", prompt);
    }
    window.open("/tavily-search", "_blank");
  }

  // Status Check
  function checkAllStatus() {
    const endpoints = [
      "/api/image-generator",
      "/api/chatbot",
      "/api/bigquery",
      "/api/kaggle",
      "/api/tavily",
      "/api/status",
    ];

    const statusIndicator = document.getElementById("overallStatus");
    if (statusIndicator) {
      statusIndicator.innerHTML =
        '<span class="status-dot"></span><span>Sprawdzanie...</span>';
    }

    // Simulate status check
    setTimeout(() => {
      if (statusIndicator) {
        statusIndicator.innerHTML =
          '<span class="status-dot" style="background: #00ff00;"></span><span>Wszystko działa</span>';
      }
    }, 2000);
  }

  // Quick action handlers
  document.addEventListener("DOMContentLoaded", function () {
    const prompts = document.querySelectorAll(".quick-prompt");
    prompts.forEach((prompt) => {
      prompt.addEventListener("keypress", function (e) {
        if (e.key === "Enter") {
          const workerId = (e.target as HTMLElement)
            .closest(".worker-card")
            ?.getAttribute("data-worker");
          const handlers: { [key: string]: () => void } = {
            image: openImageGenerator,
            chat: openChatbot,
            bigquery: openBigQuery,
            kaggle: openKaggle,
            tavily: openTavily,
          };

          if (workerId && handlers[workerId]) {
            handlers[workerId]();
          }
        }
      });
    });
  });
</script>
