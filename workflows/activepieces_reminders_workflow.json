{
  "name": "Smart Reminders Notification System",
  "description": "WielokanaÅ‚owe powiadomienia o przypomnieniach dla systemu mybonzo",
  "version": "1.0.0",
  "trigger": {
    "type": "schedule",
    "displayName": "Reminder Check Schedule",
    "settings": {
      "cronExpression": "*/15 * * * *",
      "timezone": "Europe/Warsaw"
    },
    "description": "Sprawdzaj przypomnienia co 15 minut"
  },
  "steps": [
    {
      "id": "fetch_reminders",
      "type": "httpRequest",
      "displayName": "Fetch Active Reminders",
      "settings": {
        "method": "GET",
        "url": "https://api.mybonzo.com/api/reminders",
        "headers": {
          "Content-Type": "application/json",
          "Authorization": "Bearer <MYBONZO_API_KEY>"
        },
        "queryParams": {
          "status": "active",
          "due_soon": "true"
        }
      },
      "description": "Pobierz aktywne przypomnienia z API"
    },
    {
      "id": "filter_due_reminders",
      "type": "function",
      "displayName": "Filter Due Reminders",
      "settings": {
        "code": "const now = new Date(); const reminders = steps.fetch_reminders.body || []; const dueReminders = reminders.filter(reminder => { const dueTime = new Date(reminder.dueDateTime); const timeDiff = dueTime.getTime() - now.getTime(); const minutesDiff = Math.floor(timeDiff / (1000 * 60)); return minutesDiff >= 0 && minutesDiff <= 15; }); return dueReminders;"
      },
      "description": "Filtruj przypomnienia naleÅ¼ne w najbliÅ¼szych 15 minutach"
    },
    {
      "id": "process_each_reminder",
      "type": "loop",
      "displayName": "Process Each Reminder",
      "settings": {
        "items": "{{steps.filter_due_reminders.output}}",
        "steps": [
          {
            "id": "check_notification_preference",
            "type": "switch",
            "displayName": "Check Notification Preference",
            "settings": {
              "conditions": [
                {
                  "condition": "{{item.notificationSettings.email}} === true",
                  "steps": [
                    {
                      "id": "send_email_notification",
                      "type": "sendEmail",
                      "displayName": "Send Email Reminder",
                      "settings": {
                        "to": "{{item.userEmail || 'admin@mybonzo.com'}}",
                        "subject": "ðŸ”” Przypomnienie z MyBonzo - {{item.title}}",
                        "htmlBody": "<div style='font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; border-radius: 10px; color: white;'><h2 style='color: #00ffff; text-align: center;'>ðŸ“… Przypomnienie MyBonzo</h2><div style='background: rgba(255,255,255,0.1); padding: 15px; border-radius: 8px; margin: 20px 0;'><h3>{{item.title}}</h3><p><strong>Opis:</strong> {{item.description}}</p><p><strong>Termin:</strong> {{item.dueDateTime}}</p><p><strong>Priorytet:</strong> <span style='color: {{item.priority === \"HIGH\" ? \"#ff4444\" : item.priority === \"MEDIUM\" ? \"#ffaa00\" : \"#44ff44\"}};'>{{item.priority}}</span></p></div><p style='text-align: center; color: #cccccc;'>Powiadomienie wysÅ‚ane automatycznie przez system MyBonzo</p></div>",
                        "textBody": "ðŸ”” Przypomnienie MyBonzo\n\nTytuÅ‚: {{item.title}}\nOpis: {{item.description}}\nTermin: {{item.dueDateTime}}\nPriorytet: {{item.priority}}\n\nPowiadomienie wysÅ‚ane automatycznie przez system MyBonzo"
                      }
                    }
                  ]
                },
                {
                  "condition": "{{item.notificationSettings.sms}} === true && {{item.userPhone}}",
                  "steps": [
                    {
                      "id": "send_sms_notification",
                      "type": "sendSMS",
                      "displayName": "Send SMS Reminder",
                      "settings": {
                        "to": "{{item.userPhone}}",
                        "message": "ðŸ”” MyBonzo: {{item.title}} - {{item.description}} | Termin: {{item.dueDateTime}} | Priorytet: {{item.priority}}"
                      }
                    }
                  ]
                },
                {
                  "condition": "{{item.notificationSettings.push}} === true",
                  "steps": [
                    {
                      "id": "send_push_notification",
                      "type": "pushNotification",
                      "displayName": "Send Push Notification",
                      "settings": {
                        "userId": "{{item.userId}}",
                        "title": "ðŸ”” Przypomnienie MyBonzo",
                        "message": "{{item.title}} - {{item.description}}",
                        "data": {
                          "reminderId": "{{item.id}}",
                          "priority": "{{item.priority}}",
                          "dueDateTime": "{{item.dueDateTime}}"
                        }
                      }
                    }
                  ]
                }
              ],
              "defaultSteps": [
                {
                  "id": "log_no_notification",
                  "type": "function",
                  "displayName": "Log No Notification Sent",
                  "settings": {
                    "code": "console.log(`No notification preferences set for reminder: ${item.title}`); return { status: 'skipped', reason: 'no_notification_preferences', reminderId: item.id };"
                  }
                }
              ]
            }
          },
          {
            "id": "update_reminder_status",
            "type": "httpRequest",
            "displayName": "Update Reminder Status",
            "settings": {
              "method": "PATCH",
              "url": "https://api.mybonzo.com/api/reminders/{{item.id}}",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "Bearer <MYBONZO_API_KEY>"
              },
              "body": {
                "lastNotificationSent": "{{new Date().toISOString()}}",
                "notificationStatus": "sent"
              }
            },
            "description": "Aktualizuj status przypomnienia po wysÅ‚aniu powiadomienia"
          }
        ]
      }
    },
    {
      "id": "log_summary",
      "type": "function",
      "displayName": "Log Processing Summary",
      "settings": {
        "code": "const totalReminders = steps.filter_due_reminders.output.length; console.log(`Processed ${totalReminders} due reminders at ${new Date().toISOString()}`); return { processedAt: new Date().toISOString(), totalReminders, status: 'completed' };"
      },
      "description": "Zaloguj podsumowanie przetwarzania"
    }
  ],
  "errorHandling": {
    "retryAttempts": 3,
    "retryDelay": 5000,
    "continueOnError": true
  },
  "settings": {
    "notification_channels": {
      "email": {
        "enabled": true,
        "from": "noreply@mybonzo.com",
        "template": "cyberpunk"
      },
      "sms": {
        "enabled": true,
        "provider": "twilio",
        "maxLength": 160
      },
      "push": {
        "enabled": true,
        "provider": "firebase"
      }
    },
    "reminder_settings": {
      "check_interval_minutes": 15,
      "advance_warning_minutes": 15,
      "max_notifications_per_reminder": 3
    }
  }
}
